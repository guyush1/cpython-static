# Top-level Makefile for Python
#
# As distributed, this file is called Makefile.pre.in; it is processed
# into the real Makefile by running the script ./configure, which
# replaces things like @spam@ with values appropriate for your system.
# This means that if you edit Makefile, your changes get lost the next
# time you run the configure script.  Ideally, you can do:
#
#	./configure
#	make
#	make test
#	make install
#
# If you have a previous version of Python installed that you don't
# want to overwrite, you can use "make altinstall" instead of "make
# install".  Refer to the "Installing" section in the README file for
# additional details.
#
# See also the section "Build instructions" in the README file.

# === Variables set by makesetup ===

MODBUILT_NAMES=    _MODBUILT_NAMES_
MODSHARED_NAMES=   _MODSHARED_NAMES_
MODDISABLED_NAMES= _MODDISABLED_NAMES_
MODOBJS=           _MODOBJS_
MODLIBS=           _MODLIBS_

# === Variables set by configure
VERSION=	@VERSION@
srcdir=		@srcdir@
VPATH=		@srcdir@
abs_srcdir=	@abs_srcdir@
abs_builddir=	@abs_builddir@


CC=		@CC@
CXX=		@CXX@
LINKCC=		@LINKCC@
AR=		@AR@
READELF=	@READELF@
SOABI=		@SOABI@
LDVERSION=	@LDVERSION@
LIBPYTHON=	@LIBPYTHON@
GITVERSION=	@GITVERSION@
GITTAG=		@GITTAG@
GITBRANCH=	@GITBRANCH@
PGO_PROF_GEN_FLAG=@PGO_PROF_GEN_FLAG@
PGO_PROF_USE_FLAG=@PGO_PROF_USE_FLAG@
LLVM_PROF_MERGER=@LLVM_PROF_MERGER@
LLVM_PROF_FILE=@LLVM_PROF_FILE@
LLVM_PROF_ERR=@LLVM_PROF_ERR@
DTRACE=         @DTRACE@
DFLAGS=         @DFLAGS@
DTRACE_HEADERS= @DTRACE_HEADERS@
DTRACE_OBJS=    @DTRACE_OBJS@
DSYMUTIL=       @DSYMUTIL@
DSYMUTIL_PATH=  @DSYMUTIL_PATH@

GNULD=		@GNULD@

# Shell used by make (some versions default to the login shell, which is bad)
SHELL=		/bin/sh -e

# Use this to make a link between python$(VERSION) and python in $(BINDIR)
LN=		@LN@

# Portable install script (configure doesn't always guess right)
INSTALL=	@INSTALL@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
INSTALL_SCRIPT= @INSTALL_SCRIPT@
INSTALL_DATA=	@INSTALL_DATA@
# Shared libraries must be installed with executable mode on some systems;
# rather than figuring out exactly which, we always give them executable mode.
INSTALL_SHARED= ${INSTALL} -m 755

MKDIR_P=	@MKDIR_P@

MAKESETUP=      $(srcdir)/Modules/makesetup

# Compiler options
OPT=		@OPT@
BASECFLAGS=	@BASECFLAGS@
BASECPPFLAGS=	@BASECPPFLAGS@
CONFIGURE_CFLAGS=	@CFLAGS@
# CFLAGS_NODIST is used for building the interpreter and stdlib C extensions.
# Use it when a compiler flag should _not_ be part of the distutils CFLAGS
# once Python is installed (Issue #21121).
CONFIGURE_CFLAGS_NODIST=@CFLAGS_NODIST@
# LDFLAGS_NODIST is used in the same manner as CFLAGS_NODIST.
# Use it when a linker flag should _not_ be part of the distutils LDFLAGS
# once Python is installed (bpo-35257)
CONFIGURE_LDFLAGS_NODIST=@LDFLAGS_NODIST@
# LDFLAGS_NOLTO is an extra flag to disable lto. It is used to speed up building
# of _bootstrap_python and _freeze_module tools, which don't need LTO.
CONFIGURE_LDFLAGS_NOLTO=@LDFLAGS_NOLTO@
CONFIGURE_CPPFLAGS=	@CPPFLAGS@
CONFIGURE_LDFLAGS=	@LDFLAGS@
# Avoid assigning CFLAGS, LDFLAGS, etc. so users can use them on the
# command line to append to these values without stomping the pre-set
# values.
PY_CFLAGS=	$(BASECFLAGS) $(OPT) $(CONFIGURE_CFLAGS) $(CFLAGS) $(EXTRA_CFLAGS)
PY_CFLAGS_NODIST=$(CONFIGURE_CFLAGS_NODIST) $(CFLAGS_NODIST) -I$(srcdir)/Include/internal
# Both CPPFLAGS and LDFLAGS need to contain the shell's value for setup.py to
# be able to build extension modules using the directories specified in the
# environment variables
PY_CPPFLAGS=	$(BASECPPFLAGS) -I. -I$(srcdir)/Include $(CONFIGURE_CPPFLAGS) $(CPPFLAGS)
PY_LDFLAGS=	$(CONFIGURE_LDFLAGS) $(LDFLAGS)
PY_LDFLAGS_NODIST=$(CONFIGURE_LDFLAGS_NODIST) $(LDFLAGS_NODIST)
PY_LDFLAGS_NOLTO=$(PY_LDFLAGS) $(CONFIGURE_LDFLAGS_NOLTO) $(LDFLAGS_NODIST)
NO_AS_NEEDED=	@NO_AS_NEEDED@
CCSHARED=	@CCSHARED@
# LINKFORSHARED are the flags passed to the $(CC) command that links
# the python executable -- this is only needed for a few systems
LINKFORSHARED=	@LINKFORSHARED@
ARFLAGS=	@ARFLAGS@
# Extra C flags added for building the interpreter object files.
CFLAGSFORSHARED=@CFLAGSFORSHARED@
# C flags used for building the interpreter object files
PY_STDMODULE_CFLAGS= $(PY_CFLAGS) $(PY_CFLAGS_NODIST) $(PY_CPPFLAGS) $(CFLAGSFORSHARED)
PY_BUILTIN_MODULE_CFLAGS= $(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE_BUILTIN
PY_CORE_CFLAGS=	$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE
# Linker flags used for building the interpreter object files
PY_CORE_LDFLAGS=$(PY_LDFLAGS) $(PY_LDFLAGS_NODIST)
# Strict or non-strict aliasing flags used to compile dtoa.c, see above
CFLAGS_ALIASING=@CFLAGS_ALIASING@


# Machine-dependent subdirectories
MACHDEP=	@MACHDEP@

# Multiarch directory (may be empty)
MULTIARCH=	@MULTIARCH@
MULTIARCH_CPPFLAGS = @MULTIARCH_CPPFLAGS@

# Install prefix for architecture-independent files
prefix=		@prefix@

# Install prefix for architecture-dependent files
exec_prefix=	@exec_prefix@

# Install prefix for data files
datarootdir=    @datarootdir@

# Expanded directories
BINDIR=		@bindir@
LIBDIR=		@libdir@
MANDIR=		@mandir@
INCLUDEDIR=	@includedir@
CONFINCLUDEDIR=	$(exec_prefix)/include
PLATLIBDIR=	@PLATLIBDIR@
SCRIPTDIR=	$(prefix)/$(PLATLIBDIR)
ABIFLAGS=	@ABIFLAGS@
# executable name for shebangs
EXENAME=	$(BINDIR)/python$(LDVERSION)$(EXE)
# Variable used by ensurepip
WHEEL_PKG_DIR=	@WHEEL_PKG_DIR@

# Detailed destination directories
BINLIBDEST=	@BINLIBDEST@
LIBDEST=	$(SCRIPTDIR)/python$(VERSION)
INCLUDEPY=	$(INCLUDEDIR)/python$(LDVERSION)
CONFINCLUDEPY=	$(CONFINCLUDEDIR)/python$(LDVERSION)

# Symbols used for using shared libraries
SHLIB_SUFFIX=	@SHLIB_SUFFIX@
EXT_SUFFIX=	@EXT_SUFFIX@
LDSHARED=	@LDSHARED@ $(PY_LDFLAGS)
BLDSHARED=	@BLDSHARED@ $(PY_CORE_LDFLAGS)
LDCXXSHARED=	@LDCXXSHARED@ $(PY_LDFLAGS)
DESTSHARED=	$(BINLIBDEST)/lib-dynload

# List of exported symbols for AIX
EXPORTSYMS=	@EXPORTSYMS@
EXPORTSFROM=	@EXPORTSFROM@

# Executable suffix (.exe on Windows and Mac OS X)
EXE=		@EXEEXT@
BUILDEXE=	@BUILDEXEEXT@

# Short name and location for Mac OS X Python framework
UNIVERSALSDK=@UNIVERSALSDK@
PYTHONFRAMEWORK=	@PYTHONFRAMEWORK@
PYTHONFRAMEWORKDIR=	@PYTHONFRAMEWORKDIR@
PYTHONFRAMEWORKPREFIX=	@PYTHONFRAMEWORKPREFIX@
PYTHONFRAMEWORKINSTALLDIR= @PYTHONFRAMEWORKINSTALLDIR@
# Deployment target selected during configure, to be checked
# by distutils. The export statement is needed to ensure that the
# deployment target is active during build.
MACOSX_DEPLOYMENT_TARGET=@CONFIGURE_MACOSX_DEPLOYMENT_TARGET@
@EXPORT_MACOSX_DEPLOYMENT_TARGET@export MACOSX_DEPLOYMENT_TARGET

# Option to install to strip binaries
STRIPFLAG=-s

# Flags to lipo to produce a 32-bit-only universal executable
LIPO_32BIT_FLAGS=@LIPO_32BIT_FLAGS@

# Flags to lipo to produce an intel-64-only universal executable
LIPO_INTEL64_FLAGS=@LIPO_INTEL64_FLAGS@

# Environment to run shared python without installed libraries
RUNSHARED=       @RUNSHARED@

# ensurepip options
ENSUREPIP=      @ENSUREPIP@

# Internal static libraries
LIBMPDEC_A= Modules/_decimal/libmpdec/libmpdec.a
LIBEXPAT_A= Modules/expat/libexpat.a
LIBHACL_SHA2_A= Modules/_hacl/libHacl_Hash_SHA2.a

# Module state, compiler flags and linker flags
# Empty CFLAGS and LDFLAGS are omitted.
# states:
#   * yes: module is available
#   * missing: build dependency is missing
#   * disabled: module is disabled
#   * n/a: module is not available on the current platform
# MODULE_EGG_STATE=yes  # yes, missing, disabled, n/a
# MODULE_EGG_CFLAGS=
# MODULE_EGG_LDFLAGS=
@MODULE_BLOCK@

# Default zoneinfo.TZPATH. Added here to expose it in sysconfig.get_config_var
TZPATH=@TZPATH@

# Modes for directories, executables and data files created by the
# install process.  Default to user-only-writable for all file types.
DIRMODE=	755
EXEMODE=	755
FILEMODE=	644

# configure script arguments
CONFIG_ARGS=	@CONFIG_ARGS@


# Subdirectories with code
SRCDIRS= 	@SRCDIRS@

# Other subdirectories
SUBDIRSTOO=	Include Lib Misc

# assets for Emscripten browser builds
WASM_ASSETS_DIR=.$(prefix)
WASM_STDLIB=$(WASM_ASSETS_DIR)/lib/python$(VERSION)/os.py

# Files and directories to be distributed
CONFIGFILES=	configure configure.ac acconfig.h pyconfig.h.in Makefile.pre.in
DISTFILES=	README.rst ChangeLog $(CONFIGFILES)
DISTDIRS=	$(SUBDIRS) $(SUBDIRSTOO) Ext-dummy
DIST=		$(DISTFILES) $(DISTDIRS)


LIBRARY=	@LIBRARY@
LDLIBRARY=      @LDLIBRARY@
BLDLIBRARY=     @BLDLIBRARY@
PY3LIBRARY=     @PY3LIBRARY@
DLLLIBRARY=	@DLLLIBRARY@
LDLIBRARYDIR=   @LDLIBRARYDIR@
INSTSONAME=	@INSTSONAME@
LIBRARY_DEPS=	@LIBRARY_DEPS@
LINK_PYTHON_DEPS=@LINK_PYTHON_DEPS@
PY_ENABLE_SHARED=	@PY_ENABLE_SHARED@
STATIC_LIBPYTHON=	@STATIC_LIBPYTHON@


LIBS=		@LIBS@
LIBM=		@LIBM@
LIBC=		@LIBC@
SYSLIBS=	$(LIBM) $(LIBC)
SHLIBS=		@SHLIBS@

DLINCLDIR=	@DLINCLDIR@
DYNLOADFILE=	@DYNLOADFILE@
MACHDEP_OBJS=	@MACHDEP_OBJS@
LIBOBJDIR=	Python/
LIBOBJS=	@LIBOBJS@

PYTHON=		python$(EXE)
BUILDPYTHON=	python$(BUILDEXE)

HOSTRUNNER= @HOSTRUNNER@

PYTHON_FOR_REGEN?=@PYTHON_FOR_REGEN@
UPDATE_FILE=$(PYTHON_FOR_REGEN) $(srcdir)/Tools/build/update_file.py
PYTHON_FOR_BUILD=@PYTHON_FOR_BUILD@
# Single-platform builds depend on $(BUILDPYTHON). Cross builds use an
# external "build Python" and have an empty PYTHON_FOR_BUILD_DEPS.
PYTHON_FOR_BUILD_DEPS=@PYTHON_FOR_BUILD_DEPS@

# Single-platform builds use Programs/_freeze_module.c for bootstrapping and
# ./_bootstrap_python Programs/_freeze_module.py for remaining modules
# Cross builds use an external "build Python" for all modules.
PYTHON_FOR_FREEZE=@PYTHON_FOR_FREEZE@
FREEZE_MODULE_BOOTSTRAP=@FREEZE_MODULE_BOOTSTRAP@
FREEZE_MODULE_BOOTSTRAP_DEPS=@FREEZE_MODULE_BOOTSTRAP_DEPS@
FREEZE_MODULE=@FREEZE_MODULE@
FREEZE_MODULE_DEPS=@FREEZE_MODULE_DEPS@

_PYTHON_HOST_PLATFORM=@_PYTHON_HOST_PLATFORM@
BUILD_GNU_TYPE=	@build@
HOST_GNU_TYPE=	@host@

# The task to run while instrumented when building the profile-opt target.
# To speed up profile generation, we don't run the full unit test suite
# by default. The default is "-m test --pgo". To run more tests, use
# PROFILE_TASK="-m test --pgo-extended"
PROFILE_TASK=	@PROFILE_TASK@

# report files for gcov / lcov coverage report
COVERAGE_INFO=	$(abs_builddir)/coverage.info
COVERAGE_REPORT=$(abs_builddir)/lcov-report
COVERAGE_LCOV_OPTIONS=--rc lcov_branch_coverage=1
COVERAGE_REPORT_OPTIONS=--rc lcov_branch_coverage=1 --branch-coverage --title "CPython $(VERSION) LCOV report [commit $(shell $(GITVERSION))]"


# === Definitions added by makesetup ===


##########################################################################
# Modules
MODULE_OBJS=	\
		Modules/config.o \
		Modules/main.o \
		Modules/gcmodule.o

IO_H=		Modules/_io/_iomodule.h

IO_OBJS=	\
		Modules/_io/_iomodule.o \
		Modules/_io/iobase.o \
		Modules/_io/fileio.o \
		Modules/_io/bufferedio.o \
		Modules/_io/textio.o \
		Modules/_io/bytesio.o \
		Modules/_io/stringio.o

##########################################################################
# Parser

PEGEN_OBJS=		\
		Parser/pegen.o \
		Parser/pegen_errors.o \
		Parser/action_helpers.o \
		Parser/parser.o \
		Parser/string_parser.o \
		Parser/peg_api.o


PEGEN_HEADERS= \
		$(srcdir)/Include/internal/pycore_parser.h \
		$(srcdir)/Parser/pegen.h \
		$(srcdir)/Parser/string_parser.h

POBJS=		\
		Parser/token.o \

PARSER_OBJS=	$(POBJS) $(PEGEN_OBJS) Parser/myreadline.o Parser/tokenizer.o

PARSER_HEADERS= \
		$(PEGEN_HEADERS) \
		$(srcdir)/Parser/tokenizer.h

##########################################################################
# Python

PYTHON_OBJS=	\
		Python/_warnings.o \
		Python/Python-ast.o \
		Python/Python-tokenize.o \
		Python/asdl.o \
		Python/assemble.o \
		Python/ast.o \
		Python/ast_opt.o \
		Python/ast_unparse.o \
		Python/bltinmodule.o \
		Python/ceval.o \
		Python/codecs.o \
		Python/compile.o \
		Python/context.o \
		Python/dynamic_annotations.o \
		Python/errors.o \
		Python/flowgraph.o \
		Python/frame.o \
		Python/frozenmain.o \
		Python/future.o \
		Python/getargs.o \
		Python/getcompiler.o \
		Python/getcopyright.o \
		Python/getplatform.o \
		Python/getversion.o \
		Python/ceval_gil.o \
		Python/hamt.o \
		Python/hashtable.o \
		Python/import.o \
		Python/importdl.o \
		Python/initconfig.o \
		Python/instrumentation.o \
		Python/intrinsics.o \
		Python/legacy_tracing.o \
		Python/marshal.o \
		Python/modsupport.o \
		Python/mysnprintf.o \
		Python/mystrtoul.o \
		Python/pathconfig.o \
		Python/preconfig.o \
		Python/pyarena.o \
		Python/pyctype.o \
		Python/pyfpe.o \
		Python/pyhash.o \
		Python/pylifecycle.o \
		Python/pymath.o \
		Python/pystate.o \
		Python/pythonrun.o \
		Python/pytime.o \
		Python/bootstrap_hash.o \
		Python/specialize.o \
		Python/structmember.o \
		Python/symtable.o \
		Python/sysmodule.o \
		Python/thread.o \
		Python/traceback.o \
		Python/tracemalloc.o \
		Python/getopt.o \
		Python/pystrcmp.o \
		Python/pystrtod.o \
		Python/pystrhex.o \
		Python/dtoa.o \
		Python/formatter_unicode.o \
		Python/fileutils.o \
		Python/suggestions.o \
		Python/perf_trampoline.o \
		Python/$(DYNLOADFILE) \
		$(LIBOBJS) \
		$(MACHDEP_OBJS) \
		$(DTRACE_OBJS) \
		@PLATFORM_OBJS@


##########################################################################
# Objects
OBJECT_OBJS=	\
		Objects/abstract.o \
		Objects/boolobject.o \
		Objects/bytes_methods.o \
		Objects/bytearrayobject.o \
		Objects/bytesobject.o \
		Objects/call.o \
		Objects/capsule.o \
		Objects/cellobject.o \
		Objects/classobject.o \
		Objects/codeobject.o \
		Objects/complexobject.o \
		Objects/descrobject.o \
		Objects/enumobject.o \
		Objects/exceptions.o \
		Objects/genericaliasobject.o \
		Objects/genobject.o \
		Objects/fileobject.o \
		Objects/floatobject.o \
		Objects/frameobject.o \
		Objects/funcobject.o \
		Objects/interpreteridobject.o \
		Objects/iterobject.o \
		Objects/listobject.o \
		Objects/longobject.o \
		Objects/dictobject.o \
		Objects/odictobject.o \
		Objects/memoryobject.o \
		Objects/methodobject.o \
		Objects/moduleobject.o \
		Objects/namespaceobject.o \
		Objects/object.o \
		Objects/obmalloc.o \
		Objects/picklebufobject.o \
		Objects/rangeobject.o \
		Objects/setobject.o \
		Objects/sliceobject.o \
		Objects/structseq.o \
		Objects/tupleobject.o \
		Objects/typeobject.o \
		Objects/typevarobject.o \
		Objects/unicodeobject.o \
		Objects/unicodectype.o \
		Objects/unionobject.o \
		Objects/weakrefobject.o \
		@PERF_TRAMPOLINE_OBJ@

DEEPFREEZE_C = Python/deepfreeze/deepfreeze.c
DEEPFREEZE_OBJS = Python/deepfreeze/deepfreeze.o

##########################################################################
# objects that get linked into the Python library
LIBRARY_OBJS_OMIT_FROZEN=	\
		Modules/getbuildinfo.o \
		$(PARSER_OBJS) \
		$(OBJECT_OBJS) \
		$(PYTHON_OBJS) \
		$(MODULE_OBJS) \
		$(MODOBJS)

LIBRARY_OBJS=	\
		$(LIBRARY_OBJS_OMIT_FROZEN) \
		$(DEEPFREEZE_OBJS) \
		Modules/getpath.o \
		Python/frozen.o

LINK_PYTHON_OBJS=@LINK_PYTHON_OBJS@

##########################################################################
# DTrace

# On some systems, object files that reference DTrace probes need to be modified
# in-place by dtrace(1).
DTRACE_DEPS = \
	Python/ceval.o Python/import.o Python/sysmodule.o Modules/gcmodule.o

##########################################################################
# decimal's libmpdec

LIBMPDEC_OBJS= \
		Modules/_decimal/libmpdec/basearith.o \
		Modules/_decimal/libmpdec/constants.o \
		Modules/_decimal/libmpdec/context.o \
		Modules/_decimal/libmpdec/convolute.o \
		Modules/_decimal/libmpdec/crt.o \
		Modules/_decimal/libmpdec/difradix2.o \
		Modules/_decimal/libmpdec/fnt.o \
		Modules/_decimal/libmpdec/fourstep.o \
		Modules/_decimal/libmpdec/io.o \
		Modules/_decimal/libmpdec/mpalloc.o \
		Modules/_decimal/libmpdec/mpdecimal.o \
		Modules/_decimal/libmpdec/numbertheory.o \
		Modules/_decimal/libmpdec/sixstep.o \
		Modules/_decimal/libmpdec/transpose.o
		# _decimal does not use signaling API
		# Modules/_decimal/libmpdec/mpsignal.o

LIBMPDEC_HEADERS= \
		$(srcdir)/Modules/_decimal/libmpdec/basearith.h \
		$(srcdir)/Modules/_decimal/libmpdec/bits.h \
		$(srcdir)/Modules/_decimal/libmpdec/constants.h \
		$(srcdir)/Modules/_decimal/libmpdec/convolute.h \
		$(srcdir)/Modules/_decimal/libmpdec/crt.h \
		$(srcdir)/Modules/_decimal/libmpdec/difradix2.h \
		$(srcdir)/Modules/_decimal/libmpdec/fnt.h \
		$(srcdir)/Modules/_decimal/libmpdec/fourstep.h \
		$(srcdir)/Modules/_decimal/libmpdec/io.h \
		$(srcdir)/Modules/_decimal/libmpdec/mpalloc.h \
		$(srcdir)/Modules/_decimal/libmpdec/mpdecimal.h \
		$(srcdir)/Modules/_decimal/libmpdec/numbertheory.h \
		$(srcdir)/Modules/_decimal/libmpdec/sixstep.h \
		$(srcdir)/Modules/_decimal/libmpdec/transpose.h \
		$(srcdir)/Modules/_decimal/libmpdec/typearith.h \
		$(srcdir)/Modules/_decimal/libmpdec/umodarith.h

##########################################################################
# pyexpat's expat library

LIBEXPAT_OBJS= \
		Modules/expat/xmlparse.o \
		Modules/expat/xmlrole.o \
		Modules/expat/xmltok.o

LIBEXPAT_HEADERS= \
		Modules/expat/ascii.h \
		Modules/expat/asciitab.h \
		Modules/expat/expat.h \
		Modules/expat/expat_config.h \
		Modules/expat/expat_external.h \
		Modules/expat/iasciitab.h \
		Modules/expat/internal.h \
		Modules/expat/latin1tab.h \
		Modules/expat/nametab.h \
		Modules/expat/pyexpatns.h \
		Modules/expat/siphash.h \
		Modules/expat/utf8tab.h \
		Modules/expat/xmlrole.h \
		Modules/expat/xmltok.h \
		Modules/expat/xmltok_impl.h \
		Modules/expat/xmltok_impl.c \
		Modules/expat/xmltok_ns.c

##########################################################################
# hashlib's HACL* library

LIBHACL_SHA2_OBJS= \
                Modules/_hacl/Hacl_Hash_SHA2.o

LIBHACL_HEADERS= \
                Modules/_hacl/include/krml/FStar_UInt128_Verified.h \
                Modules/_hacl/include/krml/FStar_UInt_8_16_32_64.h \
                Modules/_hacl/include/krml/fstar_uint128_struct_endianness.h \
                Modules/_hacl/include/krml/internal/target.h \
                Modules/_hacl/include/krml/lowstar_endianness.h \
                Modules/_hacl/include/krml/types.h \
		Modules/_hacl/Hacl_Streaming_Types.h \
                Modules/_hacl/python_hacl_namespaces.h

LIBHACL_SHA2_HEADERS= \
                Modules/_hacl/Hacl_Hash_SHA2.h \
                Modules/_hacl/internal/Hacl_Hash_SHA2.h \
		$(LIBHACL_HEADERS)

#########################################################################
# Rules

# Default target
all:		@DEF_MAKE_ALL_RULE@

# First target in Makefile is implicit default. So .PHONY needs to come after
# all.
.PHONY: all

.PHONY: build_all
build_all:	check-clean-src $(BUILDPYTHON) platform sharedmods \
		gdbhooks Programs/_testembed scripts checksharedmods rundsymutil

.PHONY: build_wasm
build_wasm: check-clean-src $(BUILDPYTHON) platform sharedmods \
		python-config checksharedmods

# Check that the source is clean when building out of source.
.PHONY: check-clean-src
check-clean-src:
	@if test -n "$(VPATH)" -a \( \
	    -f "$(srcdir)/$(BUILDPYTHON)" \
	    -o -f "$(srcdir)/Programs/python.o" \
	    -o -f "$(srcdir)/Python/frozen_modules/importlib._bootstrap.h" \
	\); then \
		echo "Error: The source directory ($(srcdir)) is not clean" ; \
		echo "Building Python out of the source tree (in $(abs_builddir)) requires a clean source tree ($(abs_srcdir))" ; \
		echo "Build artifacts such as .o files, executables, and Python/frozen_modules/*.h must not exist within $(srcdir)." ; \
		echo "Try to run:" ; \
		echo "  (cd \"$(srcdir)\" && make clean || git clean -fdx -e Doc/venv)" ; \
		exit 1; \
	fi

# Profile generation build must start from a clean tree.
profile-clean-stamp:
	$(MAKE) clean
	touch $@

# Compile with profile generation enabled.
profile-gen-stamp: profile-clean-stamp
	@if [ $(LLVM_PROF_ERR) = yes ]; then \
		echo "Error: Cannot perform PGO build because llvm-profdata was not found in PATH" ;\
		echo "Please add it to PATH and run ./configure again" ;\
		exit 1;\
	fi
	@echo "Building with support for profile generation:"
	$(MAKE) @DEF_MAKE_RULE@ CFLAGS_NODIST="$(CFLAGS_NODIST) $(PGO_PROF_GEN_FLAG)" LDFLAGS_NODIST="$(LDFLAGS_NODIST) $(PGO_PROF_GEN_FLAG)" LIBS="$(LIBS)"
	touch $@

# Run task with profile generation build to create profile information.
profile-run-stamp:
	@echo "Running code to generate profile data (this can take a while):"
	# First, we need to create a clean build with profile generation
	# enabled.
	$(MAKE) profile-gen-stamp
	# Next, run the profile task to generate the profile information.
	@ # FIXME: can't run for a cross build
	$(LLVM_PROF_FILE) $(RUNSHARED) ./$(BUILDPYTHON) $(PROFILE_TASK) || true
	$(LLVM_PROF_MERGER)
	# Remove profile generation binary since we are done with it.
	$(MAKE) clean-retain-profile
	# This is an expensive target to build and it does not have proper
	# makefile dependency information.  So, we create a "stamp" file
	# to record its completion and avoid re-running it.
	touch $@

# Compile Python binary with profile guided optimization.
# To force re-running of the profile task, remove the profile-run-stamp file.
.PHONY: profile-opt
profile-opt: profile-run-stamp
	@echo "Rebuilding with profile guided optimizations:"
	-rm -f profile-clean-stamp
	$(MAKE) @DEF_MAKE_RULE@ CFLAGS_NODIST="$(CFLAGS_NODIST) $(PGO_PROF_USE_FLAG)" LDFLAGS_NODIST="$(LDFLAGS_NODIST)"

# List of binaries that BOLT runs on.
BOLT_BINARIES := @BOLT_BINARIES@

BOLT_INSTRUMENT_FLAGS := @BOLT_INSTRUMENT_FLAGS@
BOLT_APPLY_FLAGS := @BOLT_APPLY_FLAGS@

.PHONY: clean-bolt
clean-bolt:
	# Profile data.
	rm -f *.fdata
	# Pristine binaries before BOLT optimization.
	rm -f *.prebolt
	# BOLT instrumented binaries.
	rm -f *.bolt_inst

profile-bolt-stamp: $(BUILDPYTHON)
	# Ensure a pristine, pre-BOLT copy of the binary and no profile data from last run.
	for bin in $(BOLT_BINARIES); do \
	  prebolt="$${bin}.prebolt"; \
	  if [ -e "$${prebolt}" ]; then \
	    echo "Restoring pre-BOLT binary $${prebolt}"; \
	    mv "$${bin}.prebolt" "$${bin}"; \
	  fi; \
	  cp "$${bin}" "$${prebolt}"; \
	  rm -f $${bin}.bolt.*.fdata $${bin}.fdata; \
	done
	# Instrument each binary.
	for bin in $(BOLT_BINARIES); do \
	  @LLVM_BOLT@ "$${bin}" -instrument -instrumentation-file-append-pid -instrumentation-file=$(abspath $${bin}.bolt) -o $${bin}.bolt_inst $(BOLT_INSTRUMENT_FLAGS); \
	  mv "$${bin}.bolt_inst" "$${bin}"; \
	done
	# Run instrumented binaries to collect data.
	$(RUNSHARED) ./$(BUILDPYTHON) $(PROFILE_TASK) || true
	# Merge all the data files together.
	for bin in $(BOLT_BINARIES); do \
	  @MERGE_FDATA@ $${bin}.*.fdata > "$${bin}.fdata"; \
	  rm -f $${bin}.*.fdata; \
	done
	# Run bolt against the merged data to produce an optimized binary.
	for bin in $(BOLT_BINARIES); do \
	  @LLVM_BOLT@ "$${bin}.prebolt" -o "$${bin}.bolt" -data="$${bin}.fdata" $(BOLT_APPLY_FLAGS); \
	  mv "$${bin}.bolt" "$${bin}"; \
	done
	touch $@

.PHONY: bolt-opt
bolt-opt:
	$(MAKE) @PREBOLT_RULE@
	$(MAKE) profile-bolt-stamp

# Compile and run with gcov
.PHONY: coverage
coverage:
	@echo "Building with support for coverage checking:"
	$(MAKE) clean
	$(MAKE) @DEF_MAKE_RULE@ CFLAGS="$(CFLAGS) -O0 -pg --coverage" LDFLAGS="$(LDFLAGS) --coverage"

.PHONY: coverage-lcov
coverage-lcov:
	@echo "Creating Coverage HTML report with LCOV:"
	@rm -f $(COVERAGE_INFO)
	@rm -rf $(COVERAGE_REPORT)
	@lcov $(COVERAGE_LCOV_OPTIONS) --capture \
	    --directory $(abs_builddir) \
	    --base-directory $(realpath $(abs_builddir)) \
	    --path $(realpath $(abs_srcdir)) \
	    --output-file $(COVERAGE_INFO)
	@ # remove 3rd party modules, system headers and internal files with
	@ # debug, test or dummy functions.
	@lcov $(COVERAGE_LCOV_OPTIONS) --remove $(COVERAGE_INFO) \
	    '*/Modules/_blake2/impl/*' \
	    '*/Modules/_ctypes/libffi*/*' \
	    '*/Modules/_decimal/libmpdec/*' \
	    '*/Modules/expat/*' \
	    '*/Modules/xx*.c' \
	    '*/Python/pyfpe.c' \
	    '*/Python/pystrcmp.c' \
	    '/usr/include/*' \
	    '/usr/local/include/*' \
	    '/usr/lib/gcc/*' \
	    --output-file $(COVERAGE_INFO)
	@genhtml $(COVERAGE_INFO) \
	    --output-directory $(COVERAGE_REPORT) \
	    $(COVERAGE_REPORT_OPTIONS)
	@echo
	@echo "lcov report at $(COVERAGE_REPORT)/index.html"
	@echo

# Force regeneration of parser and frozen modules
.PHONY: coverage-report
coverage-report: regen-token regen-frozen
	@ # build with coverage info
	$(MAKE) coverage
	@ # run tests, ignore failures
	$(TESTRUNNER) $(TESTOPTS) || true
	@ # build lcov report
	$(MAKE) coverage-lcov

# Run "Argument Clinic" over all source files
.PHONY: clinic
clinic: check-clean-src $(srcdir)/Modules/_blake2/blake2s_impl.c
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/clinic/clinic.py --make --srcdir $(srcdir)

# Build the interpreter
$(BUILDPYTHON):	Programs/python.o $(LINK_PYTHON_DEPS)
	$(LINKCC) $(PY_CORE_LDFLAGS) $(LINKFORSHARED) -o $@ Programs/python.o $(LINK_PYTHON_OBJS) $(LIBS) $(MODLIBS) $(SYSLIBS)

platform: $(PYTHON_FOR_BUILD_DEPS) pybuilddir.txt
	$(RUNSHARED) $(PYTHON_FOR_BUILD) -c 'import sys ; from sysconfig import get_platform ; print("%s-%d.%d" % (get_platform(), *sys.version_info[:2]))' >platform

# Create build directory and generate the sysconfig build-time data there.
# pybuilddir.txt contains the name of the build dir and is used for
# sys.path fixup -- see Modules/getpath.c.
# Since this step runs before shared modules are built, try to avoid bootstrap
# problems by creating a dummy pybuilddir.txt just to allow interpreter
# initialization to succeed.  It will be overwritten by generate-posix-vars
# or removed in case of failure.
pybuilddir.txt: $(PYTHON_FOR_BUILD_DEPS)
	@echo "none" > ./pybuilddir.txt
	$(RUNSHARED) $(PYTHON_FOR_BUILD) -S -m sysconfig --generate-posix-vars ;\
	if test $$? -ne 0 ; then \
		echo "generate-posix-vars failed" ; \
		rm -f ./pybuilddir.txt ; \
		exit 1 ; \
	fi

# blake2s is auto-generated from blake2b
$(srcdir)/Modules/_blake2/blake2s_impl.c: $(srcdir)/Modules/_blake2/blake2b_impl.c $(srcdir)/Modules/_blake2/blake2b2s.py
	$(PYTHON_FOR_REGEN) $(srcdir)/Modules/_blake2/blake2b2s.py
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/clinic/clinic.py -f $@

# Build static library
$(LIBRARY): $(LIBRARY_OBJS)
	-rm -f $@
	$(AR) $(ARFLAGS) $@ $(LIBRARY_OBJS)

libpython$(LDVERSION).so: $(LIBRARY_OBJS) $(DTRACE_OBJS)
	if test $(INSTSONAME) != $(LDLIBRARY); then \
		$(BLDSHARED) -Wl,-h$(INSTSONAME) -o $(INSTSONAME) $(LIBRARY_OBJS) $(MODLIBS) $(SHLIBS) $(LIBC) $(LIBM); \
		$(LN) -f $(INSTSONAME) $@; \
	else \
		$(BLDSHARED) -o $@ $(LIBRARY_OBJS) $(MODLIBS) $(SHLIBS) $(LIBC) $(LIBM); \
	fi

libpython3.so:	libpython$(LDVERSION).so
	$(BLDSHARED) $(NO_AS_NEEDED) -o $@ -Wl,-h$@ $^

libpython$(LDVERSION).dylib: $(LIBRARY_OBJS)
	 $(CC) -dynamiclib -Wl,-single_module $(PY_CORE_LDFLAGS) -undefined dynamic_lookup -Wl,-install_name,$(prefix)/lib/libpython$(LDVERSION).dylib -Wl,-compatibility_version,$(VERSION) -Wl,-current_version,$(VERSION) -o $@ $(LIBRARY_OBJS) $(DTRACE_OBJS) $(SHLIBS) $(LIBC) $(LIBM); \


libpython$(VERSION).sl: $(LIBRARY_OBJS)
	$(LDSHARED) -o $@ $(LIBRARY_OBJS) $(MODLIBS) $(SHLIBS) $(LIBC) $(LIBM)

# List of exported symbols for AIX
Modules/python.exp: $(LIBRARY)
	$(srcdir)/Modules/makexp_aix $@ "$(EXPORTSFROM)" $?

# Copy up the gdb python hooks into a position where they can be automatically
# loaded by gdb during Lib/test/test_gdb.py
#
# Distributors are likely to want to install this somewhere else e.g. relative
# to the stripped DWARF data for the shared library.
.PHONY: gdbhooks
gdbhooks: $(BUILDPYTHON)-gdb.py

SRC_GDB_HOOKS=$(srcdir)/Tools/gdb/libpython.py
$(BUILDPYTHON)-gdb.py: $(SRC_GDB_HOOKS)
	$(INSTALL_DATA) $(SRC_GDB_HOOKS) $(BUILDPYTHON)-gdb.py

# This rule is here for OPENSTEP/Rhapsody/MacOSX. It builds a temporary
# minimal framework (not including the Lib directory and such) in the current
# directory.
RESSRCDIR=Mac/Resources/framework
$(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK): \
		$(LIBRARY) \
		$(RESSRCDIR)/Info.plist
	$(INSTALL) -d -m $(DIRMODE) $(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)
	$(CC) -o $(LDLIBRARY) $(PY_CORE_LDFLAGS) -dynamiclib \
		-all_load $(LIBRARY) -Wl,-single_module \
		-install_name $(DESTDIR)$(PYTHONFRAMEWORKINSTALLDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK) \
		-compatibility_version $(VERSION) \
		-current_version $(VERSION) \
		-framework CoreFoundation $(LIBS);
	$(INSTALL) -d -m $(DIRMODE)  \
		$(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/Resources/English.lproj
	$(INSTALL_DATA) $(RESSRCDIR)/Info.plist \
		$(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/Resources/Info.plist
	$(LN) -fsn $(VERSION) $(PYTHONFRAMEWORKDIR)/Versions/Current
	$(LN) -fsn Versions/Current/$(PYTHONFRAMEWORK) $(PYTHONFRAMEWORKDIR)/$(PYTHONFRAMEWORK)
	$(LN) -fsn Versions/Current/Resources $(PYTHONFRAMEWORKDIR)/Resources

# This rule builds the Cygwin Python DLL and import library if configured
# for a shared core library; otherwise, this rule is a noop.
$(DLLLIBRARY) libpython$(LDVERSION).dll.a: $(LIBRARY_OBJS)
	if test -n "$(DLLLIBRARY)"; then \
		$(LDSHARED) -Wl,--out-implib=$@ -o $(DLLLIBRARY) $^ \
			$(LIBS) $(MODLIBS) $(SYSLIBS); \
	else true; \
	fi

# wasm32-emscripten browser build
# wasm assets directory is relative to current build dir, e.g. "./usr/local".
# --preload-file turns a relative asset path into an absolute path.

.PHONY: wasm_stdlib
wasm_stdlib: $(WASM_STDLIB)
$(WASM_STDLIB): $(srcdir)/Lib/*.py $(srcdir)/Lib/*/*.py \
	    $(srcdir)/Tools/wasm/wasm_assets.py \
	    Makefile pybuilddir.txt Modules/Setup.local
	$(PYTHON_FOR_BUILD) $(srcdir)/Tools/wasm/wasm_assets.py \
	    --buildroot . --prefix $(prefix)

python.html: $(srcdir)/Tools/wasm/python.html python.worker.js
	@cp $(srcdir)/Tools/wasm/python.html $@

python.worker.js: $(srcdir)/Tools/wasm/python.worker.js
	@cp $(srcdir)/Tools/wasm/python.worker.js $@

##########################################################################
# Build static libmpdec.a
LIBMPDEC_CFLAGS=@LIBMPDEC_CFLAGS@ $(PY_STDMODULE_CFLAGS) $(CCSHARED)

# "%.o: %c" is not portable
Modules/_decimal/libmpdec/basearith.o: $(srcdir)/Modules/_decimal/libmpdec/basearith.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/basearith.c

Modules/_decimal/libmpdec/constants.o: $(srcdir)/Modules/_decimal/libmpdec/constants.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/constants.c

Modules/_decimal/libmpdec/context.o: $(srcdir)/Modules/_decimal/libmpdec/context.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/context.c

Modules/_decimal/libmpdec/convolute.o: $(srcdir)/Modules/_decimal/libmpdec/convolute.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/convolute.c

Modules/_decimal/libmpdec/crt.o: $(srcdir)/Modules/_decimal/libmpdec/crt.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/crt.c

Modules/_decimal/libmpdec/difradix2.o: $(srcdir)/Modules/_decimal/libmpdec/difradix2.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/difradix2.c

Modules/_decimal/libmpdec/fnt.o: $(srcdir)/Modules/_decimal/libmpdec/fnt.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/fnt.c

Modules/_decimal/libmpdec/fourstep.o: $(srcdir)/Modules/_decimal/libmpdec/fourstep.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/fourstep.c

Modules/_decimal/libmpdec/io.o: $(srcdir)/Modules/_decimal/libmpdec/io.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/io.c

Modules/_decimal/libmpdec/mpalloc.o: $(srcdir)/Modules/_decimal/libmpdec/mpalloc.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/mpalloc.c

Modules/_decimal/libmpdec/mpdecimal.o: $(srcdir)/Modules/_decimal/libmpdec/mpdecimal.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/mpdecimal.c

Modules/_decimal/libmpdec/mpsignal.o: $(srcdir)/Modules/_decimal/libmpdec/mpsignal.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/mpsignal.c

Modules/_decimal/libmpdec/numbertheory.o: $(srcdir)/Modules/_decimal/libmpdec/numbertheory.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/numbertheory.c

Modules/_decimal/libmpdec/sixstep.o: $(srcdir)/Modules/_decimal/libmpdec/sixstep.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/sixstep.c

Modules/_decimal/libmpdec/transpose.o: $(srcdir)/Modules/_decimal/libmpdec/transpose.c $(LIBMPDEC_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBMPDEC_CFLAGS) -o $@ $(srcdir)/Modules/_decimal/libmpdec/transpose.c

$(LIBMPDEC_A): $(LIBMPDEC_OBJS)
	-rm -f $@
	$(AR) $(ARFLAGS) $@ $(LIBMPDEC_OBJS)

##########################################################################
# Build static libexpat.a
LIBEXPAT_CFLAGS=@LIBEXPAT_CFLAGS@ $(PY_STDMODULE_CFLAGS) $(CCSHARED)

Modules/expat/xmlparse.o: $(srcdir)/Modules/expat/xmlparse.c $(LIBEXPAT_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBEXPAT_CFLAGS) -o $@ $(srcdir)/Modules/expat/xmlparse.c

Modules/expat/xmlrole.o: $(srcdir)/Modules/expat/xmlrole.c $(LIBEXPAT_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBEXPAT_CFLAGS) -o $@ $(srcdir)/Modules/expat/xmlrole.c

Modules/expat/xmltok.o: $(srcdir)/Modules/expat/xmltok.c $(LIBEXPAT_HEADERS) $(PYTHON_HEADERS)
	$(CC) -c $(LIBEXPAT_CFLAGS) -o $@ $(srcdir)/Modules/expat/xmltok.c

$(LIBEXPAT_A): $(LIBEXPAT_OBJS)
	-rm -f $@
	$(AR) $(ARFLAGS) $@ $(LIBEXPAT_OBJS)

##########################################################################
# Build HACL* static libraries for hashlib: libHacl_Hash_SHA2.a
LIBHACL_CFLAGS=-I$(srcdir)/Modules/_hacl/include -D_BSD_SOURCE -D_DEFAULT_SOURCE $(PY_STDMODULE_CFLAGS) $(CCSHARED)

Modules/_hacl/Hacl_Hash_SHA2.o: $(srcdir)/Modules/_hacl/Hacl_Hash_SHA2.c $(LIBHACL_SHA2_HEADERS)
	$(CC) -c $(LIBHACL_CFLAGS) -o $@ $(srcdir)/Modules/_hacl/Hacl_Hash_SHA2.c

$(LIBHACL_SHA2_A): $(LIBHACL_SHA2_OBJS)
	-rm -f $@
	$(AR) $(ARFLAGS) $@ $(LIBHACL_SHA2_OBJS)

# create relative links from build/lib.platform/egg.so to Modules/egg.so
# pybuilddir.txt is created too late. We cannot use it in Makefile
# targets. ln --relative is not portable.
.PHONY: sharedmods
sharedmods: $(SHAREDMODS) pybuilddir.txt
	@target=`cat pybuilddir.txt`; \
	$(MKDIR_P) $$target; \
	for mod in X $(SHAREDMODS); do \
		if test $$mod != X; then \
			$(LN) -sf ../../$$mod $$target/`basename $$mod`; \
		fi; \
	done

# dependency on BUILDPYTHON ensures that the target is run last
.PHONY: checksharedmods
checksharedmods: sharedmods $(PYTHON_FOR_BUILD_DEPS) $(BUILDPYTHON)
	@$(RUNSHARED) $(PYTHON_FOR_BUILD) $(srcdir)/Tools/build/check_extension_modules.py

.PHONY: rundsymutil
rundsymutil: sharedmods $(PYTHON_FOR_BUILD_DEPS) $(BUILDPYTHON)
	@if [ ! -z $(DSYMUTIL) ] ; then \
		echo $(DSYMUTIL_PATH) $(BUILDPYTHON); \
		$(DSYMUTIL_PATH) $(BUILDPYTHON); \
		if test -f $(LDLIBRARY); then \
			echo $(DSYMUTIL_PATH) $(LDLIBRARY); \
			$(DSYMUTIL_PATH) $(LDLIBRARY); \
		fi; \
		for mod in X $(SHAREDMODS); do \
			if test $$mod != X; then \
				echo $(DSYMUTIL_PATH) $$mod; \
				$(DSYMUTIL_PATH) $$mod; \
			fi; \
		done \
	fi

Modules/Setup.local:
	@# Create empty Setup.local when file was deleted by user
	echo "# Edit this file for local setup changes" > $@

Modules/Setup.bootstrap: $(srcdir)/Modules/Setup.bootstrap.in config.status
	./config.status $@

Modules/Setup.stdlib: $(srcdir)/Modules/Setup.stdlib.in config.status
	./config.status $@

Makefile Modules/config.c: Makefile.pre \
				$(srcdir)/Modules/config.c.in \
				$(MAKESETUP) \
				$(srcdir)/Modules/Setup \
				Modules/Setup.local \
				Modules/Setup.bootstrap \
				Modules/Setup.stdlib
	$(MAKESETUP) -c $(srcdir)/Modules/config.c.in \
				-s Modules \
				Modules/Setup.local \
				Modules/Setup.stdlib \
				Modules/Setup.bootstrap \
				$(srcdir)/Modules/Setup
	@mv config.c Modules
	@echo "The Makefile was updated, you may need to re-run make."

.PHONY: regen-test-frozenmain
regen-test-frozenmain: $(BUILDPYTHON)
	# Regenerate Programs/test_frozenmain.h
	# from Programs/test_frozenmain.py
	# using Programs/freeze_test_frozenmain.py
	$(RUNSHARED) ./$(BUILDPYTHON) $(srcdir)/Programs/freeze_test_frozenmain.py Programs/test_frozenmain.h

.PHONY: regen-test-levenshtein
regen-test-levenshtein:
	# Regenerate Lib/test/levenshtein_examples.json
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/build/generate_levenshtein_examples.py $(srcdir)/Lib/test/levenshtein_examples.json

.PHONY: regen-re
regen-re: $(BUILDPYTHON)
	# Regenerate Lib/re/_casefix.py
	# using Tools/build/generate_re_casefix.py
	$(RUNSHARED) ./$(BUILDPYTHON) $(srcdir)/Tools/build/generate_re_casefix.py $(srcdir)/Lib/re/_casefix.py

Programs/_testembed: Programs/_testembed.o $(LINK_PYTHON_DEPS)
	$(LINKCC) $(PY_CORE_LDFLAGS) $(LINKFORSHARED) -o $@ Programs/_testembed.o $(LINK_PYTHON_OBJS) $(LIBS) $(MODLIBS) $(SYSLIBS)

############################################################################
# "Bootstrap Python" used to run deepfreeze.py

BOOTSTRAP_HEADERS = \
	Python/frozen_modules/importlib._bootstrap.h \
	Python/frozen_modules/importlib._bootstrap_external.h \
	Python/frozen_modules/zipimport.h

Programs/_bootstrap_python.o: Programs/_bootstrap_python.c $(BOOTSTRAP_HEADERS) $(PYTHON_HEADERS)

_bootstrap_python: $(LIBRARY_OBJS_OMIT_FROZEN) Programs/_bootstrap_python.o Modules/getpath.o Modules/Setup.local
	$(LINKCC) $(PY_LDFLAGS_NOLTO) -o $@ $(LIBRARY_OBJS_OMIT_FROZEN) \
		Programs/_bootstrap_python.o Modules/getpath.o $(LIBS) $(MODLIBS) $(SYSLIBS)


############################################################################
# frozen modules (including importlib)
#
# Freezing is a multi step process. It works differently for standard builds
# and cross builds. Standard builds use Programs/_freeze_module and
# _bootstrap_python for freezing and deepfreezing, so users can build Python
# without an existing Python installation. Cross builds cannot execute
# compiled binaries and therefore rely on an external build Python
# interpreter. The build interpreter must have same version and same bytecode
# as the host (target) binary.
#
# Standard build process:
# 1) compile minimal core objects for Py_Compile*() and PyMarshal_Write*().
# 2) build Programs/_freeze_module binary.
# 3) create frozen module headers for importlib and getpath.
# 4) build _bootstrap_python binary.
# 5) create remaining frozen module headers with
#    ``./_bootstrap_python Programs/_freeze_module.py``. The pure Python
#    script is used to test the cross compile code path.
# 6) deepfreeze modules with _bootstrap_python
#
# Cross compile process:
# 1) create all frozen module headers with external build Python and
#    Programs/_freeze_module.py script.
# 2) deepfreeze modules with external build Python.
#

# FROZEN_FILES_* are auto-generated by Tools/build/freeze_modules.py.
FROZEN_FILES_IN = \
		Lib/importlib/_bootstrap.py \
		Lib/importlib/_bootstrap_external.py \
		Lib/zipimport.py \
		Lib/abc.py \
		Lib/_aix_support.py \
		Lib/antigravity.py \
		Lib/argparse.py \
		Lib/ast.py \
		Lib/base64.py \
		Lib/bdb.py \
		Lib/bisect.py \
		Lib/calendar.py \
		Lib/cmd.py \
		Lib/codecs.py \
		Lib/codeop.py \
		Lib/code.py \
		Lib/collections/__init__.py \
		Lib/collections/abc.py \
		Lib/_collections_abc.py \
		Lib/colorsys.py \
		Lib/_compat_pickle.py \
		Lib/compileall.py \
		Lib/_compression.py \
		Lib/concurrent/__init__.py \
		Lib/concurrent/futures/__init__.py \
		Lib/concurrent/futures/_base.py \
		Lib/concurrent/futures/process.py \
		Lib/concurrent/futures/thread.py \
		Lib/configparser.py \
		Lib/contextlib.py \
		Lib/contextvars.py \
		Lib/copy.py \
		Lib/copyreg.py \
		Lib/cProfile.py \
		Lib/csv.py \
		Lib/dataclasses.py \
		Lib/datetime.py \
		Lib/dbm/__init__.py \
		Lib/dbm/dumb.py \
		Lib/dbm/gnu.py \
		Lib/dbm/ndbm.py \
		Lib/decimal.py \
		Lib/difflib.py \
		Lib/dis.py \
		Lib/encodings/__init__.py \
		Lib/encodings/aliases.py \
		Lib/encodings/ascii.py \
		Lib/encodings/base64_codec.py \
		Lib/encodings/big5.py \
		Lib/encodings/big5hkscs.py \
		Lib/encodings/bz2_codec.py \
		Lib/encodings/charmap.py \
		Lib/encodings/cp037.py \
		Lib/encodings/cp1006.py \
		Lib/encodings/cp1026.py \
		Lib/encodings/cp1125.py \
		Lib/encodings/cp1140.py \
		Lib/encodings/cp1250.py \
		Lib/encodings/cp1251.py \
		Lib/encodings/cp1252.py \
		Lib/encodings/cp1253.py \
		Lib/encodings/cp1254.py \
		Lib/encodings/cp1255.py \
		Lib/encodings/cp1256.py \
		Lib/encodings/cp1257.py \
		Lib/encodings/cp1258.py \
		Lib/encodings/cp273.py \
		Lib/encodings/cp424.py \
		Lib/encodings/cp437.py \
		Lib/encodings/cp500.py \
		Lib/encodings/cp720.py \
		Lib/encodings/cp737.py \
		Lib/encodings/cp775.py \
		Lib/encodings/cp850.py \
		Lib/encodings/cp852.py \
		Lib/encodings/cp855.py \
		Lib/encodings/cp856.py \
		Lib/encodings/cp857.py \
		Lib/encodings/cp858.py \
		Lib/encodings/cp860.py \
		Lib/encodings/cp861.py \
		Lib/encodings/cp862.py \
		Lib/encodings/cp863.py \
		Lib/encodings/cp864.py \
		Lib/encodings/cp865.py \
		Lib/encodings/cp866.py \
		Lib/encodings/cp869.py \
		Lib/encodings/cp874.py \
		Lib/encodings/cp875.py \
		Lib/encodings/cp932.py \
		Lib/encodings/cp949.py \
		Lib/encodings/cp950.py \
		Lib/encodings/euc_jis_2004.py \
		Lib/encodings/euc_jisx0213.py \
		Lib/encodings/euc_jp.py \
		Lib/encodings/euc_kr.py \
		Lib/encodings/gb18030.py \
		Lib/encodings/gb2312.py \
		Lib/encodings/gbk.py \
		Lib/encodings/hex_codec.py \
		Lib/encodings/hp_roman8.py \
		Lib/encodings/hz.py \
		Lib/encodings/idna.py \
		Lib/encodings/iso2022_jp.py \
		Lib/encodings/iso2022_jp_1.py \
		Lib/encodings/iso2022_jp_2.py \
		Lib/encodings/iso2022_jp_2004.py \
		Lib/encodings/iso2022_jp_3.py \
		Lib/encodings/iso2022_jp_ext.py \
		Lib/encodings/iso2022_kr.py \
		Lib/encodings/iso8859_1.py \
		Lib/encodings/iso8859_10.py \
		Lib/encodings/iso8859_11.py \
		Lib/encodings/iso8859_13.py \
		Lib/encodings/iso8859_14.py \
		Lib/encodings/iso8859_15.py \
		Lib/encodings/iso8859_16.py \
		Lib/encodings/iso8859_2.py \
		Lib/encodings/iso8859_3.py \
		Lib/encodings/iso8859_4.py \
		Lib/encodings/iso8859_5.py \
		Lib/encodings/iso8859_6.py \
		Lib/encodings/iso8859_7.py \
		Lib/encodings/iso8859_8.py \
		Lib/encodings/iso8859_9.py \
		Lib/encodings/johab.py \
		Lib/encodings/koi8_r.py \
		Lib/encodings/koi8_t.py \
		Lib/encodings/koi8_u.py \
		Lib/encodings/kz1048.py \
		Lib/encodings/latin_1.py \
		Lib/encodings/mac_arabic.py \
		Lib/encodings/mac_croatian.py \
		Lib/encodings/mac_cyrillic.py \
		Lib/encodings/mac_farsi.py \
		Lib/encodings/mac_greek.py \
		Lib/encodings/mac_iceland.py \
		Lib/encodings/mac_latin2.py \
		Lib/encodings/mac_roman.py \
		Lib/encodings/mac_romanian.py \
		Lib/encodings/mac_turkish.py \
		Lib/encodings/mbcs.py \
		Lib/encodings/oem.py \
		Lib/encodings/palmos.py \
		Lib/encodings/ptcp154.py \
		Lib/encodings/punycode.py \
		Lib/encodings/quopri_codec.py \
		Lib/encodings/raw_unicode_escape.py \
		Lib/encodings/rot_13.py \
		Lib/encodings/shift_jis.py \
		Lib/encodings/shift_jis_2004.py \
		Lib/encodings/shift_jisx0213.py \
		Lib/encodings/tis_620.py \
		Lib/encodings/undefined.py \
		Lib/encodings/unicode_escape.py \
		Lib/encodings/utf_16.py \
		Lib/encodings/utf_16_be.py \
		Lib/encodings/utf_16_le.py \
		Lib/encodings/utf_32.py \
		Lib/encodings/utf_32_be.py \
		Lib/encodings/utf_32_le.py \
		Lib/encodings/utf_7.py \
		Lib/encodings/utf_8.py \
		Lib/encodings/utf_8_sig.py \
		Lib/encodings/uu_codec.py \
		Lib/encodings/zlib_codec.py \
		Lib/ensurepip/__init__.py \
		Lib/ensurepip/__main__.py \
		Lib/ensurepip/_uninstall.py \
		Lib/enum.py \
		Lib/filecmp.py \
		Lib/fileinput.py \
		Lib/fnmatch.py \
		Lib/fractions.py \
		Lib/ftplib.py \
		Lib/functools.py \
		Lib/__future__.py \
		Lib/genericpath.py \
		Lib/getopt.py \
		Lib/getpass.py \
		Lib/gettext.py \
		Lib/glob.py \
		Lib/graphlib.py \
		Lib/gzip.py \
		Lib/hashlib.py \
		Lib/heapq.py \
		Lib/hmac.py \
		Lib/imaplib.py \
		Lib/importlib/__init__.py \
		Lib/importlib/_abc.py \
		Lib/importlib/abc.py \
		Lib/importlib/machinery.py \
		Lib/importlib/metadata/__init__.py \
		Lib/importlib/metadata/_adapters.py \
		Lib/importlib/metadata/_collections.py \
		Lib/importlib/metadata/_functools.py \
		Lib/importlib/metadata/_itertools.py \
		Lib/importlib/metadata/_meta.py \
		Lib/importlib/metadata/_text.py \
		Lib/importlib/readers.py \
		Lib/importlib/resources/__init__.py \
		Lib/importlib/resources/_adapters.py \
		Lib/importlib/resources/_common.py \
		Lib/importlib/resources/_itertools.py \
		Lib/importlib/resources/_legacy.py \
		Lib/importlib/resources/abc.py \
		Lib/importlib/resources/readers.py \
		Lib/importlib/resources/simple.py \
		Lib/importlib/simple.py \
		Lib/importlib/util.py \
		Lib/inspect.py \
		Lib/io.py \
		Lib/ipaddress.py \
		Lib/json/__init__.py \
		Lib/json/decoder.py \
		Lib/json/encoder.py \
		Lib/json/scanner.py \
		Lib/json/tool.py \
		Lib/keyword.py \
		Lib/linecache.py \
		Lib/locale.py \
		Lib/logging/__init__.py \
		Lib/logging/config.py \
		Lib/logging/handlers.py \
		Lib/lzma.py \
		Lib/_markupbase.py \
		Lib/mimetypes.py \
		Lib/modulefinder.py \
		Lib/multiprocessing/__init__.py \
		Lib/multiprocessing/connection.py \
		Lib/multiprocessing/context.py \
		Lib/multiprocessing/dummy/__init__.py \
		Lib/multiprocessing/dummy/connection.py \
		Lib/multiprocessing/forkserver.py \
		Lib/multiprocessing/heap.py \
		Lib/multiprocessing/managers.py \
		Lib/multiprocessing/pool.py \
		Lib/multiprocessing/popen_fork.py \
		Lib/multiprocessing/popen_forkserver.py \
		Lib/multiprocessing/popen_spawn_posix.py \
		Lib/multiprocessing/popen_spawn_win32.py \
		Lib/multiprocessing/process.py \
		Lib/multiprocessing/queues.py \
		Lib/multiprocessing/reduction.py \
		Lib/multiprocessing/resource_sharer.py \
		Lib/multiprocessing/resource_tracker.py \
		Lib/multiprocessing/shared_memory.py \
		Lib/multiprocessing/sharedctypes.py \
		Lib/multiprocessing/spawn.py \
		Lib/multiprocessing/synchronize.py \
		Lib/multiprocessing/util.py \
		Lib/netrc.py \
		Lib/ntpath.py \
		Lib/nturl2path.py \
		Lib/numbers.py \
		Lib/opcode.py \
		Lib/operator.py \
		Lib/optparse.py \
		Lib/os.py \
		Lib/_osx_support.py \
		Lib/pathlib.py \
		Lib/pdb.py \
		Lib/__phello__/__init__.py \
		Lib/__phello__/ham/__init__.py \
		Lib/__phello__/ham/eggs.py \
		Lib/__phello__/spam.py \
		Lib/pickle.py \
		Lib/pickletools.py \
		Lib/pkgutil.py \
		Lib/platform.py \
		Lib/plistlib.py \
		Lib/poplib.py \
		Lib/posixpath.py \
		Lib/pprint.py \
		Lib/profile.py \
		Lib/pstats.py \
		Lib/pty.py \
		Lib/_py_abc.py \
		Lib/pyclbr.py \
		Lib/py_compile.py \
		Lib/_pydatetime.py \
		Lib/_pydecimal.py \
		Lib/_pyio.py \
		Lib/_pylong.py \
		Lib/queue.py \
		Lib/quopri.py \
		Lib/random.py \
		Lib/re/__init__.py \
		Lib/re/_casefix.py \
		Lib/re/_compiler.py \
		Lib/re/_constants.py \
		Lib/re/_parser.py \
		Lib/reprlib.py \
		Lib/rlcompleter.py \
		Lib/sched.py \
		Lib/selectors.py \
		Lib/shelve.py \
		Lib/shlex.py \
		Lib/shutil.py \
		Lib/signal.py \
		Lib/smtplib.py \
		Lib/socket.py \
		Lib/socketserver.py \
		Lib/statistics.py \
		Lib/stat.py \
		Lib/stringprep.py \
		Lib/string.py \
		Lib/_strptime.py \
		Lib/struct.py \
		Lib/subprocess.py \
		Lib/symtable.py \
		Lib/sysconfig.py \
		Lib/tabnanny.py \
		Lib/tempfile.py \
		Lib/textwrap.py \
		Lib/this.py \
		Lib/_threading_local.py \
		Lib/threading.py \
		Lib/timeit.py \
		Lib/tokenize.py \
		Lib/token.py \
		Lib/tomllib/__init__.py \
		Lib/tomllib/_parser.py \
		Lib/tomllib/_re.py \
		Lib/tomllib/_types.py \
		Lib/traceback.py \
		Lib/tracemalloc.py \
		Lib/trace.py \
		Lib/tty.py \
		Lib/types.py \
		Lib/typing.py \
		Lib/uuid.py \
		Lib/warnings.py \
		Lib/wave.py \
		Lib/weakref.py \
		Lib/_weakrefset.py \
		Lib/webbrowser.py \
		Lib/wsgiref/__init__.py \
		Lib/wsgiref/handlers.py \
		Lib/wsgiref/headers.py \
		Lib/wsgiref/simple_server.py \
		Lib/wsgiref/types.py \
		Lib/wsgiref/util.py \
		Lib/wsgiref/validate.py \
		Lib/zipapp.py \
		Lib/zipfile/__init__.py \
		Lib/zipfile/__main__.py \
		Lib/zipfile/_path/__init__.py \
		Lib/zipfile/_path/glob.py \
		Lib/zoneinfo/__init__.py \
		Lib/zoneinfo/_common.py \
		Lib/zoneinfo/_tzpath.py \
		Lib/zoneinfo/_zoneinfo.py \
		Lib/gdb/__init__.py \
		Lib/gdb/FrameDecorator.py \
		Lib/gdb/FrameIterator.py \
		Lib/gdb/command/__init__.py \
		Lib/gdb/command/explore.py \
		Lib/gdb/command/frame_filters.py \
		Lib/gdb/command/missing_debug.py \
		Lib/gdb/command/pretty_printers.py \
		Lib/gdb/command/prompt.py \
		Lib/gdb/command/type_printers.py \
		Lib/gdb/command/unwinders.py \
		Lib/gdb/command/xmethods.py \
		Lib/gdb/dap/__init__.py \
		Lib/gdb/dap/breakpoint.py \
		Lib/gdb/dap/bt.py \
		Lib/gdb/dap/disassemble.py \
		Lib/gdb/dap/evaluate.py \
		Lib/gdb/dap/events.py \
		Lib/gdb/dap/frames.py \
		Lib/gdb/dap/io.py \
		Lib/gdb/dap/launch.py \
		Lib/gdb/dap/locations.py \
		Lib/gdb/dap/memory.py \
		Lib/gdb/dap/modules.py \
		Lib/gdb/dap/next.py \
		Lib/gdb/dap/pause.py \
		Lib/gdb/dap/scopes.py \
		Lib/gdb/dap/server.py \
		Lib/gdb/dap/sources.py \
		Lib/gdb/dap/startup.py \
		Lib/gdb/dap/state.py \
		Lib/gdb/dap/threads.py \
		Lib/gdb/dap/typecheck.py \
		Lib/gdb/dap/varref.py \
		Lib/gdb/disassembler.py \
		Lib/gdb/frames.py \
		Lib/gdb/function/__init__.py \
		Lib/gdb/function/as_string.py \
		Lib/gdb/function/caller_is.py \
		Lib/gdb/function/strfns.py \
		Lib/gdb/missing_debug.py \
		Lib/gdb/printer/__init__.py \
		Lib/gdb/printer/bound_registers.py \
		Lib/gdb/printing.py \
		Lib/gdb/prompt.py \
		Lib/gdb/styling.py \
		Lib/gdb/types.py \
		Lib/gdb/unwinder.py \
		Lib/gdb/xmethod.py \
		Lib/_sitebuiltins.py \
		Lib/site.py \
		Lib/runpy.py \
		Lib/__hello__.py \
		Tools/freeze/flag.py
# End FROZEN_FILES_IN
FROZEN_FILES_OUT = \
		Python/frozen_modules/importlib._bootstrap.h \
		Python/frozen_modules/importlib._bootstrap_external.h \
		Python/frozen_modules/zipimport.h \
		Python/frozen_modules/abc.h \
		Python/frozen_modules/_aix_support.h \
		Python/frozen_modules/antigravity.h \
		Python/frozen_modules/argparse.h \
		Python/frozen_modules/ast.h \
		Python/frozen_modules/base64.h \
		Python/frozen_modules/bdb.h \
		Python/frozen_modules/bisect.h \
		Python/frozen_modules/calendar.h \
		Python/frozen_modules/cmd.h \
		Python/frozen_modules/codecs.h \
		Python/frozen_modules/codeop.h \
		Python/frozen_modules/code.h \
		Python/frozen_modules/collections.h \
		Python/frozen_modules/collections.abc.h \
		Python/frozen_modules/_collections_abc.h \
		Python/frozen_modules/colorsys.h \
		Python/frozen_modules/_compat_pickle.h \
		Python/frozen_modules/compileall.h \
		Python/frozen_modules/_compression.h \
		Python/frozen_modules/concurrent.h \
		Python/frozen_modules/concurrent.futures.h \
		Python/frozen_modules/concurrent.futures._base.h \
		Python/frozen_modules/concurrent.futures.process.h \
		Python/frozen_modules/concurrent.futures.thread.h \
		Python/frozen_modules/configparser.h \
		Python/frozen_modules/contextlib.h \
		Python/frozen_modules/contextvars.h \
		Python/frozen_modules/copy.h \
		Python/frozen_modules/copyreg.h \
		Python/frozen_modules/cProfile.h \
		Python/frozen_modules/csv.h \
		Python/frozen_modules/dataclasses.h \
		Python/frozen_modules/datetime.h \
		Python/frozen_modules/dbm.h \
		Python/frozen_modules/dbm.dumb.h \
		Python/frozen_modules/dbm.gnu.h \
		Python/frozen_modules/dbm.ndbm.h \
		Python/frozen_modules/decimal.h \
		Python/frozen_modules/difflib.h \
		Python/frozen_modules/dis.h \
		Python/frozen_modules/encodings.h \
		Python/frozen_modules/encodings.aliases.h \
		Python/frozen_modules/encodings.ascii.h \
		Python/frozen_modules/encodings.base64_codec.h \
		Python/frozen_modules/encodings.big5.h \
		Python/frozen_modules/encodings.big5hkscs.h \
		Python/frozen_modules/encodings.bz2_codec.h \
		Python/frozen_modules/encodings.charmap.h \
		Python/frozen_modules/encodings.cp037.h \
		Python/frozen_modules/encodings.cp1006.h \
		Python/frozen_modules/encodings.cp1026.h \
		Python/frozen_modules/encodings.cp1125.h \
		Python/frozen_modules/encodings.cp1140.h \
		Python/frozen_modules/encodings.cp1250.h \
		Python/frozen_modules/encodings.cp1251.h \
		Python/frozen_modules/encodings.cp1252.h \
		Python/frozen_modules/encodings.cp1253.h \
		Python/frozen_modules/encodings.cp1254.h \
		Python/frozen_modules/encodings.cp1255.h \
		Python/frozen_modules/encodings.cp1256.h \
		Python/frozen_modules/encodings.cp1257.h \
		Python/frozen_modules/encodings.cp1258.h \
		Python/frozen_modules/encodings.cp273.h \
		Python/frozen_modules/encodings.cp424.h \
		Python/frozen_modules/encodings.cp437.h \
		Python/frozen_modules/encodings.cp500.h \
		Python/frozen_modules/encodings.cp720.h \
		Python/frozen_modules/encodings.cp737.h \
		Python/frozen_modules/encodings.cp775.h \
		Python/frozen_modules/encodings.cp850.h \
		Python/frozen_modules/encodings.cp852.h \
		Python/frozen_modules/encodings.cp855.h \
		Python/frozen_modules/encodings.cp856.h \
		Python/frozen_modules/encodings.cp857.h \
		Python/frozen_modules/encodings.cp858.h \
		Python/frozen_modules/encodings.cp860.h \
		Python/frozen_modules/encodings.cp861.h \
		Python/frozen_modules/encodings.cp862.h \
		Python/frozen_modules/encodings.cp863.h \
		Python/frozen_modules/encodings.cp864.h \
		Python/frozen_modules/encodings.cp865.h \
		Python/frozen_modules/encodings.cp866.h \
		Python/frozen_modules/encodings.cp869.h \
		Python/frozen_modules/encodings.cp874.h \
		Python/frozen_modules/encodings.cp875.h \
		Python/frozen_modules/encodings.cp932.h \
		Python/frozen_modules/encodings.cp949.h \
		Python/frozen_modules/encodings.cp950.h \
		Python/frozen_modules/encodings.euc_jis_2004.h \
		Python/frozen_modules/encodings.euc_jisx0213.h \
		Python/frozen_modules/encodings.euc_jp.h \
		Python/frozen_modules/encodings.euc_kr.h \
		Python/frozen_modules/encodings.gb18030.h \
		Python/frozen_modules/encodings.gb2312.h \
		Python/frozen_modules/encodings.gbk.h \
		Python/frozen_modules/encodings.hex_codec.h \
		Python/frozen_modules/encodings.hp_roman8.h \
		Python/frozen_modules/encodings.hz.h \
		Python/frozen_modules/encodings.idna.h \
		Python/frozen_modules/encodings.iso2022_jp.h \
		Python/frozen_modules/encodings.iso2022_jp_1.h \
		Python/frozen_modules/encodings.iso2022_jp_2.h \
		Python/frozen_modules/encodings.iso2022_jp_2004.h \
		Python/frozen_modules/encodings.iso2022_jp_3.h \
		Python/frozen_modules/encodings.iso2022_jp_ext.h \
		Python/frozen_modules/encodings.iso2022_kr.h \
		Python/frozen_modules/encodings.iso8859_1.h \
		Python/frozen_modules/encodings.iso8859_10.h \
		Python/frozen_modules/encodings.iso8859_11.h \
		Python/frozen_modules/encodings.iso8859_13.h \
		Python/frozen_modules/encodings.iso8859_14.h \
		Python/frozen_modules/encodings.iso8859_15.h \
		Python/frozen_modules/encodings.iso8859_16.h \
		Python/frozen_modules/encodings.iso8859_2.h \
		Python/frozen_modules/encodings.iso8859_3.h \
		Python/frozen_modules/encodings.iso8859_4.h \
		Python/frozen_modules/encodings.iso8859_5.h \
		Python/frozen_modules/encodings.iso8859_6.h \
		Python/frozen_modules/encodings.iso8859_7.h \
		Python/frozen_modules/encodings.iso8859_8.h \
		Python/frozen_modules/encodings.iso8859_9.h \
		Python/frozen_modules/encodings.johab.h \
		Python/frozen_modules/encodings.koi8_r.h \
		Python/frozen_modules/encodings.koi8_t.h \
		Python/frozen_modules/encodings.koi8_u.h \
		Python/frozen_modules/encodings.kz1048.h \
		Python/frozen_modules/encodings.latin_1.h \
		Python/frozen_modules/encodings.mac_arabic.h \
		Python/frozen_modules/encodings.mac_croatian.h \
		Python/frozen_modules/encodings.mac_cyrillic.h \
		Python/frozen_modules/encodings.mac_farsi.h \
		Python/frozen_modules/encodings.mac_greek.h \
		Python/frozen_modules/encodings.mac_iceland.h \
		Python/frozen_modules/encodings.mac_latin2.h \
		Python/frozen_modules/encodings.mac_roman.h \
		Python/frozen_modules/encodings.mac_romanian.h \
		Python/frozen_modules/encodings.mac_turkish.h \
		Python/frozen_modules/encodings.mbcs.h \
		Python/frozen_modules/encodings.oem.h \
		Python/frozen_modules/encodings.palmos.h \
		Python/frozen_modules/encodings.ptcp154.h \
		Python/frozen_modules/encodings.punycode.h \
		Python/frozen_modules/encodings.quopri_codec.h \
		Python/frozen_modules/encodings.raw_unicode_escape.h \
		Python/frozen_modules/encodings.rot_13.h \
		Python/frozen_modules/encodings.shift_jis.h \
		Python/frozen_modules/encodings.shift_jis_2004.h \
		Python/frozen_modules/encodings.shift_jisx0213.h \
		Python/frozen_modules/encodings.tis_620.h \
		Python/frozen_modules/encodings.undefined.h \
		Python/frozen_modules/encodings.unicode_escape.h \
		Python/frozen_modules/encodings.utf_16.h \
		Python/frozen_modules/encodings.utf_16_be.h \
		Python/frozen_modules/encodings.utf_16_le.h \
		Python/frozen_modules/encodings.utf_32.h \
		Python/frozen_modules/encodings.utf_32_be.h \
		Python/frozen_modules/encodings.utf_32_le.h \
		Python/frozen_modules/encodings.utf_7.h \
		Python/frozen_modules/encodings.utf_8.h \
		Python/frozen_modules/encodings.utf_8_sig.h \
		Python/frozen_modules/encodings.uu_codec.h \
		Python/frozen_modules/encodings.zlib_codec.h \
		Python/frozen_modules/ensurepip.h \
		Python/frozen_modules/ensurepip.__main__.h \
		Python/frozen_modules/ensurepip._uninstall.h \
		Python/frozen_modules/enum.h \
		Python/frozen_modules/filecmp.h \
		Python/frozen_modules/fileinput.h \
		Python/frozen_modules/fnmatch.h \
		Python/frozen_modules/fractions.h \
		Python/frozen_modules/ftplib.h \
		Python/frozen_modules/functools.h \
		Python/frozen_modules/__future__.h \
		Python/frozen_modules/genericpath.h \
		Python/frozen_modules/getopt.h \
		Python/frozen_modules/getpass.h \
		Python/frozen_modules/gettext.h \
		Python/frozen_modules/glob.h \
		Python/frozen_modules/graphlib.h \
		Python/frozen_modules/gzip.h \
		Python/frozen_modules/hashlib.h \
		Python/frozen_modules/heapq.h \
		Python/frozen_modules/hmac.h \
		Python/frozen_modules/imaplib.h \
		Python/frozen_modules/importlib.h \
		Python/frozen_modules/importlib._abc.h \
		Python/frozen_modules/importlib.abc.h \
		Python/frozen_modules/importlib.machinery.h \
		Python/frozen_modules/importlib.metadata.h \
		Python/frozen_modules/importlib.metadata._adapters.h \
		Python/frozen_modules/importlib.metadata._collections.h \
		Python/frozen_modules/importlib.metadata._functools.h \
		Python/frozen_modules/importlib.metadata._itertools.h \
		Python/frozen_modules/importlib.metadata._meta.h \
		Python/frozen_modules/importlib.metadata._text.h \
		Python/frozen_modules/importlib.readers.h \
		Python/frozen_modules/importlib.resources.h \
		Python/frozen_modules/importlib.resources._adapters.h \
		Python/frozen_modules/importlib.resources._common.h \
		Python/frozen_modules/importlib.resources._itertools.h \
		Python/frozen_modules/importlib.resources._legacy.h \
		Python/frozen_modules/importlib.resources.abc.h \
		Python/frozen_modules/importlib.resources.readers.h \
		Python/frozen_modules/importlib.resources.simple.h \
		Python/frozen_modules/importlib.simple.h \
		Python/frozen_modules/importlib.util.h \
		Python/frozen_modules/inspect.h \
		Python/frozen_modules/io.h \
		Python/frozen_modules/ipaddress.h \
		Python/frozen_modules/json.h \
		Python/frozen_modules/json.decoder.h \
		Python/frozen_modules/json.encoder.h \
		Python/frozen_modules/json.scanner.h \
		Python/frozen_modules/json.tool.h \
		Python/frozen_modules/keyword.h \
		Python/frozen_modules/linecache.h \
		Python/frozen_modules/locale.h \
		Python/frozen_modules/logging.h \
		Python/frozen_modules/logging.config.h \
		Python/frozen_modules/logging.handlers.h \
		Python/frozen_modules/lzma.h \
		Python/frozen_modules/_markupbase.h \
		Python/frozen_modules/mimetypes.h \
		Python/frozen_modules/modulefinder.h \
		Python/frozen_modules/multiprocessing.h \
		Python/frozen_modules/multiprocessing.connection.h \
		Python/frozen_modules/multiprocessing.context.h \
		Python/frozen_modules/multiprocessing.dummy.h \
		Python/frozen_modules/multiprocessing.dummy.connection.h \
		Python/frozen_modules/multiprocessing.forkserver.h \
		Python/frozen_modules/multiprocessing.heap.h \
		Python/frozen_modules/multiprocessing.managers.h \
		Python/frozen_modules/multiprocessing.pool.h \
		Python/frozen_modules/multiprocessing.popen_fork.h \
		Python/frozen_modules/multiprocessing.popen_forkserver.h \
		Python/frozen_modules/multiprocessing.popen_spawn_posix.h \
		Python/frozen_modules/multiprocessing.popen_spawn_win32.h \
		Python/frozen_modules/multiprocessing.process.h \
		Python/frozen_modules/multiprocessing.queues.h \
		Python/frozen_modules/multiprocessing.reduction.h \
		Python/frozen_modules/multiprocessing.resource_sharer.h \
		Python/frozen_modules/multiprocessing.resource_tracker.h \
		Python/frozen_modules/multiprocessing.shared_memory.h \
		Python/frozen_modules/multiprocessing.sharedctypes.h \
		Python/frozen_modules/multiprocessing.spawn.h \
		Python/frozen_modules/multiprocessing.synchronize.h \
		Python/frozen_modules/multiprocessing.util.h \
		Python/frozen_modules/netrc.h \
		Python/frozen_modules/ntpath.h \
		Python/frozen_modules/nturl2path.h \
		Python/frozen_modules/numbers.h \
		Python/frozen_modules/opcode.h \
		Python/frozen_modules/operator.h \
		Python/frozen_modules/optparse.h \
		Python/frozen_modules/os.h \
		Python/frozen_modules/_osx_support.h \
		Python/frozen_modules/pathlib.h \
		Python/frozen_modules/pdb.h \
		Python/frozen_modules/__phello__.h \
		Python/frozen_modules/__phello__.ham.h \
		Python/frozen_modules/__phello__.ham.eggs.h \
		Python/frozen_modules/__phello__.spam.h \
		Python/frozen_modules/pickle.h \
		Python/frozen_modules/pickletools.h \
		Python/frozen_modules/pkgutil.h \
		Python/frozen_modules/platform.h \
		Python/frozen_modules/plistlib.h \
		Python/frozen_modules/poplib.h \
		Python/frozen_modules/posixpath.h \
		Python/frozen_modules/pprint.h \
		Python/frozen_modules/profile.h \
		Python/frozen_modules/pstats.h \
		Python/frozen_modules/pty.h \
		Python/frozen_modules/_py_abc.h \
		Python/frozen_modules/pyclbr.h \
		Python/frozen_modules/py_compile.h \
		Python/frozen_modules/_pydatetime.h \
		Python/frozen_modules/_pydecimal.h \
		Python/frozen_modules/_pyio.h \
		Python/frozen_modules/_pylong.h \
		Python/frozen_modules/queue.h \
		Python/frozen_modules/quopri.h \
		Python/frozen_modules/random.h \
		Python/frozen_modules/re.h \
		Python/frozen_modules/re._casefix.h \
		Python/frozen_modules/re._compiler.h \
		Python/frozen_modules/re._constants.h \
		Python/frozen_modules/re._parser.h \
		Python/frozen_modules/reprlib.h \
		Python/frozen_modules/rlcompleter.h \
		Python/frozen_modules/sched.h \
		Python/frozen_modules/selectors.h \
		Python/frozen_modules/shelve.h \
		Python/frozen_modules/shlex.h \
		Python/frozen_modules/shutil.h \
		Python/frozen_modules/signal.h \
		Python/frozen_modules/smtplib.h \
		Python/frozen_modules/socket.h \
		Python/frozen_modules/socketserver.h \
		Python/frozen_modules/statistics.h \
		Python/frozen_modules/stat.h \
		Python/frozen_modules/stringprep.h \
		Python/frozen_modules/string.h \
		Python/frozen_modules/_strptime.h \
		Python/frozen_modules/struct.h \
		Python/frozen_modules/subprocess.h \
		Python/frozen_modules/symtable.h \
		Python/frozen_modules/sysconfig.h \
		Python/frozen_modules/tabnanny.h \
		Python/frozen_modules/tempfile.h \
		Python/frozen_modules/textwrap.h \
		Python/frozen_modules/this.h \
		Python/frozen_modules/_threading_local.h \
		Python/frozen_modules/threading.h \
		Python/frozen_modules/timeit.h \
		Python/frozen_modules/tokenize.h \
		Python/frozen_modules/token.h \
		Python/frozen_modules/tomllib.h \
		Python/frozen_modules/tomllib._parser.h \
		Python/frozen_modules/tomllib._re.h \
		Python/frozen_modules/tomllib._types.h \
		Python/frozen_modules/traceback.h \
		Python/frozen_modules/tracemalloc.h \
		Python/frozen_modules/trace.h \
		Python/frozen_modules/tty.h \
		Python/frozen_modules/types.h \
		Python/frozen_modules/typing.h \
		Python/frozen_modules/uuid.h \
		Python/frozen_modules/warnings.h \
		Python/frozen_modules/wave.h \
		Python/frozen_modules/weakref.h \
		Python/frozen_modules/_weakrefset.h \
		Python/frozen_modules/webbrowser.h \
		Python/frozen_modules/wsgiref.h \
		Python/frozen_modules/wsgiref.handlers.h \
		Python/frozen_modules/wsgiref.headers.h \
		Python/frozen_modules/wsgiref.simple_server.h \
		Python/frozen_modules/wsgiref.types.h \
		Python/frozen_modules/wsgiref.util.h \
		Python/frozen_modules/wsgiref.validate.h \
		Python/frozen_modules/zipapp.h \
		Python/frozen_modules/zipfile.h \
		Python/frozen_modules/zipfile.__main__.h \
		Python/frozen_modules/zipfile._path.h \
		Python/frozen_modules/zipfile._path.glob.h \
		Python/frozen_modules/zoneinfo.h \
		Python/frozen_modules/zoneinfo._common.h \
		Python/frozen_modules/zoneinfo._tzpath.h \
		Python/frozen_modules/zoneinfo._zoneinfo.h \
		Python/frozen_modules/gdb.h \
		Python/frozen_modules/gdb.FrameDecorator.h \
		Python/frozen_modules/gdb.FrameIterator.h \
		Python/frozen_modules/gdb.command.h \
		Python/frozen_modules/gdb.command.explore.h \
		Python/frozen_modules/gdb.command.frame_filters.h \
		Python/frozen_modules/gdb.command.missing_debug.h \
		Python/frozen_modules/gdb.command.pretty_printers.h \
		Python/frozen_modules/gdb.command.prompt.h \
		Python/frozen_modules/gdb.command.type_printers.h \
		Python/frozen_modules/gdb.command.unwinders.h \
		Python/frozen_modules/gdb.command.xmethods.h \
		Python/frozen_modules/gdb.dap.h \
		Python/frozen_modules/gdb.dap.breakpoint.h \
		Python/frozen_modules/gdb.dap.bt.h \
		Python/frozen_modules/gdb.dap.disassemble.h \
		Python/frozen_modules/gdb.dap.evaluate.h \
		Python/frozen_modules/gdb.dap.events.h \
		Python/frozen_modules/gdb.dap.frames.h \
		Python/frozen_modules/gdb.dap.io.h \
		Python/frozen_modules/gdb.dap.launch.h \
		Python/frozen_modules/gdb.dap.locations.h \
		Python/frozen_modules/gdb.dap.memory.h \
		Python/frozen_modules/gdb.dap.modules.h \
		Python/frozen_modules/gdb.dap.next.h \
		Python/frozen_modules/gdb.dap.pause.h \
		Python/frozen_modules/gdb.dap.scopes.h \
		Python/frozen_modules/gdb.dap.server.h \
		Python/frozen_modules/gdb.dap.sources.h \
		Python/frozen_modules/gdb.dap.startup.h \
		Python/frozen_modules/gdb.dap.state.h \
		Python/frozen_modules/gdb.dap.threads.h \
		Python/frozen_modules/gdb.dap.typecheck.h \
		Python/frozen_modules/gdb.dap.varref.h \
		Python/frozen_modules/gdb.disassembler.h \
		Python/frozen_modules/gdb.frames.h \
		Python/frozen_modules/gdb.function.h \
		Python/frozen_modules/gdb.function.as_string.h \
		Python/frozen_modules/gdb.function.caller_is.h \
		Python/frozen_modules/gdb.function.strfns.h \
		Python/frozen_modules/gdb.missing_debug.h \
		Python/frozen_modules/gdb.printer.h \
		Python/frozen_modules/gdb.printer.bound_registers.h \
		Python/frozen_modules/gdb.printing.h \
		Python/frozen_modules/gdb.prompt.h \
		Python/frozen_modules/gdb.styling.h \
		Python/frozen_modules/gdb.types.h \
		Python/frozen_modules/gdb.unwinder.h \
		Python/frozen_modules/gdb.xmethod.h \
		Python/frozen_modules/_sitebuiltins.h \
		Python/frozen_modules/site.h \
		Python/frozen_modules/runpy.h \
		Python/frozen_modules/__hello__.h \
		Python/frozen_modules/frozen_only.h
# End FROZEN_FILES_OUT

Programs/_freeze_module.o: Programs/_freeze_module.c Makefile

Modules/getpath_noop.o: $(srcdir)/Modules/getpath_noop.c Makefile

Programs/_freeze_module: Programs/_freeze_module.o Modules/getpath_noop.o $(LIBRARY_OBJS_OMIT_FROZEN)
	$(LINKCC) $(PY_CORE_LDFLAGS) -o $@ Programs/_freeze_module.o Modules/getpath_noop.o $(LIBRARY_OBJS_OMIT_FROZEN) $(LIBS) $(MODLIBS) $(SYSLIBS)

# We manually freeze getpath.py rather than through freeze_modules
Python/frozen_modules/getpath.h: Modules/getpath.py $(FREEZE_MODULE_BOOTSTRAP_DEPS)
	$(FREEZE_MODULE_BOOTSTRAP) getpath $(srcdir)/Modules/getpath.py Python/frozen_modules/getpath.h

# BEGIN: freezing modules

Python/frozen_modules/importlib._bootstrap.h: Lib/importlib/_bootstrap.py $(FREEZE_MODULE_BOOTSTRAP_DEPS)
	$(FREEZE_MODULE_BOOTSTRAP) importlib._bootstrap $(srcdir)/Lib/importlib/_bootstrap.py Python/frozen_modules/importlib._bootstrap.h

Python/frozen_modules/importlib._bootstrap_external.h: Lib/importlib/_bootstrap_external.py $(FREEZE_MODULE_BOOTSTRAP_DEPS)
	$(FREEZE_MODULE_BOOTSTRAP) importlib._bootstrap_external $(srcdir)/Lib/importlib/_bootstrap_external.py Python/frozen_modules/importlib._bootstrap_external.h

Python/frozen_modules/zipimport.h: Lib/zipimport.py $(FREEZE_MODULE_BOOTSTRAP_DEPS)
	$(FREEZE_MODULE_BOOTSTRAP) zipimport $(srcdir)/Lib/zipimport.py Python/frozen_modules/zipimport.h

Python/frozen_modules/abc.h: Lib/abc.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) abc $(srcdir)/Lib/abc.py Python/frozen_modules/abc.h

Python/frozen_modules/_aix_support.h: Lib/_aix_support.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _aix_support $(srcdir)/Lib/_aix_support.py Python/frozen_modules/_aix_support.h

Python/frozen_modules/antigravity.h: Lib/antigravity.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) antigravity $(srcdir)/Lib/antigravity.py Python/frozen_modules/antigravity.h

Python/frozen_modules/argparse.h: Lib/argparse.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) argparse $(srcdir)/Lib/argparse.py Python/frozen_modules/argparse.h

Python/frozen_modules/ast.h: Lib/ast.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) ast $(srcdir)/Lib/ast.py Python/frozen_modules/ast.h

Python/frozen_modules/base64.h: Lib/base64.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) base64 $(srcdir)/Lib/base64.py Python/frozen_modules/base64.h

Python/frozen_modules/bdb.h: Lib/bdb.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) bdb $(srcdir)/Lib/bdb.py Python/frozen_modules/bdb.h

Python/frozen_modules/bisect.h: Lib/bisect.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) bisect $(srcdir)/Lib/bisect.py Python/frozen_modules/bisect.h

Python/frozen_modules/calendar.h: Lib/calendar.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) calendar $(srcdir)/Lib/calendar.py Python/frozen_modules/calendar.h

Python/frozen_modules/cmd.h: Lib/cmd.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) cmd $(srcdir)/Lib/cmd.py Python/frozen_modules/cmd.h

Python/frozen_modules/codecs.h: Lib/codecs.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) codecs $(srcdir)/Lib/codecs.py Python/frozen_modules/codecs.h

Python/frozen_modules/codeop.h: Lib/codeop.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) codeop $(srcdir)/Lib/codeop.py Python/frozen_modules/codeop.h

Python/frozen_modules/code.h: Lib/code.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) code $(srcdir)/Lib/code.py Python/frozen_modules/code.h

Python/frozen_modules/collections.h: Lib/collections/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) collections $(srcdir)/Lib/collections/__init__.py Python/frozen_modules/collections.h

Python/frozen_modules/collections.abc.h: Lib/collections/abc.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) collections.abc $(srcdir)/Lib/collections/abc.py Python/frozen_modules/collections.abc.h

Python/frozen_modules/_collections_abc.h: Lib/_collections_abc.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _collections_abc $(srcdir)/Lib/_collections_abc.py Python/frozen_modules/_collections_abc.h

Python/frozen_modules/colorsys.h: Lib/colorsys.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) colorsys $(srcdir)/Lib/colorsys.py Python/frozen_modules/colorsys.h

Python/frozen_modules/_compat_pickle.h: Lib/_compat_pickle.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _compat_pickle $(srcdir)/Lib/_compat_pickle.py Python/frozen_modules/_compat_pickle.h

Python/frozen_modules/compileall.h: Lib/compileall.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) compileall $(srcdir)/Lib/compileall.py Python/frozen_modules/compileall.h

Python/frozen_modules/_compression.h: Lib/_compression.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _compression $(srcdir)/Lib/_compression.py Python/frozen_modules/_compression.h

Python/frozen_modules/concurrent.h: Lib/concurrent/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) concurrent $(srcdir)/Lib/concurrent/__init__.py Python/frozen_modules/concurrent.h

Python/frozen_modules/concurrent.futures.h: Lib/concurrent/futures/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) concurrent.futures $(srcdir)/Lib/concurrent/futures/__init__.py Python/frozen_modules/concurrent.futures.h

Python/frozen_modules/concurrent.futures._base.h: Lib/concurrent/futures/_base.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) concurrent.futures._base $(srcdir)/Lib/concurrent/futures/_base.py Python/frozen_modules/concurrent.futures._base.h

Python/frozen_modules/concurrent.futures.process.h: Lib/concurrent/futures/process.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) concurrent.futures.process $(srcdir)/Lib/concurrent/futures/process.py Python/frozen_modules/concurrent.futures.process.h

Python/frozen_modules/concurrent.futures.thread.h: Lib/concurrent/futures/thread.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) concurrent.futures.thread $(srcdir)/Lib/concurrent/futures/thread.py Python/frozen_modules/concurrent.futures.thread.h

Python/frozen_modules/configparser.h: Lib/configparser.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) configparser $(srcdir)/Lib/configparser.py Python/frozen_modules/configparser.h

Python/frozen_modules/contextlib.h: Lib/contextlib.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) contextlib $(srcdir)/Lib/contextlib.py Python/frozen_modules/contextlib.h

Python/frozen_modules/contextvars.h: Lib/contextvars.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) contextvars $(srcdir)/Lib/contextvars.py Python/frozen_modules/contextvars.h

Python/frozen_modules/copy.h: Lib/copy.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) copy $(srcdir)/Lib/copy.py Python/frozen_modules/copy.h

Python/frozen_modules/copyreg.h: Lib/copyreg.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) copyreg $(srcdir)/Lib/copyreg.py Python/frozen_modules/copyreg.h

Python/frozen_modules/cProfile.h: Lib/cProfile.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) cProfile $(srcdir)/Lib/cProfile.py Python/frozen_modules/cProfile.h

Python/frozen_modules/csv.h: Lib/csv.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) csv $(srcdir)/Lib/csv.py Python/frozen_modules/csv.h

Python/frozen_modules/dataclasses.h: Lib/dataclasses.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) dataclasses $(srcdir)/Lib/dataclasses.py Python/frozen_modules/dataclasses.h

Python/frozen_modules/datetime.h: Lib/datetime.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) datetime $(srcdir)/Lib/datetime.py Python/frozen_modules/datetime.h

Python/frozen_modules/dbm.h: Lib/dbm/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) dbm $(srcdir)/Lib/dbm/__init__.py Python/frozen_modules/dbm.h

Python/frozen_modules/dbm.dumb.h: Lib/dbm/dumb.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) dbm.dumb $(srcdir)/Lib/dbm/dumb.py Python/frozen_modules/dbm.dumb.h

Python/frozen_modules/dbm.gnu.h: Lib/dbm/gnu.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) dbm.gnu $(srcdir)/Lib/dbm/gnu.py Python/frozen_modules/dbm.gnu.h

Python/frozen_modules/dbm.ndbm.h: Lib/dbm/ndbm.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) dbm.ndbm $(srcdir)/Lib/dbm/ndbm.py Python/frozen_modules/dbm.ndbm.h

Python/frozen_modules/decimal.h: Lib/decimal.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) decimal $(srcdir)/Lib/decimal.py Python/frozen_modules/decimal.h

Python/frozen_modules/difflib.h: Lib/difflib.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) difflib $(srcdir)/Lib/difflib.py Python/frozen_modules/difflib.h

Python/frozen_modules/dis.h: Lib/dis.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) dis $(srcdir)/Lib/dis.py Python/frozen_modules/dis.h

Python/frozen_modules/encodings.h: Lib/encodings/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings $(srcdir)/Lib/encodings/__init__.py Python/frozen_modules/encodings.h

Python/frozen_modules/encodings.aliases.h: Lib/encodings/aliases.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.aliases $(srcdir)/Lib/encodings/aliases.py Python/frozen_modules/encodings.aliases.h

Python/frozen_modules/encodings.ascii.h: Lib/encodings/ascii.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.ascii $(srcdir)/Lib/encodings/ascii.py Python/frozen_modules/encodings.ascii.h

Python/frozen_modules/encodings.base64_codec.h: Lib/encodings/base64_codec.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.base64_codec $(srcdir)/Lib/encodings/base64_codec.py Python/frozen_modules/encodings.base64_codec.h

Python/frozen_modules/encodings.big5.h: Lib/encodings/big5.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.big5 $(srcdir)/Lib/encodings/big5.py Python/frozen_modules/encodings.big5.h

Python/frozen_modules/encodings.big5hkscs.h: Lib/encodings/big5hkscs.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.big5hkscs $(srcdir)/Lib/encodings/big5hkscs.py Python/frozen_modules/encodings.big5hkscs.h

Python/frozen_modules/encodings.bz2_codec.h: Lib/encodings/bz2_codec.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.bz2_codec $(srcdir)/Lib/encodings/bz2_codec.py Python/frozen_modules/encodings.bz2_codec.h

Python/frozen_modules/encodings.charmap.h: Lib/encodings/charmap.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.charmap $(srcdir)/Lib/encodings/charmap.py Python/frozen_modules/encodings.charmap.h

Python/frozen_modules/encodings.cp037.h: Lib/encodings/cp037.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp037 $(srcdir)/Lib/encodings/cp037.py Python/frozen_modules/encodings.cp037.h

Python/frozen_modules/encodings.cp1006.h: Lib/encodings/cp1006.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1006 $(srcdir)/Lib/encodings/cp1006.py Python/frozen_modules/encodings.cp1006.h

Python/frozen_modules/encodings.cp1026.h: Lib/encodings/cp1026.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1026 $(srcdir)/Lib/encodings/cp1026.py Python/frozen_modules/encodings.cp1026.h

Python/frozen_modules/encodings.cp1125.h: Lib/encodings/cp1125.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1125 $(srcdir)/Lib/encodings/cp1125.py Python/frozen_modules/encodings.cp1125.h

Python/frozen_modules/encodings.cp1140.h: Lib/encodings/cp1140.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1140 $(srcdir)/Lib/encodings/cp1140.py Python/frozen_modules/encodings.cp1140.h

Python/frozen_modules/encodings.cp1250.h: Lib/encodings/cp1250.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1250 $(srcdir)/Lib/encodings/cp1250.py Python/frozen_modules/encodings.cp1250.h

Python/frozen_modules/encodings.cp1251.h: Lib/encodings/cp1251.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1251 $(srcdir)/Lib/encodings/cp1251.py Python/frozen_modules/encodings.cp1251.h

Python/frozen_modules/encodings.cp1252.h: Lib/encodings/cp1252.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1252 $(srcdir)/Lib/encodings/cp1252.py Python/frozen_modules/encodings.cp1252.h

Python/frozen_modules/encodings.cp1253.h: Lib/encodings/cp1253.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1253 $(srcdir)/Lib/encodings/cp1253.py Python/frozen_modules/encodings.cp1253.h

Python/frozen_modules/encodings.cp1254.h: Lib/encodings/cp1254.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1254 $(srcdir)/Lib/encodings/cp1254.py Python/frozen_modules/encodings.cp1254.h

Python/frozen_modules/encodings.cp1255.h: Lib/encodings/cp1255.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1255 $(srcdir)/Lib/encodings/cp1255.py Python/frozen_modules/encodings.cp1255.h

Python/frozen_modules/encodings.cp1256.h: Lib/encodings/cp1256.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1256 $(srcdir)/Lib/encodings/cp1256.py Python/frozen_modules/encodings.cp1256.h

Python/frozen_modules/encodings.cp1257.h: Lib/encodings/cp1257.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1257 $(srcdir)/Lib/encodings/cp1257.py Python/frozen_modules/encodings.cp1257.h

Python/frozen_modules/encodings.cp1258.h: Lib/encodings/cp1258.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp1258 $(srcdir)/Lib/encodings/cp1258.py Python/frozen_modules/encodings.cp1258.h

Python/frozen_modules/encodings.cp273.h: Lib/encodings/cp273.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp273 $(srcdir)/Lib/encodings/cp273.py Python/frozen_modules/encodings.cp273.h

Python/frozen_modules/encodings.cp424.h: Lib/encodings/cp424.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp424 $(srcdir)/Lib/encodings/cp424.py Python/frozen_modules/encodings.cp424.h

Python/frozen_modules/encodings.cp437.h: Lib/encodings/cp437.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp437 $(srcdir)/Lib/encodings/cp437.py Python/frozen_modules/encodings.cp437.h

Python/frozen_modules/encodings.cp500.h: Lib/encodings/cp500.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp500 $(srcdir)/Lib/encodings/cp500.py Python/frozen_modules/encodings.cp500.h

Python/frozen_modules/encodings.cp720.h: Lib/encodings/cp720.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp720 $(srcdir)/Lib/encodings/cp720.py Python/frozen_modules/encodings.cp720.h

Python/frozen_modules/encodings.cp737.h: Lib/encodings/cp737.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp737 $(srcdir)/Lib/encodings/cp737.py Python/frozen_modules/encodings.cp737.h

Python/frozen_modules/encodings.cp775.h: Lib/encodings/cp775.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp775 $(srcdir)/Lib/encodings/cp775.py Python/frozen_modules/encodings.cp775.h

Python/frozen_modules/encodings.cp850.h: Lib/encodings/cp850.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp850 $(srcdir)/Lib/encodings/cp850.py Python/frozen_modules/encodings.cp850.h

Python/frozen_modules/encodings.cp852.h: Lib/encodings/cp852.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp852 $(srcdir)/Lib/encodings/cp852.py Python/frozen_modules/encodings.cp852.h

Python/frozen_modules/encodings.cp855.h: Lib/encodings/cp855.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp855 $(srcdir)/Lib/encodings/cp855.py Python/frozen_modules/encodings.cp855.h

Python/frozen_modules/encodings.cp856.h: Lib/encodings/cp856.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp856 $(srcdir)/Lib/encodings/cp856.py Python/frozen_modules/encodings.cp856.h

Python/frozen_modules/encodings.cp857.h: Lib/encodings/cp857.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp857 $(srcdir)/Lib/encodings/cp857.py Python/frozen_modules/encodings.cp857.h

Python/frozen_modules/encodings.cp858.h: Lib/encodings/cp858.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp858 $(srcdir)/Lib/encodings/cp858.py Python/frozen_modules/encodings.cp858.h

Python/frozen_modules/encodings.cp860.h: Lib/encodings/cp860.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp860 $(srcdir)/Lib/encodings/cp860.py Python/frozen_modules/encodings.cp860.h

Python/frozen_modules/encodings.cp861.h: Lib/encodings/cp861.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp861 $(srcdir)/Lib/encodings/cp861.py Python/frozen_modules/encodings.cp861.h

Python/frozen_modules/encodings.cp862.h: Lib/encodings/cp862.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp862 $(srcdir)/Lib/encodings/cp862.py Python/frozen_modules/encodings.cp862.h

Python/frozen_modules/encodings.cp863.h: Lib/encodings/cp863.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp863 $(srcdir)/Lib/encodings/cp863.py Python/frozen_modules/encodings.cp863.h

Python/frozen_modules/encodings.cp864.h: Lib/encodings/cp864.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp864 $(srcdir)/Lib/encodings/cp864.py Python/frozen_modules/encodings.cp864.h

Python/frozen_modules/encodings.cp865.h: Lib/encodings/cp865.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp865 $(srcdir)/Lib/encodings/cp865.py Python/frozen_modules/encodings.cp865.h

Python/frozen_modules/encodings.cp866.h: Lib/encodings/cp866.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp866 $(srcdir)/Lib/encodings/cp866.py Python/frozen_modules/encodings.cp866.h

Python/frozen_modules/encodings.cp869.h: Lib/encodings/cp869.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp869 $(srcdir)/Lib/encodings/cp869.py Python/frozen_modules/encodings.cp869.h

Python/frozen_modules/encodings.cp874.h: Lib/encodings/cp874.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp874 $(srcdir)/Lib/encodings/cp874.py Python/frozen_modules/encodings.cp874.h

Python/frozen_modules/encodings.cp875.h: Lib/encodings/cp875.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp875 $(srcdir)/Lib/encodings/cp875.py Python/frozen_modules/encodings.cp875.h

Python/frozen_modules/encodings.cp932.h: Lib/encodings/cp932.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp932 $(srcdir)/Lib/encodings/cp932.py Python/frozen_modules/encodings.cp932.h

Python/frozen_modules/encodings.cp949.h: Lib/encodings/cp949.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp949 $(srcdir)/Lib/encodings/cp949.py Python/frozen_modules/encodings.cp949.h

Python/frozen_modules/encodings.cp950.h: Lib/encodings/cp950.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.cp950 $(srcdir)/Lib/encodings/cp950.py Python/frozen_modules/encodings.cp950.h

Python/frozen_modules/encodings.euc_jis_2004.h: Lib/encodings/euc_jis_2004.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.euc_jis_2004 $(srcdir)/Lib/encodings/euc_jis_2004.py Python/frozen_modules/encodings.euc_jis_2004.h

Python/frozen_modules/encodings.euc_jisx0213.h: Lib/encodings/euc_jisx0213.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.euc_jisx0213 $(srcdir)/Lib/encodings/euc_jisx0213.py Python/frozen_modules/encodings.euc_jisx0213.h

Python/frozen_modules/encodings.euc_jp.h: Lib/encodings/euc_jp.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.euc_jp $(srcdir)/Lib/encodings/euc_jp.py Python/frozen_modules/encodings.euc_jp.h

Python/frozen_modules/encodings.euc_kr.h: Lib/encodings/euc_kr.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.euc_kr $(srcdir)/Lib/encodings/euc_kr.py Python/frozen_modules/encodings.euc_kr.h

Python/frozen_modules/encodings.gb18030.h: Lib/encodings/gb18030.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.gb18030 $(srcdir)/Lib/encodings/gb18030.py Python/frozen_modules/encodings.gb18030.h

Python/frozen_modules/encodings.gb2312.h: Lib/encodings/gb2312.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.gb2312 $(srcdir)/Lib/encodings/gb2312.py Python/frozen_modules/encodings.gb2312.h

Python/frozen_modules/encodings.gbk.h: Lib/encodings/gbk.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.gbk $(srcdir)/Lib/encodings/gbk.py Python/frozen_modules/encodings.gbk.h

Python/frozen_modules/encodings.hex_codec.h: Lib/encodings/hex_codec.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.hex_codec $(srcdir)/Lib/encodings/hex_codec.py Python/frozen_modules/encodings.hex_codec.h

Python/frozen_modules/encodings.hp_roman8.h: Lib/encodings/hp_roman8.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.hp_roman8 $(srcdir)/Lib/encodings/hp_roman8.py Python/frozen_modules/encodings.hp_roman8.h

Python/frozen_modules/encodings.hz.h: Lib/encodings/hz.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.hz $(srcdir)/Lib/encodings/hz.py Python/frozen_modules/encodings.hz.h

Python/frozen_modules/encodings.idna.h: Lib/encodings/idna.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.idna $(srcdir)/Lib/encodings/idna.py Python/frozen_modules/encodings.idna.h

Python/frozen_modules/encodings.iso2022_jp.h: Lib/encodings/iso2022_jp.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso2022_jp $(srcdir)/Lib/encodings/iso2022_jp.py Python/frozen_modules/encodings.iso2022_jp.h

Python/frozen_modules/encodings.iso2022_jp_1.h: Lib/encodings/iso2022_jp_1.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso2022_jp_1 $(srcdir)/Lib/encodings/iso2022_jp_1.py Python/frozen_modules/encodings.iso2022_jp_1.h

Python/frozen_modules/encodings.iso2022_jp_2.h: Lib/encodings/iso2022_jp_2.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso2022_jp_2 $(srcdir)/Lib/encodings/iso2022_jp_2.py Python/frozen_modules/encodings.iso2022_jp_2.h

Python/frozen_modules/encodings.iso2022_jp_2004.h: Lib/encodings/iso2022_jp_2004.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso2022_jp_2004 $(srcdir)/Lib/encodings/iso2022_jp_2004.py Python/frozen_modules/encodings.iso2022_jp_2004.h

Python/frozen_modules/encodings.iso2022_jp_3.h: Lib/encodings/iso2022_jp_3.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso2022_jp_3 $(srcdir)/Lib/encodings/iso2022_jp_3.py Python/frozen_modules/encodings.iso2022_jp_3.h

Python/frozen_modules/encodings.iso2022_jp_ext.h: Lib/encodings/iso2022_jp_ext.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso2022_jp_ext $(srcdir)/Lib/encodings/iso2022_jp_ext.py Python/frozen_modules/encodings.iso2022_jp_ext.h

Python/frozen_modules/encodings.iso2022_kr.h: Lib/encodings/iso2022_kr.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso2022_kr $(srcdir)/Lib/encodings/iso2022_kr.py Python/frozen_modules/encodings.iso2022_kr.h

Python/frozen_modules/encodings.iso8859_1.h: Lib/encodings/iso8859_1.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_1 $(srcdir)/Lib/encodings/iso8859_1.py Python/frozen_modules/encodings.iso8859_1.h

Python/frozen_modules/encodings.iso8859_10.h: Lib/encodings/iso8859_10.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_10 $(srcdir)/Lib/encodings/iso8859_10.py Python/frozen_modules/encodings.iso8859_10.h

Python/frozen_modules/encodings.iso8859_11.h: Lib/encodings/iso8859_11.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_11 $(srcdir)/Lib/encodings/iso8859_11.py Python/frozen_modules/encodings.iso8859_11.h

Python/frozen_modules/encodings.iso8859_13.h: Lib/encodings/iso8859_13.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_13 $(srcdir)/Lib/encodings/iso8859_13.py Python/frozen_modules/encodings.iso8859_13.h

Python/frozen_modules/encodings.iso8859_14.h: Lib/encodings/iso8859_14.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_14 $(srcdir)/Lib/encodings/iso8859_14.py Python/frozen_modules/encodings.iso8859_14.h

Python/frozen_modules/encodings.iso8859_15.h: Lib/encodings/iso8859_15.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_15 $(srcdir)/Lib/encodings/iso8859_15.py Python/frozen_modules/encodings.iso8859_15.h

Python/frozen_modules/encodings.iso8859_16.h: Lib/encodings/iso8859_16.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_16 $(srcdir)/Lib/encodings/iso8859_16.py Python/frozen_modules/encodings.iso8859_16.h

Python/frozen_modules/encodings.iso8859_2.h: Lib/encodings/iso8859_2.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_2 $(srcdir)/Lib/encodings/iso8859_2.py Python/frozen_modules/encodings.iso8859_2.h

Python/frozen_modules/encodings.iso8859_3.h: Lib/encodings/iso8859_3.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_3 $(srcdir)/Lib/encodings/iso8859_3.py Python/frozen_modules/encodings.iso8859_3.h

Python/frozen_modules/encodings.iso8859_4.h: Lib/encodings/iso8859_4.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_4 $(srcdir)/Lib/encodings/iso8859_4.py Python/frozen_modules/encodings.iso8859_4.h

Python/frozen_modules/encodings.iso8859_5.h: Lib/encodings/iso8859_5.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_5 $(srcdir)/Lib/encodings/iso8859_5.py Python/frozen_modules/encodings.iso8859_5.h

Python/frozen_modules/encodings.iso8859_6.h: Lib/encodings/iso8859_6.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_6 $(srcdir)/Lib/encodings/iso8859_6.py Python/frozen_modules/encodings.iso8859_6.h

Python/frozen_modules/encodings.iso8859_7.h: Lib/encodings/iso8859_7.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_7 $(srcdir)/Lib/encodings/iso8859_7.py Python/frozen_modules/encodings.iso8859_7.h

Python/frozen_modules/encodings.iso8859_8.h: Lib/encodings/iso8859_8.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_8 $(srcdir)/Lib/encodings/iso8859_8.py Python/frozen_modules/encodings.iso8859_8.h

Python/frozen_modules/encodings.iso8859_9.h: Lib/encodings/iso8859_9.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.iso8859_9 $(srcdir)/Lib/encodings/iso8859_9.py Python/frozen_modules/encodings.iso8859_9.h

Python/frozen_modules/encodings.johab.h: Lib/encodings/johab.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.johab $(srcdir)/Lib/encodings/johab.py Python/frozen_modules/encodings.johab.h

Python/frozen_modules/encodings.koi8_r.h: Lib/encodings/koi8_r.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.koi8_r $(srcdir)/Lib/encodings/koi8_r.py Python/frozen_modules/encodings.koi8_r.h

Python/frozen_modules/encodings.koi8_t.h: Lib/encodings/koi8_t.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.koi8_t $(srcdir)/Lib/encodings/koi8_t.py Python/frozen_modules/encodings.koi8_t.h

Python/frozen_modules/encodings.koi8_u.h: Lib/encodings/koi8_u.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.koi8_u $(srcdir)/Lib/encodings/koi8_u.py Python/frozen_modules/encodings.koi8_u.h

Python/frozen_modules/encodings.kz1048.h: Lib/encodings/kz1048.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.kz1048 $(srcdir)/Lib/encodings/kz1048.py Python/frozen_modules/encodings.kz1048.h

Python/frozen_modules/encodings.latin_1.h: Lib/encodings/latin_1.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.latin_1 $(srcdir)/Lib/encodings/latin_1.py Python/frozen_modules/encodings.latin_1.h

Python/frozen_modules/encodings.mac_arabic.h: Lib/encodings/mac_arabic.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.mac_arabic $(srcdir)/Lib/encodings/mac_arabic.py Python/frozen_modules/encodings.mac_arabic.h

Python/frozen_modules/encodings.mac_croatian.h: Lib/encodings/mac_croatian.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.mac_croatian $(srcdir)/Lib/encodings/mac_croatian.py Python/frozen_modules/encodings.mac_croatian.h

Python/frozen_modules/encodings.mac_cyrillic.h: Lib/encodings/mac_cyrillic.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.mac_cyrillic $(srcdir)/Lib/encodings/mac_cyrillic.py Python/frozen_modules/encodings.mac_cyrillic.h

Python/frozen_modules/encodings.mac_farsi.h: Lib/encodings/mac_farsi.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.mac_farsi $(srcdir)/Lib/encodings/mac_farsi.py Python/frozen_modules/encodings.mac_farsi.h

Python/frozen_modules/encodings.mac_greek.h: Lib/encodings/mac_greek.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.mac_greek $(srcdir)/Lib/encodings/mac_greek.py Python/frozen_modules/encodings.mac_greek.h

Python/frozen_modules/encodings.mac_iceland.h: Lib/encodings/mac_iceland.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.mac_iceland $(srcdir)/Lib/encodings/mac_iceland.py Python/frozen_modules/encodings.mac_iceland.h

Python/frozen_modules/encodings.mac_latin2.h: Lib/encodings/mac_latin2.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.mac_latin2 $(srcdir)/Lib/encodings/mac_latin2.py Python/frozen_modules/encodings.mac_latin2.h

Python/frozen_modules/encodings.mac_roman.h: Lib/encodings/mac_roman.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.mac_roman $(srcdir)/Lib/encodings/mac_roman.py Python/frozen_modules/encodings.mac_roman.h

Python/frozen_modules/encodings.mac_romanian.h: Lib/encodings/mac_romanian.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.mac_romanian $(srcdir)/Lib/encodings/mac_romanian.py Python/frozen_modules/encodings.mac_romanian.h

Python/frozen_modules/encodings.mac_turkish.h: Lib/encodings/mac_turkish.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.mac_turkish $(srcdir)/Lib/encodings/mac_turkish.py Python/frozen_modules/encodings.mac_turkish.h

Python/frozen_modules/encodings.mbcs.h: Lib/encodings/mbcs.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.mbcs $(srcdir)/Lib/encodings/mbcs.py Python/frozen_modules/encodings.mbcs.h

Python/frozen_modules/encodings.oem.h: Lib/encodings/oem.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.oem $(srcdir)/Lib/encodings/oem.py Python/frozen_modules/encodings.oem.h

Python/frozen_modules/encodings.palmos.h: Lib/encodings/palmos.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.palmos $(srcdir)/Lib/encodings/palmos.py Python/frozen_modules/encodings.palmos.h

Python/frozen_modules/encodings.ptcp154.h: Lib/encodings/ptcp154.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.ptcp154 $(srcdir)/Lib/encodings/ptcp154.py Python/frozen_modules/encodings.ptcp154.h

Python/frozen_modules/encodings.punycode.h: Lib/encodings/punycode.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.punycode $(srcdir)/Lib/encodings/punycode.py Python/frozen_modules/encodings.punycode.h

Python/frozen_modules/encodings.quopri_codec.h: Lib/encodings/quopri_codec.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.quopri_codec $(srcdir)/Lib/encodings/quopri_codec.py Python/frozen_modules/encodings.quopri_codec.h

Python/frozen_modules/encodings.raw_unicode_escape.h: Lib/encodings/raw_unicode_escape.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.raw_unicode_escape $(srcdir)/Lib/encodings/raw_unicode_escape.py Python/frozen_modules/encodings.raw_unicode_escape.h

Python/frozen_modules/encodings.rot_13.h: Lib/encodings/rot_13.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.rot_13 $(srcdir)/Lib/encodings/rot_13.py Python/frozen_modules/encodings.rot_13.h

Python/frozen_modules/encodings.shift_jis.h: Lib/encodings/shift_jis.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.shift_jis $(srcdir)/Lib/encodings/shift_jis.py Python/frozen_modules/encodings.shift_jis.h

Python/frozen_modules/encodings.shift_jis_2004.h: Lib/encodings/shift_jis_2004.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.shift_jis_2004 $(srcdir)/Lib/encodings/shift_jis_2004.py Python/frozen_modules/encodings.shift_jis_2004.h

Python/frozen_modules/encodings.shift_jisx0213.h: Lib/encodings/shift_jisx0213.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.shift_jisx0213 $(srcdir)/Lib/encodings/shift_jisx0213.py Python/frozen_modules/encodings.shift_jisx0213.h

Python/frozen_modules/encodings.tis_620.h: Lib/encodings/tis_620.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.tis_620 $(srcdir)/Lib/encodings/tis_620.py Python/frozen_modules/encodings.tis_620.h

Python/frozen_modules/encodings.undefined.h: Lib/encodings/undefined.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.undefined $(srcdir)/Lib/encodings/undefined.py Python/frozen_modules/encodings.undefined.h

Python/frozen_modules/encodings.unicode_escape.h: Lib/encodings/unicode_escape.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.unicode_escape $(srcdir)/Lib/encodings/unicode_escape.py Python/frozen_modules/encodings.unicode_escape.h

Python/frozen_modules/encodings.utf_16.h: Lib/encodings/utf_16.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.utf_16 $(srcdir)/Lib/encodings/utf_16.py Python/frozen_modules/encodings.utf_16.h

Python/frozen_modules/encodings.utf_16_be.h: Lib/encodings/utf_16_be.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.utf_16_be $(srcdir)/Lib/encodings/utf_16_be.py Python/frozen_modules/encodings.utf_16_be.h

Python/frozen_modules/encodings.utf_16_le.h: Lib/encodings/utf_16_le.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.utf_16_le $(srcdir)/Lib/encodings/utf_16_le.py Python/frozen_modules/encodings.utf_16_le.h

Python/frozen_modules/encodings.utf_32.h: Lib/encodings/utf_32.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.utf_32 $(srcdir)/Lib/encodings/utf_32.py Python/frozen_modules/encodings.utf_32.h

Python/frozen_modules/encodings.utf_32_be.h: Lib/encodings/utf_32_be.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.utf_32_be $(srcdir)/Lib/encodings/utf_32_be.py Python/frozen_modules/encodings.utf_32_be.h

Python/frozen_modules/encodings.utf_32_le.h: Lib/encodings/utf_32_le.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.utf_32_le $(srcdir)/Lib/encodings/utf_32_le.py Python/frozen_modules/encodings.utf_32_le.h

Python/frozen_modules/encodings.utf_7.h: Lib/encodings/utf_7.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.utf_7 $(srcdir)/Lib/encodings/utf_7.py Python/frozen_modules/encodings.utf_7.h

Python/frozen_modules/encodings.utf_8.h: Lib/encodings/utf_8.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.utf_8 $(srcdir)/Lib/encodings/utf_8.py Python/frozen_modules/encodings.utf_8.h

Python/frozen_modules/encodings.utf_8_sig.h: Lib/encodings/utf_8_sig.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.utf_8_sig $(srcdir)/Lib/encodings/utf_8_sig.py Python/frozen_modules/encodings.utf_8_sig.h

Python/frozen_modules/encodings.uu_codec.h: Lib/encodings/uu_codec.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.uu_codec $(srcdir)/Lib/encodings/uu_codec.py Python/frozen_modules/encodings.uu_codec.h

Python/frozen_modules/encodings.zlib_codec.h: Lib/encodings/zlib_codec.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) encodings.zlib_codec $(srcdir)/Lib/encodings/zlib_codec.py Python/frozen_modules/encodings.zlib_codec.h

Python/frozen_modules/ensurepip.h: Lib/ensurepip/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) ensurepip $(srcdir)/Lib/ensurepip/__init__.py Python/frozen_modules/ensurepip.h

Python/frozen_modules/ensurepip.__main__.h: Lib/ensurepip/__main__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) ensurepip.__main__ $(srcdir)/Lib/ensurepip/__main__.py Python/frozen_modules/ensurepip.__main__.h

Python/frozen_modules/ensurepip._uninstall.h: Lib/ensurepip/_uninstall.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) ensurepip._uninstall $(srcdir)/Lib/ensurepip/_uninstall.py Python/frozen_modules/ensurepip._uninstall.h

Python/frozen_modules/enum.h: Lib/enum.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) enum $(srcdir)/Lib/enum.py Python/frozen_modules/enum.h

Python/frozen_modules/filecmp.h: Lib/filecmp.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) filecmp $(srcdir)/Lib/filecmp.py Python/frozen_modules/filecmp.h

Python/frozen_modules/fileinput.h: Lib/fileinput.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) fileinput $(srcdir)/Lib/fileinput.py Python/frozen_modules/fileinput.h

Python/frozen_modules/fnmatch.h: Lib/fnmatch.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) fnmatch $(srcdir)/Lib/fnmatch.py Python/frozen_modules/fnmatch.h

Python/frozen_modules/fractions.h: Lib/fractions.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) fractions $(srcdir)/Lib/fractions.py Python/frozen_modules/fractions.h

Python/frozen_modules/ftplib.h: Lib/ftplib.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) ftplib $(srcdir)/Lib/ftplib.py Python/frozen_modules/ftplib.h

Python/frozen_modules/functools.h: Lib/functools.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) functools $(srcdir)/Lib/functools.py Python/frozen_modules/functools.h

Python/frozen_modules/__future__.h: Lib/__future__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) __future__ $(srcdir)/Lib/__future__.py Python/frozen_modules/__future__.h

Python/frozen_modules/genericpath.h: Lib/genericpath.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) genericpath $(srcdir)/Lib/genericpath.py Python/frozen_modules/genericpath.h

Python/frozen_modules/getopt.h: Lib/getopt.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) getopt $(srcdir)/Lib/getopt.py Python/frozen_modules/getopt.h

Python/frozen_modules/getpass.h: Lib/getpass.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) getpass $(srcdir)/Lib/getpass.py Python/frozen_modules/getpass.h

Python/frozen_modules/gettext.h: Lib/gettext.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gettext $(srcdir)/Lib/gettext.py Python/frozen_modules/gettext.h

Python/frozen_modules/glob.h: Lib/glob.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) glob $(srcdir)/Lib/glob.py Python/frozen_modules/glob.h

Python/frozen_modules/graphlib.h: Lib/graphlib.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) graphlib $(srcdir)/Lib/graphlib.py Python/frozen_modules/graphlib.h

Python/frozen_modules/gzip.h: Lib/gzip.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gzip $(srcdir)/Lib/gzip.py Python/frozen_modules/gzip.h

Python/frozen_modules/hashlib.h: Lib/hashlib.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) hashlib $(srcdir)/Lib/hashlib.py Python/frozen_modules/hashlib.h

Python/frozen_modules/heapq.h: Lib/heapq.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) heapq $(srcdir)/Lib/heapq.py Python/frozen_modules/heapq.h

Python/frozen_modules/hmac.h: Lib/hmac.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) hmac $(srcdir)/Lib/hmac.py Python/frozen_modules/hmac.h

Python/frozen_modules/imaplib.h: Lib/imaplib.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) imaplib $(srcdir)/Lib/imaplib.py Python/frozen_modules/imaplib.h

Python/frozen_modules/importlib.h: Lib/importlib/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib $(srcdir)/Lib/importlib/__init__.py Python/frozen_modules/importlib.h

Python/frozen_modules/importlib._abc.h: Lib/importlib/_abc.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib._abc $(srcdir)/Lib/importlib/_abc.py Python/frozen_modules/importlib._abc.h

Python/frozen_modules/importlib.abc.h: Lib/importlib/abc.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.abc $(srcdir)/Lib/importlib/abc.py Python/frozen_modules/importlib.abc.h

Python/frozen_modules/importlib.machinery.h: Lib/importlib/machinery.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.machinery $(srcdir)/Lib/importlib/machinery.py Python/frozen_modules/importlib.machinery.h

Python/frozen_modules/importlib.metadata.h: Lib/importlib/metadata/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.metadata $(srcdir)/Lib/importlib/metadata/__init__.py Python/frozen_modules/importlib.metadata.h

Python/frozen_modules/importlib.metadata._adapters.h: Lib/importlib/metadata/_adapters.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.metadata._adapters $(srcdir)/Lib/importlib/metadata/_adapters.py Python/frozen_modules/importlib.metadata._adapters.h

Python/frozen_modules/importlib.metadata._collections.h: Lib/importlib/metadata/_collections.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.metadata._collections $(srcdir)/Lib/importlib/metadata/_collections.py Python/frozen_modules/importlib.metadata._collections.h

Python/frozen_modules/importlib.metadata._functools.h: Lib/importlib/metadata/_functools.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.metadata._functools $(srcdir)/Lib/importlib/metadata/_functools.py Python/frozen_modules/importlib.metadata._functools.h

Python/frozen_modules/importlib.metadata._itertools.h: Lib/importlib/metadata/_itertools.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.metadata._itertools $(srcdir)/Lib/importlib/metadata/_itertools.py Python/frozen_modules/importlib.metadata._itertools.h

Python/frozen_modules/importlib.metadata._meta.h: Lib/importlib/metadata/_meta.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.metadata._meta $(srcdir)/Lib/importlib/metadata/_meta.py Python/frozen_modules/importlib.metadata._meta.h

Python/frozen_modules/importlib.metadata._text.h: Lib/importlib/metadata/_text.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.metadata._text $(srcdir)/Lib/importlib/metadata/_text.py Python/frozen_modules/importlib.metadata._text.h

Python/frozen_modules/importlib.readers.h: Lib/importlib/readers.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.readers $(srcdir)/Lib/importlib/readers.py Python/frozen_modules/importlib.readers.h

Python/frozen_modules/importlib.resources.h: Lib/importlib/resources/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.resources $(srcdir)/Lib/importlib/resources/__init__.py Python/frozen_modules/importlib.resources.h

Python/frozen_modules/importlib.resources._adapters.h: Lib/importlib/resources/_adapters.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.resources._adapters $(srcdir)/Lib/importlib/resources/_adapters.py Python/frozen_modules/importlib.resources._adapters.h

Python/frozen_modules/importlib.resources._common.h: Lib/importlib/resources/_common.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.resources._common $(srcdir)/Lib/importlib/resources/_common.py Python/frozen_modules/importlib.resources._common.h

Python/frozen_modules/importlib.resources._itertools.h: Lib/importlib/resources/_itertools.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.resources._itertools $(srcdir)/Lib/importlib/resources/_itertools.py Python/frozen_modules/importlib.resources._itertools.h

Python/frozen_modules/importlib.resources._legacy.h: Lib/importlib/resources/_legacy.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.resources._legacy $(srcdir)/Lib/importlib/resources/_legacy.py Python/frozen_modules/importlib.resources._legacy.h

Python/frozen_modules/importlib.resources.abc.h: Lib/importlib/resources/abc.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.resources.abc $(srcdir)/Lib/importlib/resources/abc.py Python/frozen_modules/importlib.resources.abc.h

Python/frozen_modules/importlib.resources.readers.h: Lib/importlib/resources/readers.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.resources.readers $(srcdir)/Lib/importlib/resources/readers.py Python/frozen_modules/importlib.resources.readers.h

Python/frozen_modules/importlib.resources.simple.h: Lib/importlib/resources/simple.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.resources.simple $(srcdir)/Lib/importlib/resources/simple.py Python/frozen_modules/importlib.resources.simple.h

Python/frozen_modules/importlib.simple.h: Lib/importlib/simple.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.simple $(srcdir)/Lib/importlib/simple.py Python/frozen_modules/importlib.simple.h

Python/frozen_modules/importlib.util.h: Lib/importlib/util.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) importlib.util $(srcdir)/Lib/importlib/util.py Python/frozen_modules/importlib.util.h

Python/frozen_modules/inspect.h: Lib/inspect.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) inspect $(srcdir)/Lib/inspect.py Python/frozen_modules/inspect.h

Python/frozen_modules/io.h: Lib/io.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) io $(srcdir)/Lib/io.py Python/frozen_modules/io.h

Python/frozen_modules/ipaddress.h: Lib/ipaddress.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) ipaddress $(srcdir)/Lib/ipaddress.py Python/frozen_modules/ipaddress.h

Python/frozen_modules/json.h: Lib/json/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) json $(srcdir)/Lib/json/__init__.py Python/frozen_modules/json.h

Python/frozen_modules/json.decoder.h: Lib/json/decoder.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) json.decoder $(srcdir)/Lib/json/decoder.py Python/frozen_modules/json.decoder.h

Python/frozen_modules/json.encoder.h: Lib/json/encoder.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) json.encoder $(srcdir)/Lib/json/encoder.py Python/frozen_modules/json.encoder.h

Python/frozen_modules/json.scanner.h: Lib/json/scanner.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) json.scanner $(srcdir)/Lib/json/scanner.py Python/frozen_modules/json.scanner.h

Python/frozen_modules/json.tool.h: Lib/json/tool.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) json.tool $(srcdir)/Lib/json/tool.py Python/frozen_modules/json.tool.h

Python/frozen_modules/keyword.h: Lib/keyword.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) keyword $(srcdir)/Lib/keyword.py Python/frozen_modules/keyword.h

Python/frozen_modules/linecache.h: Lib/linecache.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) linecache $(srcdir)/Lib/linecache.py Python/frozen_modules/linecache.h

Python/frozen_modules/locale.h: Lib/locale.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) locale $(srcdir)/Lib/locale.py Python/frozen_modules/locale.h

Python/frozen_modules/logging.h: Lib/logging/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) logging $(srcdir)/Lib/logging/__init__.py Python/frozen_modules/logging.h

Python/frozen_modules/logging.config.h: Lib/logging/config.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) logging.config $(srcdir)/Lib/logging/config.py Python/frozen_modules/logging.config.h

Python/frozen_modules/logging.handlers.h: Lib/logging/handlers.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) logging.handlers $(srcdir)/Lib/logging/handlers.py Python/frozen_modules/logging.handlers.h

Python/frozen_modules/lzma.h: Lib/lzma.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) lzma $(srcdir)/Lib/lzma.py Python/frozen_modules/lzma.h

Python/frozen_modules/_markupbase.h: Lib/_markupbase.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _markupbase $(srcdir)/Lib/_markupbase.py Python/frozen_modules/_markupbase.h

Python/frozen_modules/mimetypes.h: Lib/mimetypes.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) mimetypes $(srcdir)/Lib/mimetypes.py Python/frozen_modules/mimetypes.h

Python/frozen_modules/modulefinder.h: Lib/modulefinder.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) modulefinder $(srcdir)/Lib/modulefinder.py Python/frozen_modules/modulefinder.h

Python/frozen_modules/multiprocessing.h: Lib/multiprocessing/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing $(srcdir)/Lib/multiprocessing/__init__.py Python/frozen_modules/multiprocessing.h

Python/frozen_modules/multiprocessing.connection.h: Lib/multiprocessing/connection.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.connection $(srcdir)/Lib/multiprocessing/connection.py Python/frozen_modules/multiprocessing.connection.h

Python/frozen_modules/multiprocessing.context.h: Lib/multiprocessing/context.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.context $(srcdir)/Lib/multiprocessing/context.py Python/frozen_modules/multiprocessing.context.h

Python/frozen_modules/multiprocessing.dummy.h: Lib/multiprocessing/dummy/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.dummy $(srcdir)/Lib/multiprocessing/dummy/__init__.py Python/frozen_modules/multiprocessing.dummy.h

Python/frozen_modules/multiprocessing.dummy.connection.h: Lib/multiprocessing/dummy/connection.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.dummy.connection $(srcdir)/Lib/multiprocessing/dummy/connection.py Python/frozen_modules/multiprocessing.dummy.connection.h

Python/frozen_modules/multiprocessing.forkserver.h: Lib/multiprocessing/forkserver.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.forkserver $(srcdir)/Lib/multiprocessing/forkserver.py Python/frozen_modules/multiprocessing.forkserver.h

Python/frozen_modules/multiprocessing.heap.h: Lib/multiprocessing/heap.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.heap $(srcdir)/Lib/multiprocessing/heap.py Python/frozen_modules/multiprocessing.heap.h

Python/frozen_modules/multiprocessing.managers.h: Lib/multiprocessing/managers.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.managers $(srcdir)/Lib/multiprocessing/managers.py Python/frozen_modules/multiprocessing.managers.h

Python/frozen_modules/multiprocessing.pool.h: Lib/multiprocessing/pool.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.pool $(srcdir)/Lib/multiprocessing/pool.py Python/frozen_modules/multiprocessing.pool.h

Python/frozen_modules/multiprocessing.popen_fork.h: Lib/multiprocessing/popen_fork.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.popen_fork $(srcdir)/Lib/multiprocessing/popen_fork.py Python/frozen_modules/multiprocessing.popen_fork.h

Python/frozen_modules/multiprocessing.popen_forkserver.h: Lib/multiprocessing/popen_forkserver.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.popen_forkserver $(srcdir)/Lib/multiprocessing/popen_forkserver.py Python/frozen_modules/multiprocessing.popen_forkserver.h

Python/frozen_modules/multiprocessing.popen_spawn_posix.h: Lib/multiprocessing/popen_spawn_posix.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.popen_spawn_posix $(srcdir)/Lib/multiprocessing/popen_spawn_posix.py Python/frozen_modules/multiprocessing.popen_spawn_posix.h

Python/frozen_modules/multiprocessing.popen_spawn_win32.h: Lib/multiprocessing/popen_spawn_win32.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.popen_spawn_win32 $(srcdir)/Lib/multiprocessing/popen_spawn_win32.py Python/frozen_modules/multiprocessing.popen_spawn_win32.h

Python/frozen_modules/multiprocessing.process.h: Lib/multiprocessing/process.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.process $(srcdir)/Lib/multiprocessing/process.py Python/frozen_modules/multiprocessing.process.h

Python/frozen_modules/multiprocessing.queues.h: Lib/multiprocessing/queues.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.queues $(srcdir)/Lib/multiprocessing/queues.py Python/frozen_modules/multiprocessing.queues.h

Python/frozen_modules/multiprocessing.reduction.h: Lib/multiprocessing/reduction.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.reduction $(srcdir)/Lib/multiprocessing/reduction.py Python/frozen_modules/multiprocessing.reduction.h

Python/frozen_modules/multiprocessing.resource_sharer.h: Lib/multiprocessing/resource_sharer.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.resource_sharer $(srcdir)/Lib/multiprocessing/resource_sharer.py Python/frozen_modules/multiprocessing.resource_sharer.h

Python/frozen_modules/multiprocessing.resource_tracker.h: Lib/multiprocessing/resource_tracker.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.resource_tracker $(srcdir)/Lib/multiprocessing/resource_tracker.py Python/frozen_modules/multiprocessing.resource_tracker.h

Python/frozen_modules/multiprocessing.shared_memory.h: Lib/multiprocessing/shared_memory.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.shared_memory $(srcdir)/Lib/multiprocessing/shared_memory.py Python/frozen_modules/multiprocessing.shared_memory.h

Python/frozen_modules/multiprocessing.sharedctypes.h: Lib/multiprocessing/sharedctypes.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.sharedctypes $(srcdir)/Lib/multiprocessing/sharedctypes.py Python/frozen_modules/multiprocessing.sharedctypes.h

Python/frozen_modules/multiprocessing.spawn.h: Lib/multiprocessing/spawn.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.spawn $(srcdir)/Lib/multiprocessing/spawn.py Python/frozen_modules/multiprocessing.spawn.h

Python/frozen_modules/multiprocessing.synchronize.h: Lib/multiprocessing/synchronize.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.synchronize $(srcdir)/Lib/multiprocessing/synchronize.py Python/frozen_modules/multiprocessing.synchronize.h

Python/frozen_modules/multiprocessing.util.h: Lib/multiprocessing/util.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) multiprocessing.util $(srcdir)/Lib/multiprocessing/util.py Python/frozen_modules/multiprocessing.util.h

Python/frozen_modules/netrc.h: Lib/netrc.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) netrc $(srcdir)/Lib/netrc.py Python/frozen_modules/netrc.h

Python/frozen_modules/ntpath.h: Lib/ntpath.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) ntpath $(srcdir)/Lib/ntpath.py Python/frozen_modules/ntpath.h

Python/frozen_modules/nturl2path.h: Lib/nturl2path.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) nturl2path $(srcdir)/Lib/nturl2path.py Python/frozen_modules/nturl2path.h

Python/frozen_modules/numbers.h: Lib/numbers.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) numbers $(srcdir)/Lib/numbers.py Python/frozen_modules/numbers.h

Python/frozen_modules/opcode.h: Lib/opcode.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) opcode $(srcdir)/Lib/opcode.py Python/frozen_modules/opcode.h

Python/frozen_modules/operator.h: Lib/operator.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) operator $(srcdir)/Lib/operator.py Python/frozen_modules/operator.h

Python/frozen_modules/optparse.h: Lib/optparse.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) optparse $(srcdir)/Lib/optparse.py Python/frozen_modules/optparse.h

Python/frozen_modules/os.h: Lib/os.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) os $(srcdir)/Lib/os.py Python/frozen_modules/os.h

Python/frozen_modules/_osx_support.h: Lib/_osx_support.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _osx_support $(srcdir)/Lib/_osx_support.py Python/frozen_modules/_osx_support.h

Python/frozen_modules/pathlib.h: Lib/pathlib.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) pathlib $(srcdir)/Lib/pathlib.py Python/frozen_modules/pathlib.h

Python/frozen_modules/pdb.h: Lib/pdb.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) pdb $(srcdir)/Lib/pdb.py Python/frozen_modules/pdb.h

Python/frozen_modules/__phello__.h: Lib/__phello__/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) __phello__ $(srcdir)/Lib/__phello__/__init__.py Python/frozen_modules/__phello__.h

Python/frozen_modules/__phello__.ham.h: Lib/__phello__/ham/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) __phello__.ham $(srcdir)/Lib/__phello__/ham/__init__.py Python/frozen_modules/__phello__.ham.h

Python/frozen_modules/__phello__.ham.eggs.h: Lib/__phello__/ham/eggs.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) __phello__.ham.eggs $(srcdir)/Lib/__phello__/ham/eggs.py Python/frozen_modules/__phello__.ham.eggs.h

Python/frozen_modules/__phello__.spam.h: Lib/__phello__/spam.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) __phello__.spam $(srcdir)/Lib/__phello__/spam.py Python/frozen_modules/__phello__.spam.h

Python/frozen_modules/pickle.h: Lib/pickle.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) pickle $(srcdir)/Lib/pickle.py Python/frozen_modules/pickle.h

Python/frozen_modules/pickletools.h: Lib/pickletools.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) pickletools $(srcdir)/Lib/pickletools.py Python/frozen_modules/pickletools.h

Python/frozen_modules/pkgutil.h: Lib/pkgutil.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) pkgutil $(srcdir)/Lib/pkgutil.py Python/frozen_modules/pkgutil.h

Python/frozen_modules/platform.h: Lib/platform.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) platform $(srcdir)/Lib/platform.py Python/frozen_modules/platform.h

Python/frozen_modules/plistlib.h: Lib/plistlib.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) plistlib $(srcdir)/Lib/plistlib.py Python/frozen_modules/plistlib.h

Python/frozen_modules/poplib.h: Lib/poplib.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) poplib $(srcdir)/Lib/poplib.py Python/frozen_modules/poplib.h

Python/frozen_modules/posixpath.h: Lib/posixpath.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) posixpath $(srcdir)/Lib/posixpath.py Python/frozen_modules/posixpath.h

Python/frozen_modules/pprint.h: Lib/pprint.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) pprint $(srcdir)/Lib/pprint.py Python/frozen_modules/pprint.h

Python/frozen_modules/profile.h: Lib/profile.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) profile $(srcdir)/Lib/profile.py Python/frozen_modules/profile.h

Python/frozen_modules/pstats.h: Lib/pstats.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) pstats $(srcdir)/Lib/pstats.py Python/frozen_modules/pstats.h

Python/frozen_modules/pty.h: Lib/pty.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) pty $(srcdir)/Lib/pty.py Python/frozen_modules/pty.h

Python/frozen_modules/_py_abc.h: Lib/_py_abc.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _py_abc $(srcdir)/Lib/_py_abc.py Python/frozen_modules/_py_abc.h

Python/frozen_modules/pyclbr.h: Lib/pyclbr.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) pyclbr $(srcdir)/Lib/pyclbr.py Python/frozen_modules/pyclbr.h

Python/frozen_modules/py_compile.h: Lib/py_compile.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) py_compile $(srcdir)/Lib/py_compile.py Python/frozen_modules/py_compile.h

Python/frozen_modules/_pydatetime.h: Lib/_pydatetime.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _pydatetime $(srcdir)/Lib/_pydatetime.py Python/frozen_modules/_pydatetime.h

Python/frozen_modules/_pydecimal.h: Lib/_pydecimal.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _pydecimal $(srcdir)/Lib/_pydecimal.py Python/frozen_modules/_pydecimal.h

Python/frozen_modules/_pyio.h: Lib/_pyio.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _pyio $(srcdir)/Lib/_pyio.py Python/frozen_modules/_pyio.h

Python/frozen_modules/_pylong.h: Lib/_pylong.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _pylong $(srcdir)/Lib/_pylong.py Python/frozen_modules/_pylong.h

Python/frozen_modules/queue.h: Lib/queue.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) queue $(srcdir)/Lib/queue.py Python/frozen_modules/queue.h

Python/frozen_modules/quopri.h: Lib/quopri.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) quopri $(srcdir)/Lib/quopri.py Python/frozen_modules/quopri.h

Python/frozen_modules/random.h: Lib/random.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) random $(srcdir)/Lib/random.py Python/frozen_modules/random.h

Python/frozen_modules/re.h: Lib/re/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) re $(srcdir)/Lib/re/__init__.py Python/frozen_modules/re.h

Python/frozen_modules/re._casefix.h: Lib/re/_casefix.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) re._casefix $(srcdir)/Lib/re/_casefix.py Python/frozen_modules/re._casefix.h

Python/frozen_modules/re._compiler.h: Lib/re/_compiler.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) re._compiler $(srcdir)/Lib/re/_compiler.py Python/frozen_modules/re._compiler.h

Python/frozen_modules/re._constants.h: Lib/re/_constants.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) re._constants $(srcdir)/Lib/re/_constants.py Python/frozen_modules/re._constants.h

Python/frozen_modules/re._parser.h: Lib/re/_parser.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) re._parser $(srcdir)/Lib/re/_parser.py Python/frozen_modules/re._parser.h

Python/frozen_modules/reprlib.h: Lib/reprlib.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) reprlib $(srcdir)/Lib/reprlib.py Python/frozen_modules/reprlib.h

Python/frozen_modules/rlcompleter.h: Lib/rlcompleter.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) rlcompleter $(srcdir)/Lib/rlcompleter.py Python/frozen_modules/rlcompleter.h

Python/frozen_modules/sched.h: Lib/sched.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) sched $(srcdir)/Lib/sched.py Python/frozen_modules/sched.h

Python/frozen_modules/selectors.h: Lib/selectors.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) selectors $(srcdir)/Lib/selectors.py Python/frozen_modules/selectors.h

Python/frozen_modules/shelve.h: Lib/shelve.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) shelve $(srcdir)/Lib/shelve.py Python/frozen_modules/shelve.h

Python/frozen_modules/shlex.h: Lib/shlex.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) shlex $(srcdir)/Lib/shlex.py Python/frozen_modules/shlex.h

Python/frozen_modules/shutil.h: Lib/shutil.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) shutil $(srcdir)/Lib/shutil.py Python/frozen_modules/shutil.h

Python/frozen_modules/signal.h: Lib/signal.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) signal $(srcdir)/Lib/signal.py Python/frozen_modules/signal.h

Python/frozen_modules/smtplib.h: Lib/smtplib.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) smtplib $(srcdir)/Lib/smtplib.py Python/frozen_modules/smtplib.h

Python/frozen_modules/socket.h: Lib/socket.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) socket $(srcdir)/Lib/socket.py Python/frozen_modules/socket.h

Python/frozen_modules/socketserver.h: Lib/socketserver.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) socketserver $(srcdir)/Lib/socketserver.py Python/frozen_modules/socketserver.h

Python/frozen_modules/statistics.h: Lib/statistics.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) statistics $(srcdir)/Lib/statistics.py Python/frozen_modules/statistics.h

Python/frozen_modules/stat.h: Lib/stat.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) stat $(srcdir)/Lib/stat.py Python/frozen_modules/stat.h

Python/frozen_modules/stringprep.h: Lib/stringprep.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) stringprep $(srcdir)/Lib/stringprep.py Python/frozen_modules/stringprep.h

Python/frozen_modules/string.h: Lib/string.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) string $(srcdir)/Lib/string.py Python/frozen_modules/string.h

Python/frozen_modules/_strptime.h: Lib/_strptime.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _strptime $(srcdir)/Lib/_strptime.py Python/frozen_modules/_strptime.h

Python/frozen_modules/struct.h: Lib/struct.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) struct $(srcdir)/Lib/struct.py Python/frozen_modules/struct.h

Python/frozen_modules/subprocess.h: Lib/subprocess.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) subprocess $(srcdir)/Lib/subprocess.py Python/frozen_modules/subprocess.h

Python/frozen_modules/symtable.h: Lib/symtable.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) symtable $(srcdir)/Lib/symtable.py Python/frozen_modules/symtable.h

Python/frozen_modules/sysconfig.h: Lib/sysconfig.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) sysconfig $(srcdir)/Lib/sysconfig.py Python/frozen_modules/sysconfig.h

Python/frozen_modules/tabnanny.h: Lib/tabnanny.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) tabnanny $(srcdir)/Lib/tabnanny.py Python/frozen_modules/tabnanny.h

Python/frozen_modules/tempfile.h: Lib/tempfile.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) tempfile $(srcdir)/Lib/tempfile.py Python/frozen_modules/tempfile.h

Python/frozen_modules/textwrap.h: Lib/textwrap.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) textwrap $(srcdir)/Lib/textwrap.py Python/frozen_modules/textwrap.h

Python/frozen_modules/this.h: Lib/this.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) this $(srcdir)/Lib/this.py Python/frozen_modules/this.h

Python/frozen_modules/_threading_local.h: Lib/_threading_local.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _threading_local $(srcdir)/Lib/_threading_local.py Python/frozen_modules/_threading_local.h

Python/frozen_modules/threading.h: Lib/threading.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) threading $(srcdir)/Lib/threading.py Python/frozen_modules/threading.h

Python/frozen_modules/timeit.h: Lib/timeit.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) timeit $(srcdir)/Lib/timeit.py Python/frozen_modules/timeit.h

Python/frozen_modules/tokenize.h: Lib/tokenize.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) tokenize $(srcdir)/Lib/tokenize.py Python/frozen_modules/tokenize.h

Python/frozen_modules/token.h: Lib/token.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) token $(srcdir)/Lib/token.py Python/frozen_modules/token.h

Python/frozen_modules/tomllib.h: Lib/tomllib/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) tomllib $(srcdir)/Lib/tomllib/__init__.py Python/frozen_modules/tomllib.h

Python/frozen_modules/tomllib._parser.h: Lib/tomllib/_parser.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) tomllib._parser $(srcdir)/Lib/tomllib/_parser.py Python/frozen_modules/tomllib._parser.h

Python/frozen_modules/tomllib._re.h: Lib/tomllib/_re.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) tomllib._re $(srcdir)/Lib/tomllib/_re.py Python/frozen_modules/tomllib._re.h

Python/frozen_modules/tomllib._types.h: Lib/tomllib/_types.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) tomllib._types $(srcdir)/Lib/tomllib/_types.py Python/frozen_modules/tomllib._types.h

Python/frozen_modules/traceback.h: Lib/traceback.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) traceback $(srcdir)/Lib/traceback.py Python/frozen_modules/traceback.h

Python/frozen_modules/tracemalloc.h: Lib/tracemalloc.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) tracemalloc $(srcdir)/Lib/tracemalloc.py Python/frozen_modules/tracemalloc.h

Python/frozen_modules/trace.h: Lib/trace.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) trace $(srcdir)/Lib/trace.py Python/frozen_modules/trace.h

Python/frozen_modules/tty.h: Lib/tty.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) tty $(srcdir)/Lib/tty.py Python/frozen_modules/tty.h

Python/frozen_modules/types.h: Lib/types.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) types $(srcdir)/Lib/types.py Python/frozen_modules/types.h

Python/frozen_modules/typing.h: Lib/typing.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) typing $(srcdir)/Lib/typing.py Python/frozen_modules/typing.h

Python/frozen_modules/uuid.h: Lib/uuid.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) uuid $(srcdir)/Lib/uuid.py Python/frozen_modules/uuid.h

Python/frozen_modules/warnings.h: Lib/warnings.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) warnings $(srcdir)/Lib/warnings.py Python/frozen_modules/warnings.h

Python/frozen_modules/wave.h: Lib/wave.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) wave $(srcdir)/Lib/wave.py Python/frozen_modules/wave.h

Python/frozen_modules/weakref.h: Lib/weakref.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) weakref $(srcdir)/Lib/weakref.py Python/frozen_modules/weakref.h

Python/frozen_modules/_weakrefset.h: Lib/_weakrefset.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _weakrefset $(srcdir)/Lib/_weakrefset.py Python/frozen_modules/_weakrefset.h

Python/frozen_modules/webbrowser.h: Lib/webbrowser.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) webbrowser $(srcdir)/Lib/webbrowser.py Python/frozen_modules/webbrowser.h

Python/frozen_modules/wsgiref.h: Lib/wsgiref/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) wsgiref $(srcdir)/Lib/wsgiref/__init__.py Python/frozen_modules/wsgiref.h

Python/frozen_modules/wsgiref.handlers.h: Lib/wsgiref/handlers.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) wsgiref.handlers $(srcdir)/Lib/wsgiref/handlers.py Python/frozen_modules/wsgiref.handlers.h

Python/frozen_modules/wsgiref.headers.h: Lib/wsgiref/headers.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) wsgiref.headers $(srcdir)/Lib/wsgiref/headers.py Python/frozen_modules/wsgiref.headers.h

Python/frozen_modules/wsgiref.simple_server.h: Lib/wsgiref/simple_server.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) wsgiref.simple_server $(srcdir)/Lib/wsgiref/simple_server.py Python/frozen_modules/wsgiref.simple_server.h

Python/frozen_modules/wsgiref.types.h: Lib/wsgiref/types.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) wsgiref.types $(srcdir)/Lib/wsgiref/types.py Python/frozen_modules/wsgiref.types.h

Python/frozen_modules/wsgiref.util.h: Lib/wsgiref/util.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) wsgiref.util $(srcdir)/Lib/wsgiref/util.py Python/frozen_modules/wsgiref.util.h

Python/frozen_modules/wsgiref.validate.h: Lib/wsgiref/validate.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) wsgiref.validate $(srcdir)/Lib/wsgiref/validate.py Python/frozen_modules/wsgiref.validate.h

Python/frozen_modules/zipapp.h: Lib/zipapp.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) zipapp $(srcdir)/Lib/zipapp.py Python/frozen_modules/zipapp.h

Python/frozen_modules/zipfile.h: Lib/zipfile/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) zipfile $(srcdir)/Lib/zipfile/__init__.py Python/frozen_modules/zipfile.h

Python/frozen_modules/zipfile.__main__.h: Lib/zipfile/__main__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) zipfile.__main__ $(srcdir)/Lib/zipfile/__main__.py Python/frozen_modules/zipfile.__main__.h

Python/frozen_modules/zipfile._path.h: Lib/zipfile/_path/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) zipfile._path $(srcdir)/Lib/zipfile/_path/__init__.py Python/frozen_modules/zipfile._path.h

Python/frozen_modules/zipfile._path.glob.h: Lib/zipfile/_path/glob.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) zipfile._path.glob $(srcdir)/Lib/zipfile/_path/glob.py Python/frozen_modules/zipfile._path.glob.h

Python/frozen_modules/zoneinfo.h: Lib/zoneinfo/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) zoneinfo $(srcdir)/Lib/zoneinfo/__init__.py Python/frozen_modules/zoneinfo.h

Python/frozen_modules/zoneinfo._common.h: Lib/zoneinfo/_common.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) zoneinfo._common $(srcdir)/Lib/zoneinfo/_common.py Python/frozen_modules/zoneinfo._common.h

Python/frozen_modules/zoneinfo._tzpath.h: Lib/zoneinfo/_tzpath.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) zoneinfo._tzpath $(srcdir)/Lib/zoneinfo/_tzpath.py Python/frozen_modules/zoneinfo._tzpath.h

Python/frozen_modules/zoneinfo._zoneinfo.h: Lib/zoneinfo/_zoneinfo.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) zoneinfo._zoneinfo $(srcdir)/Lib/zoneinfo/_zoneinfo.py Python/frozen_modules/zoneinfo._zoneinfo.h

Python/frozen_modules/gdb.h: Lib/gdb/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb $(srcdir)/Lib/gdb/__init__.py Python/frozen_modules/gdb.h

Python/frozen_modules/gdb.FrameDecorator.h: Lib/gdb/FrameDecorator.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.FrameDecorator $(srcdir)/Lib/gdb/FrameDecorator.py Python/frozen_modules/gdb.FrameDecorator.h

Python/frozen_modules/gdb.FrameIterator.h: Lib/gdb/FrameIterator.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.FrameIterator $(srcdir)/Lib/gdb/FrameIterator.py Python/frozen_modules/gdb.FrameIterator.h

Python/frozen_modules/gdb.command.h: Lib/gdb/command/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.command $(srcdir)/Lib/gdb/command/__init__.py Python/frozen_modules/gdb.command.h

Python/frozen_modules/gdb.command.explore.h: Lib/gdb/command/explore.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.command.explore $(srcdir)/Lib/gdb/command/explore.py Python/frozen_modules/gdb.command.explore.h

Python/frozen_modules/gdb.command.frame_filters.h: Lib/gdb/command/frame_filters.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.command.frame_filters $(srcdir)/Lib/gdb/command/frame_filters.py Python/frozen_modules/gdb.command.frame_filters.h

Python/frozen_modules/gdb.command.missing_debug.h: Lib/gdb/command/missing_debug.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.command.missing_debug $(srcdir)/Lib/gdb/command/missing_debug.py Python/frozen_modules/gdb.command.missing_debug.h

Python/frozen_modules/gdb.command.pretty_printers.h: Lib/gdb/command/pretty_printers.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.command.pretty_printers $(srcdir)/Lib/gdb/command/pretty_printers.py Python/frozen_modules/gdb.command.pretty_printers.h

Python/frozen_modules/gdb.command.prompt.h: Lib/gdb/command/prompt.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.command.prompt $(srcdir)/Lib/gdb/command/prompt.py Python/frozen_modules/gdb.command.prompt.h

Python/frozen_modules/gdb.command.type_printers.h: Lib/gdb/command/type_printers.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.command.type_printers $(srcdir)/Lib/gdb/command/type_printers.py Python/frozen_modules/gdb.command.type_printers.h

Python/frozen_modules/gdb.command.unwinders.h: Lib/gdb/command/unwinders.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.command.unwinders $(srcdir)/Lib/gdb/command/unwinders.py Python/frozen_modules/gdb.command.unwinders.h

Python/frozen_modules/gdb.command.xmethods.h: Lib/gdb/command/xmethods.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.command.xmethods $(srcdir)/Lib/gdb/command/xmethods.py Python/frozen_modules/gdb.command.xmethods.h

Python/frozen_modules/gdb.dap.h: Lib/gdb/dap/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap $(srcdir)/Lib/gdb/dap/__init__.py Python/frozen_modules/gdb.dap.h

Python/frozen_modules/gdb.dap.breakpoint.h: Lib/gdb/dap/breakpoint.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.breakpoint $(srcdir)/Lib/gdb/dap/breakpoint.py Python/frozen_modules/gdb.dap.breakpoint.h

Python/frozen_modules/gdb.dap.bt.h: Lib/gdb/dap/bt.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.bt $(srcdir)/Lib/gdb/dap/bt.py Python/frozen_modules/gdb.dap.bt.h

Python/frozen_modules/gdb.dap.disassemble.h: Lib/gdb/dap/disassemble.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.disassemble $(srcdir)/Lib/gdb/dap/disassemble.py Python/frozen_modules/gdb.dap.disassemble.h

Python/frozen_modules/gdb.dap.evaluate.h: Lib/gdb/dap/evaluate.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.evaluate $(srcdir)/Lib/gdb/dap/evaluate.py Python/frozen_modules/gdb.dap.evaluate.h

Python/frozen_modules/gdb.dap.events.h: Lib/gdb/dap/events.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.events $(srcdir)/Lib/gdb/dap/events.py Python/frozen_modules/gdb.dap.events.h

Python/frozen_modules/gdb.dap.frames.h: Lib/gdb/dap/frames.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.frames $(srcdir)/Lib/gdb/dap/frames.py Python/frozen_modules/gdb.dap.frames.h

Python/frozen_modules/gdb.dap.io.h: Lib/gdb/dap/io.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.io $(srcdir)/Lib/gdb/dap/io.py Python/frozen_modules/gdb.dap.io.h

Python/frozen_modules/gdb.dap.launch.h: Lib/gdb/dap/launch.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.launch $(srcdir)/Lib/gdb/dap/launch.py Python/frozen_modules/gdb.dap.launch.h

Python/frozen_modules/gdb.dap.locations.h: Lib/gdb/dap/locations.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.locations $(srcdir)/Lib/gdb/dap/locations.py Python/frozen_modules/gdb.dap.locations.h

Python/frozen_modules/gdb.dap.memory.h: Lib/gdb/dap/memory.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.memory $(srcdir)/Lib/gdb/dap/memory.py Python/frozen_modules/gdb.dap.memory.h

Python/frozen_modules/gdb.dap.modules.h: Lib/gdb/dap/modules.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.modules $(srcdir)/Lib/gdb/dap/modules.py Python/frozen_modules/gdb.dap.modules.h

Python/frozen_modules/gdb.dap.next.h: Lib/gdb/dap/next.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.next $(srcdir)/Lib/gdb/dap/next.py Python/frozen_modules/gdb.dap.next.h

Python/frozen_modules/gdb.dap.pause.h: Lib/gdb/dap/pause.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.pause $(srcdir)/Lib/gdb/dap/pause.py Python/frozen_modules/gdb.dap.pause.h

Python/frozen_modules/gdb.dap.scopes.h: Lib/gdb/dap/scopes.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.scopes $(srcdir)/Lib/gdb/dap/scopes.py Python/frozen_modules/gdb.dap.scopes.h

Python/frozen_modules/gdb.dap.server.h: Lib/gdb/dap/server.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.server $(srcdir)/Lib/gdb/dap/server.py Python/frozen_modules/gdb.dap.server.h

Python/frozen_modules/gdb.dap.sources.h: Lib/gdb/dap/sources.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.sources $(srcdir)/Lib/gdb/dap/sources.py Python/frozen_modules/gdb.dap.sources.h

Python/frozen_modules/gdb.dap.startup.h: Lib/gdb/dap/startup.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.startup $(srcdir)/Lib/gdb/dap/startup.py Python/frozen_modules/gdb.dap.startup.h

Python/frozen_modules/gdb.dap.state.h: Lib/gdb/dap/state.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.state $(srcdir)/Lib/gdb/dap/state.py Python/frozen_modules/gdb.dap.state.h

Python/frozen_modules/gdb.dap.threads.h: Lib/gdb/dap/threads.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.threads $(srcdir)/Lib/gdb/dap/threads.py Python/frozen_modules/gdb.dap.threads.h

Python/frozen_modules/gdb.dap.typecheck.h: Lib/gdb/dap/typecheck.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.typecheck $(srcdir)/Lib/gdb/dap/typecheck.py Python/frozen_modules/gdb.dap.typecheck.h

Python/frozen_modules/gdb.dap.varref.h: Lib/gdb/dap/varref.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.dap.varref $(srcdir)/Lib/gdb/dap/varref.py Python/frozen_modules/gdb.dap.varref.h

Python/frozen_modules/gdb.disassembler.h: Lib/gdb/disassembler.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.disassembler $(srcdir)/Lib/gdb/disassembler.py Python/frozen_modules/gdb.disassembler.h

Python/frozen_modules/gdb.frames.h: Lib/gdb/frames.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.frames $(srcdir)/Lib/gdb/frames.py Python/frozen_modules/gdb.frames.h

Python/frozen_modules/gdb.function.h: Lib/gdb/function/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.function $(srcdir)/Lib/gdb/function/__init__.py Python/frozen_modules/gdb.function.h

Python/frozen_modules/gdb.function.as_string.h: Lib/gdb/function/as_string.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.function.as_string $(srcdir)/Lib/gdb/function/as_string.py Python/frozen_modules/gdb.function.as_string.h

Python/frozen_modules/gdb.function.caller_is.h: Lib/gdb/function/caller_is.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.function.caller_is $(srcdir)/Lib/gdb/function/caller_is.py Python/frozen_modules/gdb.function.caller_is.h

Python/frozen_modules/gdb.function.strfns.h: Lib/gdb/function/strfns.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.function.strfns $(srcdir)/Lib/gdb/function/strfns.py Python/frozen_modules/gdb.function.strfns.h

Python/frozen_modules/gdb.missing_debug.h: Lib/gdb/missing_debug.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.missing_debug $(srcdir)/Lib/gdb/missing_debug.py Python/frozen_modules/gdb.missing_debug.h

Python/frozen_modules/gdb.printer.h: Lib/gdb/printer/__init__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.printer $(srcdir)/Lib/gdb/printer/__init__.py Python/frozen_modules/gdb.printer.h

Python/frozen_modules/gdb.printer.bound_registers.h: Lib/gdb/printer/bound_registers.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.printer.bound_registers $(srcdir)/Lib/gdb/printer/bound_registers.py Python/frozen_modules/gdb.printer.bound_registers.h

Python/frozen_modules/gdb.printing.h: Lib/gdb/printing.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.printing $(srcdir)/Lib/gdb/printing.py Python/frozen_modules/gdb.printing.h

Python/frozen_modules/gdb.prompt.h: Lib/gdb/prompt.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.prompt $(srcdir)/Lib/gdb/prompt.py Python/frozen_modules/gdb.prompt.h

Python/frozen_modules/gdb.styling.h: Lib/gdb/styling.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.styling $(srcdir)/Lib/gdb/styling.py Python/frozen_modules/gdb.styling.h

Python/frozen_modules/gdb.types.h: Lib/gdb/types.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.types $(srcdir)/Lib/gdb/types.py Python/frozen_modules/gdb.types.h

Python/frozen_modules/gdb.unwinder.h: Lib/gdb/unwinder.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.unwinder $(srcdir)/Lib/gdb/unwinder.py Python/frozen_modules/gdb.unwinder.h

Python/frozen_modules/gdb.xmethod.h: Lib/gdb/xmethod.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) gdb.xmethod $(srcdir)/Lib/gdb/xmethod.py Python/frozen_modules/gdb.xmethod.h

Python/frozen_modules/_sitebuiltins.h: Lib/_sitebuiltins.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) _sitebuiltins $(srcdir)/Lib/_sitebuiltins.py Python/frozen_modules/_sitebuiltins.h

Python/frozen_modules/site.h: Lib/site.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) site $(srcdir)/Lib/site.py Python/frozen_modules/site.h

Python/frozen_modules/runpy.h: Lib/runpy.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) runpy $(srcdir)/Lib/runpy.py Python/frozen_modules/runpy.h

Python/frozen_modules/__hello__.h: Lib/__hello__.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) __hello__ $(srcdir)/Lib/__hello__.py Python/frozen_modules/__hello__.h

Python/frozen_modules/frozen_only.h: Tools/freeze/flag.py $(FREEZE_MODULE_DEPS)
	$(FREEZE_MODULE) frozen_only $(srcdir)/Tools/freeze/flag.py Python/frozen_modules/frozen_only.h

# END: freezing modules

Tools/build/freeze_modules.py: $(FREEZE_MODULE)

.PHONY: regen-frozen
regen-frozen: Tools/build/freeze_modules.py $(FROZEN_FILES_IN)
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/build/freeze_modules.py --frozen-modules
	@echo "The Makefile was updated, you may need to re-run make."

############################################################################
# Deepfreeze targets

.PHONY: regen-deepfreeze
regen-deepfreeze: $(DEEPFREEZE_C)

DEEPFREEZE_DEPS=$(srcdir)/Tools/build/deepfreeze.py $(FREEZE_MODULE_DEPS) $(FROZEN_FILES_OUT)

# BEGIN: deepfreeze modules
$(DEEPFREEZE_C): $(DEEPFREEZE_DEPS)
	$(PYTHON_FOR_FREEZE) $(srcdir)/Tools/build/deepfreeze.py \
	Python/frozen_modules/importlib._bootstrap.h:importlib._bootstrap \
	Python/frozen_modules/importlib._bootstrap_external.h:importlib._bootstrap_external \
	Python/frozen_modules/zipimport.h:zipimport \
	Python/frozen_modules/abc.h:abc \
	Python/frozen_modules/_aix_support.h:_aix_support \
	Python/frozen_modules/antigravity.h:antigravity \
	Python/frozen_modules/argparse.h:argparse \
	Python/frozen_modules/ast.h:ast \
	Python/frozen_modules/base64.h:base64 \
	Python/frozen_modules/bdb.h:bdb \
	Python/frozen_modules/bisect.h:bisect \
	Python/frozen_modules/calendar.h:calendar \
	Python/frozen_modules/cmd.h:cmd \
	Python/frozen_modules/codecs.h:codecs \
	Python/frozen_modules/codeop.h:codeop \
	Python/frozen_modules/code.h:code \
	Python/frozen_modules/collections.h:collections \
	Python/frozen_modules/collections.abc.h:collections.abc \
	Python/frozen_modules/_collections_abc.h:_collections_abc \
	Python/frozen_modules/colorsys.h:colorsys \
	Python/frozen_modules/_compat_pickle.h:_compat_pickle \
	Python/frozen_modules/compileall.h:compileall \
	Python/frozen_modules/_compression.h:_compression \
	Python/frozen_modules/concurrent.h:concurrent \
	Python/frozen_modules/concurrent.futures.h:concurrent.futures \
	Python/frozen_modules/concurrent.futures._base.h:concurrent.futures._base \
	Python/frozen_modules/concurrent.futures.process.h:concurrent.futures.process \
	Python/frozen_modules/concurrent.futures.thread.h:concurrent.futures.thread \
	Python/frozen_modules/configparser.h:configparser \
	Python/frozen_modules/contextlib.h:contextlib \
	Python/frozen_modules/contextvars.h:contextvars \
	Python/frozen_modules/copy.h:copy \
	Python/frozen_modules/copyreg.h:copyreg \
	Python/frozen_modules/cProfile.h:cProfile \
	Python/frozen_modules/csv.h:csv \
	Python/frozen_modules/dataclasses.h:dataclasses \
	Python/frozen_modules/datetime.h:datetime \
	Python/frozen_modules/dbm.h:dbm \
	Python/frozen_modules/dbm.dumb.h:dbm.dumb \
	Python/frozen_modules/dbm.gnu.h:dbm.gnu \
	Python/frozen_modules/dbm.ndbm.h:dbm.ndbm \
	Python/frozen_modules/decimal.h:decimal \
	Python/frozen_modules/difflib.h:difflib \
	Python/frozen_modules/dis.h:dis \
	Python/frozen_modules/encodings.h:encodings \
	Python/frozen_modules/encodings.aliases.h:encodings.aliases \
	Python/frozen_modules/encodings.ascii.h:encodings.ascii \
	Python/frozen_modules/encodings.base64_codec.h:encodings.base64_codec \
	Python/frozen_modules/encodings.big5.h:encodings.big5 \
	Python/frozen_modules/encodings.big5hkscs.h:encodings.big5hkscs \
	Python/frozen_modules/encodings.bz2_codec.h:encodings.bz2_codec \
	Python/frozen_modules/encodings.charmap.h:encodings.charmap \
	Python/frozen_modules/encodings.cp037.h:encodings.cp037 \
	Python/frozen_modules/encodings.cp1006.h:encodings.cp1006 \
	Python/frozen_modules/encodings.cp1026.h:encodings.cp1026 \
	Python/frozen_modules/encodings.cp1125.h:encodings.cp1125 \
	Python/frozen_modules/encodings.cp1140.h:encodings.cp1140 \
	Python/frozen_modules/encodings.cp1250.h:encodings.cp1250 \
	Python/frozen_modules/encodings.cp1251.h:encodings.cp1251 \
	Python/frozen_modules/encodings.cp1252.h:encodings.cp1252 \
	Python/frozen_modules/encodings.cp1253.h:encodings.cp1253 \
	Python/frozen_modules/encodings.cp1254.h:encodings.cp1254 \
	Python/frozen_modules/encodings.cp1255.h:encodings.cp1255 \
	Python/frozen_modules/encodings.cp1256.h:encodings.cp1256 \
	Python/frozen_modules/encodings.cp1257.h:encodings.cp1257 \
	Python/frozen_modules/encodings.cp1258.h:encodings.cp1258 \
	Python/frozen_modules/encodings.cp273.h:encodings.cp273 \
	Python/frozen_modules/encodings.cp424.h:encodings.cp424 \
	Python/frozen_modules/encodings.cp437.h:encodings.cp437 \
	Python/frozen_modules/encodings.cp500.h:encodings.cp500 \
	Python/frozen_modules/encodings.cp720.h:encodings.cp720 \
	Python/frozen_modules/encodings.cp737.h:encodings.cp737 \
	Python/frozen_modules/encodings.cp775.h:encodings.cp775 \
	Python/frozen_modules/encodings.cp850.h:encodings.cp850 \
	Python/frozen_modules/encodings.cp852.h:encodings.cp852 \
	Python/frozen_modules/encodings.cp855.h:encodings.cp855 \
	Python/frozen_modules/encodings.cp856.h:encodings.cp856 \
	Python/frozen_modules/encodings.cp857.h:encodings.cp857 \
	Python/frozen_modules/encodings.cp858.h:encodings.cp858 \
	Python/frozen_modules/encodings.cp860.h:encodings.cp860 \
	Python/frozen_modules/encodings.cp861.h:encodings.cp861 \
	Python/frozen_modules/encodings.cp862.h:encodings.cp862 \
	Python/frozen_modules/encodings.cp863.h:encodings.cp863 \
	Python/frozen_modules/encodings.cp864.h:encodings.cp864 \
	Python/frozen_modules/encodings.cp865.h:encodings.cp865 \
	Python/frozen_modules/encodings.cp866.h:encodings.cp866 \
	Python/frozen_modules/encodings.cp869.h:encodings.cp869 \
	Python/frozen_modules/encodings.cp874.h:encodings.cp874 \
	Python/frozen_modules/encodings.cp875.h:encodings.cp875 \
	Python/frozen_modules/encodings.cp932.h:encodings.cp932 \
	Python/frozen_modules/encodings.cp949.h:encodings.cp949 \
	Python/frozen_modules/encodings.cp950.h:encodings.cp950 \
	Python/frozen_modules/encodings.euc_jis_2004.h:encodings.euc_jis_2004 \
	Python/frozen_modules/encodings.euc_jisx0213.h:encodings.euc_jisx0213 \
	Python/frozen_modules/encodings.euc_jp.h:encodings.euc_jp \
	Python/frozen_modules/encodings.euc_kr.h:encodings.euc_kr \
	Python/frozen_modules/encodings.gb18030.h:encodings.gb18030 \
	Python/frozen_modules/encodings.gb2312.h:encodings.gb2312 \
	Python/frozen_modules/encodings.gbk.h:encodings.gbk \
	Python/frozen_modules/encodings.hex_codec.h:encodings.hex_codec \
	Python/frozen_modules/encodings.hp_roman8.h:encodings.hp_roman8 \
	Python/frozen_modules/encodings.hz.h:encodings.hz \
	Python/frozen_modules/encodings.idna.h:encodings.idna \
	Python/frozen_modules/encodings.iso2022_jp.h:encodings.iso2022_jp \
	Python/frozen_modules/encodings.iso2022_jp_1.h:encodings.iso2022_jp_1 \
	Python/frozen_modules/encodings.iso2022_jp_2.h:encodings.iso2022_jp_2 \
	Python/frozen_modules/encodings.iso2022_jp_2004.h:encodings.iso2022_jp_2004 \
	Python/frozen_modules/encodings.iso2022_jp_3.h:encodings.iso2022_jp_3 \
	Python/frozen_modules/encodings.iso2022_jp_ext.h:encodings.iso2022_jp_ext \
	Python/frozen_modules/encodings.iso2022_kr.h:encodings.iso2022_kr \
	Python/frozen_modules/encodings.iso8859_1.h:encodings.iso8859_1 \
	Python/frozen_modules/encodings.iso8859_10.h:encodings.iso8859_10 \
	Python/frozen_modules/encodings.iso8859_11.h:encodings.iso8859_11 \
	Python/frozen_modules/encodings.iso8859_13.h:encodings.iso8859_13 \
	Python/frozen_modules/encodings.iso8859_14.h:encodings.iso8859_14 \
	Python/frozen_modules/encodings.iso8859_15.h:encodings.iso8859_15 \
	Python/frozen_modules/encodings.iso8859_16.h:encodings.iso8859_16 \
	Python/frozen_modules/encodings.iso8859_2.h:encodings.iso8859_2 \
	Python/frozen_modules/encodings.iso8859_3.h:encodings.iso8859_3 \
	Python/frozen_modules/encodings.iso8859_4.h:encodings.iso8859_4 \
	Python/frozen_modules/encodings.iso8859_5.h:encodings.iso8859_5 \
	Python/frozen_modules/encodings.iso8859_6.h:encodings.iso8859_6 \
	Python/frozen_modules/encodings.iso8859_7.h:encodings.iso8859_7 \
	Python/frozen_modules/encodings.iso8859_8.h:encodings.iso8859_8 \
	Python/frozen_modules/encodings.iso8859_9.h:encodings.iso8859_9 \
	Python/frozen_modules/encodings.johab.h:encodings.johab \
	Python/frozen_modules/encodings.koi8_r.h:encodings.koi8_r \
	Python/frozen_modules/encodings.koi8_t.h:encodings.koi8_t \
	Python/frozen_modules/encodings.koi8_u.h:encodings.koi8_u \
	Python/frozen_modules/encodings.kz1048.h:encodings.kz1048 \
	Python/frozen_modules/encodings.latin_1.h:encodings.latin_1 \
	Python/frozen_modules/encodings.mac_arabic.h:encodings.mac_arabic \
	Python/frozen_modules/encodings.mac_croatian.h:encodings.mac_croatian \
	Python/frozen_modules/encodings.mac_cyrillic.h:encodings.mac_cyrillic \
	Python/frozen_modules/encodings.mac_farsi.h:encodings.mac_farsi \
	Python/frozen_modules/encodings.mac_greek.h:encodings.mac_greek \
	Python/frozen_modules/encodings.mac_iceland.h:encodings.mac_iceland \
	Python/frozen_modules/encodings.mac_latin2.h:encodings.mac_latin2 \
	Python/frozen_modules/encodings.mac_roman.h:encodings.mac_roman \
	Python/frozen_modules/encodings.mac_romanian.h:encodings.mac_romanian \
	Python/frozen_modules/encodings.mac_turkish.h:encodings.mac_turkish \
	Python/frozen_modules/encodings.mbcs.h:encodings.mbcs \
	Python/frozen_modules/encodings.oem.h:encodings.oem \
	Python/frozen_modules/encodings.palmos.h:encodings.palmos \
	Python/frozen_modules/encodings.ptcp154.h:encodings.ptcp154 \
	Python/frozen_modules/encodings.punycode.h:encodings.punycode \
	Python/frozen_modules/encodings.quopri_codec.h:encodings.quopri_codec \
	Python/frozen_modules/encodings.raw_unicode_escape.h:encodings.raw_unicode_escape \
	Python/frozen_modules/encodings.rot_13.h:encodings.rot_13 \
	Python/frozen_modules/encodings.shift_jis.h:encodings.shift_jis \
	Python/frozen_modules/encodings.shift_jis_2004.h:encodings.shift_jis_2004 \
	Python/frozen_modules/encodings.shift_jisx0213.h:encodings.shift_jisx0213 \
	Python/frozen_modules/encodings.tis_620.h:encodings.tis_620 \
	Python/frozen_modules/encodings.undefined.h:encodings.undefined \
	Python/frozen_modules/encodings.unicode_escape.h:encodings.unicode_escape \
	Python/frozen_modules/encodings.utf_16.h:encodings.utf_16 \
	Python/frozen_modules/encodings.utf_16_be.h:encodings.utf_16_be \
	Python/frozen_modules/encodings.utf_16_le.h:encodings.utf_16_le \
	Python/frozen_modules/encodings.utf_32.h:encodings.utf_32 \
	Python/frozen_modules/encodings.utf_32_be.h:encodings.utf_32_be \
	Python/frozen_modules/encodings.utf_32_le.h:encodings.utf_32_le \
	Python/frozen_modules/encodings.utf_7.h:encodings.utf_7 \
	Python/frozen_modules/encodings.utf_8.h:encodings.utf_8 \
	Python/frozen_modules/encodings.utf_8_sig.h:encodings.utf_8_sig \
	Python/frozen_modules/encodings.uu_codec.h:encodings.uu_codec \
	Python/frozen_modules/encodings.zlib_codec.h:encodings.zlib_codec \
	Python/frozen_modules/ensurepip.h:ensurepip \
	Python/frozen_modules/ensurepip.__main__.h:ensurepip.__main__ \
	Python/frozen_modules/ensurepip._uninstall.h:ensurepip._uninstall \
	Python/frozen_modules/enum.h:enum \
	Python/frozen_modules/filecmp.h:filecmp \
	Python/frozen_modules/fileinput.h:fileinput \
	Python/frozen_modules/fnmatch.h:fnmatch \
	Python/frozen_modules/fractions.h:fractions \
	Python/frozen_modules/ftplib.h:ftplib \
	Python/frozen_modules/functools.h:functools \
	Python/frozen_modules/__future__.h:__future__ \
	Python/frozen_modules/genericpath.h:genericpath \
	Python/frozen_modules/getopt.h:getopt \
	Python/frozen_modules/getpass.h:getpass \
	Python/frozen_modules/gettext.h:gettext \
	Python/frozen_modules/glob.h:glob \
	Python/frozen_modules/graphlib.h:graphlib \
	Python/frozen_modules/gzip.h:gzip \
	Python/frozen_modules/hashlib.h:hashlib \
	Python/frozen_modules/heapq.h:heapq \
	Python/frozen_modules/hmac.h:hmac \
	Python/frozen_modules/imaplib.h:imaplib \
	Python/frozen_modules/importlib.h:importlib \
	Python/frozen_modules/importlib._abc.h:importlib._abc \
	Python/frozen_modules/importlib.abc.h:importlib.abc \
	Python/frozen_modules/importlib.machinery.h:importlib.machinery \
	Python/frozen_modules/importlib.metadata.h:importlib.metadata \
	Python/frozen_modules/importlib.metadata._adapters.h:importlib.metadata._adapters \
	Python/frozen_modules/importlib.metadata._collections.h:importlib.metadata._collections \
	Python/frozen_modules/importlib.metadata._functools.h:importlib.metadata._functools \
	Python/frozen_modules/importlib.metadata._itertools.h:importlib.metadata._itertools \
	Python/frozen_modules/importlib.metadata._meta.h:importlib.metadata._meta \
	Python/frozen_modules/importlib.metadata._text.h:importlib.metadata._text \
	Python/frozen_modules/importlib.readers.h:importlib.readers \
	Python/frozen_modules/importlib.resources.h:importlib.resources \
	Python/frozen_modules/importlib.resources._adapters.h:importlib.resources._adapters \
	Python/frozen_modules/importlib.resources._common.h:importlib.resources._common \
	Python/frozen_modules/importlib.resources._itertools.h:importlib.resources._itertools \
	Python/frozen_modules/importlib.resources._legacy.h:importlib.resources._legacy \
	Python/frozen_modules/importlib.resources.abc.h:importlib.resources.abc \
	Python/frozen_modules/importlib.resources.readers.h:importlib.resources.readers \
	Python/frozen_modules/importlib.resources.simple.h:importlib.resources.simple \
	Python/frozen_modules/importlib.simple.h:importlib.simple \
	Python/frozen_modules/importlib.util.h:importlib.util \
	Python/frozen_modules/inspect.h:inspect \
	Python/frozen_modules/io.h:io \
	Python/frozen_modules/ipaddress.h:ipaddress \
	Python/frozen_modules/json.h:json \
	Python/frozen_modules/json.decoder.h:json.decoder \
	Python/frozen_modules/json.encoder.h:json.encoder \
	Python/frozen_modules/json.scanner.h:json.scanner \
	Python/frozen_modules/json.tool.h:json.tool \
	Python/frozen_modules/keyword.h:keyword \
	Python/frozen_modules/linecache.h:linecache \
	Python/frozen_modules/locale.h:locale \
	Python/frozen_modules/logging.h:logging \
	Python/frozen_modules/logging.config.h:logging.config \
	Python/frozen_modules/logging.handlers.h:logging.handlers \
	Python/frozen_modules/lzma.h:lzma \
	Python/frozen_modules/_markupbase.h:_markupbase \
	Python/frozen_modules/mimetypes.h:mimetypes \
	Python/frozen_modules/modulefinder.h:modulefinder \
	Python/frozen_modules/multiprocessing.h:multiprocessing \
	Python/frozen_modules/multiprocessing.connection.h:multiprocessing.connection \
	Python/frozen_modules/multiprocessing.context.h:multiprocessing.context \
	Python/frozen_modules/multiprocessing.dummy.h:multiprocessing.dummy \
	Python/frozen_modules/multiprocessing.dummy.connection.h:multiprocessing.dummy.connection \
	Python/frozen_modules/multiprocessing.forkserver.h:multiprocessing.forkserver \
	Python/frozen_modules/multiprocessing.heap.h:multiprocessing.heap \
	Python/frozen_modules/multiprocessing.managers.h:multiprocessing.managers \
	Python/frozen_modules/multiprocessing.pool.h:multiprocessing.pool \
	Python/frozen_modules/multiprocessing.popen_fork.h:multiprocessing.popen_fork \
	Python/frozen_modules/multiprocessing.popen_forkserver.h:multiprocessing.popen_forkserver \
	Python/frozen_modules/multiprocessing.popen_spawn_posix.h:multiprocessing.popen_spawn_posix \
	Python/frozen_modules/multiprocessing.popen_spawn_win32.h:multiprocessing.popen_spawn_win32 \
	Python/frozen_modules/multiprocessing.process.h:multiprocessing.process \
	Python/frozen_modules/multiprocessing.queues.h:multiprocessing.queues \
	Python/frozen_modules/multiprocessing.reduction.h:multiprocessing.reduction \
	Python/frozen_modules/multiprocessing.resource_sharer.h:multiprocessing.resource_sharer \
	Python/frozen_modules/multiprocessing.resource_tracker.h:multiprocessing.resource_tracker \
	Python/frozen_modules/multiprocessing.shared_memory.h:multiprocessing.shared_memory \
	Python/frozen_modules/multiprocessing.sharedctypes.h:multiprocessing.sharedctypes \
	Python/frozen_modules/multiprocessing.spawn.h:multiprocessing.spawn \
	Python/frozen_modules/multiprocessing.synchronize.h:multiprocessing.synchronize \
	Python/frozen_modules/multiprocessing.util.h:multiprocessing.util \
	Python/frozen_modules/netrc.h:netrc \
	Python/frozen_modules/ntpath.h:ntpath \
	Python/frozen_modules/nturl2path.h:nturl2path \
	Python/frozen_modules/numbers.h:numbers \
	Python/frozen_modules/opcode.h:opcode \
	Python/frozen_modules/operator.h:operator \
	Python/frozen_modules/optparse.h:optparse \
	Python/frozen_modules/os.h:os \
	Python/frozen_modules/_osx_support.h:_osx_support \
	Python/frozen_modules/pathlib.h:pathlib \
	Python/frozen_modules/pdb.h:pdb \
	Python/frozen_modules/__phello__.h:__phello__ \
	Python/frozen_modules/__phello__.ham.h:__phello__.ham \
	Python/frozen_modules/__phello__.ham.eggs.h:__phello__.ham.eggs \
	Python/frozen_modules/__phello__.spam.h:__phello__.spam \
	Python/frozen_modules/pickle.h:pickle \
	Python/frozen_modules/pickletools.h:pickletools \
	Python/frozen_modules/pkgutil.h:pkgutil \
	Python/frozen_modules/platform.h:platform \
	Python/frozen_modules/plistlib.h:plistlib \
	Python/frozen_modules/poplib.h:poplib \
	Python/frozen_modules/posixpath.h:posixpath \
	Python/frozen_modules/pprint.h:pprint \
	Python/frozen_modules/profile.h:profile \
	Python/frozen_modules/pstats.h:pstats \
	Python/frozen_modules/pty.h:pty \
	Python/frozen_modules/_py_abc.h:_py_abc \
	Python/frozen_modules/pyclbr.h:pyclbr \
	Python/frozen_modules/py_compile.h:py_compile \
	Python/frozen_modules/_pydatetime.h:_pydatetime \
	Python/frozen_modules/_pydecimal.h:_pydecimal \
	Python/frozen_modules/_pyio.h:_pyio \
	Python/frozen_modules/_pylong.h:_pylong \
	Python/frozen_modules/queue.h:queue \
	Python/frozen_modules/quopri.h:quopri \
	Python/frozen_modules/random.h:random \
	Python/frozen_modules/re.h:re \
	Python/frozen_modules/re._casefix.h:re._casefix \
	Python/frozen_modules/re._compiler.h:re._compiler \
	Python/frozen_modules/re._constants.h:re._constants \
	Python/frozen_modules/re._parser.h:re._parser \
	Python/frozen_modules/reprlib.h:reprlib \
	Python/frozen_modules/rlcompleter.h:rlcompleter \
	Python/frozen_modules/sched.h:sched \
	Python/frozen_modules/selectors.h:selectors \
	Python/frozen_modules/shelve.h:shelve \
	Python/frozen_modules/shlex.h:shlex \
	Python/frozen_modules/shutil.h:shutil \
	Python/frozen_modules/signal.h:signal \
	Python/frozen_modules/smtplib.h:smtplib \
	Python/frozen_modules/socket.h:socket \
	Python/frozen_modules/socketserver.h:socketserver \
	Python/frozen_modules/statistics.h:statistics \
	Python/frozen_modules/stat.h:stat \
	Python/frozen_modules/stringprep.h:stringprep \
	Python/frozen_modules/string.h:string \
	Python/frozen_modules/_strptime.h:_strptime \
	Python/frozen_modules/struct.h:struct \
	Python/frozen_modules/subprocess.h:subprocess \
	Python/frozen_modules/symtable.h:symtable \
	Python/frozen_modules/sysconfig.h:sysconfig \
	Python/frozen_modules/tabnanny.h:tabnanny \
	Python/frozen_modules/tempfile.h:tempfile \
	Python/frozen_modules/textwrap.h:textwrap \
	Python/frozen_modules/this.h:this \
	Python/frozen_modules/_threading_local.h:_threading_local \
	Python/frozen_modules/threading.h:threading \
	Python/frozen_modules/timeit.h:timeit \
	Python/frozen_modules/tokenize.h:tokenize \
	Python/frozen_modules/token.h:token \
	Python/frozen_modules/tomllib.h:tomllib \
	Python/frozen_modules/tomllib._parser.h:tomllib._parser \
	Python/frozen_modules/tomllib._re.h:tomllib._re \
	Python/frozen_modules/tomllib._types.h:tomllib._types \
	Python/frozen_modules/traceback.h:traceback \
	Python/frozen_modules/tracemalloc.h:tracemalloc \
	Python/frozen_modules/trace.h:trace \
	Python/frozen_modules/tty.h:tty \
	Python/frozen_modules/types.h:types \
	Python/frozen_modules/typing.h:typing \
	Python/frozen_modules/uuid.h:uuid \
	Python/frozen_modules/warnings.h:warnings \
	Python/frozen_modules/wave.h:wave \
	Python/frozen_modules/weakref.h:weakref \
	Python/frozen_modules/_weakrefset.h:_weakrefset \
	Python/frozen_modules/webbrowser.h:webbrowser \
	Python/frozen_modules/wsgiref.h:wsgiref \
	Python/frozen_modules/wsgiref.handlers.h:wsgiref.handlers \
	Python/frozen_modules/wsgiref.headers.h:wsgiref.headers \
	Python/frozen_modules/wsgiref.simple_server.h:wsgiref.simple_server \
	Python/frozen_modules/wsgiref.types.h:wsgiref.types \
	Python/frozen_modules/wsgiref.util.h:wsgiref.util \
	Python/frozen_modules/wsgiref.validate.h:wsgiref.validate \
	Python/frozen_modules/zipapp.h:zipapp \
	Python/frozen_modules/zipfile.h:zipfile \
	Python/frozen_modules/zipfile.__main__.h:zipfile.__main__ \
	Python/frozen_modules/zipfile._path.h:zipfile._path \
	Python/frozen_modules/zipfile._path.glob.h:zipfile._path.glob \
	Python/frozen_modules/zoneinfo.h:zoneinfo \
	Python/frozen_modules/zoneinfo._common.h:zoneinfo._common \
	Python/frozen_modules/zoneinfo._tzpath.h:zoneinfo._tzpath \
	Python/frozen_modules/zoneinfo._zoneinfo.h:zoneinfo._zoneinfo \
	Python/frozen_modules/gdb.h:gdb \
	Python/frozen_modules/gdb.FrameDecorator.h:gdb.FrameDecorator \
	Python/frozen_modules/gdb.FrameIterator.h:gdb.FrameIterator \
	Python/frozen_modules/gdb.command.h:gdb.command \
	Python/frozen_modules/gdb.command.explore.h:gdb.command.explore \
	Python/frozen_modules/gdb.command.frame_filters.h:gdb.command.frame_filters \
	Python/frozen_modules/gdb.command.missing_debug.h:gdb.command.missing_debug \
	Python/frozen_modules/gdb.command.pretty_printers.h:gdb.command.pretty_printers \
	Python/frozen_modules/gdb.command.prompt.h:gdb.command.prompt \
	Python/frozen_modules/gdb.command.type_printers.h:gdb.command.type_printers \
	Python/frozen_modules/gdb.command.unwinders.h:gdb.command.unwinders \
	Python/frozen_modules/gdb.command.xmethods.h:gdb.command.xmethods \
	Python/frozen_modules/gdb.dap.h:gdb.dap \
	Python/frozen_modules/gdb.dap.breakpoint.h:gdb.dap.breakpoint \
	Python/frozen_modules/gdb.dap.bt.h:gdb.dap.bt \
	Python/frozen_modules/gdb.dap.disassemble.h:gdb.dap.disassemble \
	Python/frozen_modules/gdb.dap.evaluate.h:gdb.dap.evaluate \
	Python/frozen_modules/gdb.dap.events.h:gdb.dap.events \
	Python/frozen_modules/gdb.dap.frames.h:gdb.dap.frames \
	Python/frozen_modules/gdb.dap.io.h:gdb.dap.io \
	Python/frozen_modules/gdb.dap.launch.h:gdb.dap.launch \
	Python/frozen_modules/gdb.dap.locations.h:gdb.dap.locations \
	Python/frozen_modules/gdb.dap.memory.h:gdb.dap.memory \
	Python/frozen_modules/gdb.dap.modules.h:gdb.dap.modules \
	Python/frozen_modules/gdb.dap.next.h:gdb.dap.next \
	Python/frozen_modules/gdb.dap.pause.h:gdb.dap.pause \
	Python/frozen_modules/gdb.dap.scopes.h:gdb.dap.scopes \
	Python/frozen_modules/gdb.dap.server.h:gdb.dap.server \
	Python/frozen_modules/gdb.dap.sources.h:gdb.dap.sources \
	Python/frozen_modules/gdb.dap.startup.h:gdb.dap.startup \
	Python/frozen_modules/gdb.dap.state.h:gdb.dap.state \
	Python/frozen_modules/gdb.dap.threads.h:gdb.dap.threads \
	Python/frozen_modules/gdb.dap.typecheck.h:gdb.dap.typecheck \
	Python/frozen_modules/gdb.dap.varref.h:gdb.dap.varref \
	Python/frozen_modules/gdb.disassembler.h:gdb.disassembler \
	Python/frozen_modules/gdb.frames.h:gdb.frames \
	Python/frozen_modules/gdb.function.h:gdb.function \
	Python/frozen_modules/gdb.function.as_string.h:gdb.function.as_string \
	Python/frozen_modules/gdb.function.caller_is.h:gdb.function.caller_is \
	Python/frozen_modules/gdb.function.strfns.h:gdb.function.strfns \
	Python/frozen_modules/gdb.missing_debug.h:gdb.missing_debug \
	Python/frozen_modules/gdb.printer.h:gdb.printer \
	Python/frozen_modules/gdb.printer.bound_registers.h:gdb.printer.bound_registers \
	Python/frozen_modules/gdb.printing.h:gdb.printing \
	Python/frozen_modules/gdb.prompt.h:gdb.prompt \
	Python/frozen_modules/gdb.styling.h:gdb.styling \
	Python/frozen_modules/gdb.types.h:gdb.types \
	Python/frozen_modules/gdb.unwinder.h:gdb.unwinder \
	Python/frozen_modules/gdb.xmethod.h:gdb.xmethod \
	Python/frozen_modules/_sitebuiltins.h:_sitebuiltins \
	Python/frozen_modules/site.h:site \
	Python/frozen_modules/runpy.h:runpy \
	Python/frozen_modules/__hello__.h:__hello__ \
	Python/frozen_modules/frozen_only.h:frozen_only \
	-o Python/deepfreeze/deepfreeze.c
# END: deepfreeze modules

# We keep this renamed target around for folks with muscle memory.
.PHONY: regen-importlib
regen-importlib: regen-frozen

############################################################################
# Global objects

# Dependencies which can add and/or remove _Py_ID() identifiers:
# - deepfreeze.c
# - "make clinic"
.PHONY: regen-global-objects
regen-global-objects: $(srcdir)/Tools/build/generate_global_objects.py $(DEEPFREEZE_C) clinic
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/build/generate_global_objects.py

############################################################################
# ABI

.PHONY: regen-abidump
regen-abidump: all
	@$(MKDIR_P) $(srcdir)/Doc/data/
	abidw "libpython$(LDVERSION).so" --no-architecture --out-file $(srcdir)/Doc/data/python$(LDVERSION).abi.new
	@$(UPDATE_FILE) --create $(srcdir)/Doc/data/python$(LDVERSION).abi $(srcdir)/Doc/data/python$(LDVERSION).abi.new

.PHONY: check-abidump
check-abidump: all
	abidiff $(srcdir)/Doc/data/python$(LDVERSION).abi "libpython$(LDVERSION).so" --drop-private-types --no-architecture --no-added-syms

.PHONY: regen-limited-abi
regen-limited-abi: all
	$(RUNSHARED) ./$(BUILDPYTHON) $(srcdir)/Tools/build/stable_abi.py --generate-all $(srcdir)/Misc/stable_abi.toml

############################################################################
# Regenerate all generated files

# "clinic" is regenerated implicitly via "regen-global-objects".
.PHONY: regen-all
regen-all: regen-cases regen-opcode regen-opcode-targets regen-typeslots \
	regen-token regen-ast regen-keyword regen-sre regen-frozen \
	regen-pegen-metaparser regen-pegen regen-test-frozenmain \
	regen-test-levenshtein regen-global-objects
	@echo
	@echo "Note: make regen-stdlib-module-names, make-regen-sbom, and make regen-configure should be run manually"

############################################################################
# Special rules for object files

Modules/getbuildinfo.o: $(PARSER_OBJS) \
		$(OBJECT_OBJS) \
		$(PYTHON_OBJS) \
		$(MODULE_OBJS) \
		$(MODOBJS) \
		$(DTRACE_OBJS) \
		$(srcdir)/Modules/getbuildinfo.c
	$(CC) -c $(PY_CORE_CFLAGS) \
	      -DGITVERSION="\"`LC_ALL=C $(GITVERSION)`\"" \
	      -DGITTAG="\"`LC_ALL=C $(GITTAG)`\"" \
	      -DGITBRANCH="\"`LC_ALL=C $(GITBRANCH)`\"" \
	      -o $@ $(srcdir)/Modules/getbuildinfo.c

Modules/getpath.o: $(srcdir)/Modules/getpath.c Python/frozen_modules/getpath.h Makefile $(PYTHON_HEADERS)
	$(CC) -c $(PY_CORE_CFLAGS) -DPYTHONPATH='"$(PYTHONPATH)"' \
		-DPREFIX='"$(prefix)"' \
		-DEXEC_PREFIX='"$(exec_prefix)"' \
		-DVERSION='"$(VERSION)"' \
		-DVPATH='"$(VPATH)"' \
		-DPLATLIBDIR='"$(PLATLIBDIR)"' \
		-DPYTHONFRAMEWORK='"$(PYTHONFRAMEWORK)"' \
		-o $@ $(srcdir)/Modules/getpath.c

Programs/python.o: $(srcdir)/Programs/python.c
	$(CC) -c $(PY_CORE_CFLAGS) -o $@ $(srcdir)/Programs/python.c

Programs/_testembed.o: $(srcdir)/Programs/_testembed.c Programs/test_frozenmain.h
	$(CC) -c $(PY_CORE_CFLAGS) -o $@ $(srcdir)/Programs/_testembed.c

Modules/_sre/sre.o: $(srcdir)/Modules/_sre/sre.c $(srcdir)/Modules/_sre/sre.h $(srcdir)/Modules/_sre/sre_constants.h $(srcdir)/Modules/_sre/sre_lib.h

Modules/posixmodule.o: $(srcdir)/Modules/posixmodule.c $(srcdir)/Modules/posixmodule.h

Modules/grpmodule.o: $(srcdir)/Modules/grpmodule.c $(srcdir)/Modules/posixmodule.h

Modules/pwdmodule.o: $(srcdir)/Modules/pwdmodule.c $(srcdir)/Modules/posixmodule.h

Modules/signalmodule.o: $(srcdir)/Modules/signalmodule.c $(srcdir)/Modules/posixmodule.h

Python/dynload_shlib.o: $(srcdir)/Python/dynload_shlib.c Makefile
	$(CC) -c $(PY_CORE_CFLAGS) \
		-DSOABI='"$(SOABI)"' \
		-o $@ $(srcdir)/Python/dynload_shlib.c

Python/dynload_hpux.o: $(srcdir)/Python/dynload_hpux.c Makefile
	$(CC) -c $(PY_CORE_CFLAGS) \
		-DSHLIB_EXT='"$(EXT_SUFFIX)"' \
		-o $@ $(srcdir)/Python/dynload_hpux.c

Python/sysmodule.o: $(srcdir)/Python/sysmodule.c Makefile $(srcdir)/Include/pydtrace.h
	$(CC) -c $(PY_CORE_CFLAGS) \
		-DABIFLAGS='"$(ABIFLAGS)"' \
		$(MULTIARCH_CPPFLAGS) \
		-o $@ $(srcdir)/Python/sysmodule.c

$(IO_OBJS): $(IO_H)

.PHONY: regen-pegen-metaparser
regen-pegen-metaparser:
	@$(MKDIR_P) $(srcdir)/Tools/peg_generator/pegen
	PYTHONPATH=$(srcdir)/Tools/peg_generator $(PYTHON_FOR_REGEN) -m pegen -q python \
	$(srcdir)/Tools/peg_generator/pegen/metagrammar.gram \
	-o $(srcdir)/Tools/peg_generator/pegen/grammar_parser.py.new
	$(UPDATE_FILE) $(srcdir)/Tools/peg_generator/pegen/grammar_parser.py \
	$(srcdir)/Tools/peg_generator/pegen/grammar_parser.py.new

.PHONY: regen-pegen
regen-pegen:
	@$(MKDIR_P) $(srcdir)/Parser
	PYTHONPATH=$(srcdir)/Tools/peg_generator $(PYTHON_FOR_REGEN) -m pegen -q c \
		$(srcdir)/Grammar/python.gram \
		$(srcdir)/Grammar/Tokens \
		-o $(srcdir)/Parser/parser.c.new
	$(UPDATE_FILE) $(srcdir)/Parser/parser.c $(srcdir)/Parser/parser.c.new

.PHONY: regen-ast
regen-ast:
	# Regenerate 3 files using using Parser/asdl_c.py:
	# - Include/internal/pycore_ast.h
	# - Include/internal/pycore_ast_state.h
	# - Python/Python-ast.c
	$(MKDIR_P) $(srcdir)/Include
	$(MKDIR_P) $(srcdir)/Python
	$(PYTHON_FOR_REGEN) $(srcdir)/Parser/asdl_c.py \
		$(srcdir)/Parser/Python.asdl \
		-H $(srcdir)/Include/internal/pycore_ast.h.new \
		-I $(srcdir)/Include/internal/pycore_ast_state.h.new \
		-C $(srcdir)/Python/Python-ast.c.new

	$(UPDATE_FILE) $(srcdir)/Include/internal/pycore_ast.h $(srcdir)/Include/internal/pycore_ast.h.new
	$(UPDATE_FILE) $(srcdir)/Include/internal/pycore_ast_state.h $(srcdir)/Include/internal/pycore_ast_state.h.new
	$(UPDATE_FILE) $(srcdir)/Python/Python-ast.c $(srcdir)/Python/Python-ast.c.new

.PHONY: regen-opcode
regen-opcode:
	# Regenerate Include/opcode.h from Lib/opcode.py
	# using Tools/build/generate_opcode_h.py
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/build/generate_opcode_h.py \
		$(srcdir)/Lib/opcode.py \
		$(srcdir)/Include/opcode.h.new \
		$(srcdir)/Include/internal/pycore_opcode.h.new \
		$(srcdir)/Include/internal/pycore_intrinsics.h.new
	$(UPDATE_FILE) $(srcdir)/Include/opcode.h $(srcdir)/Include/opcode.h.new
	$(UPDATE_FILE) $(srcdir)/Include/internal/pycore_opcode.h $(srcdir)/Include/internal/pycore_opcode.h.new
	$(UPDATE_FILE) $(srcdir)/Include/internal/pycore_intrinsics.h $(srcdir)/Include/internal/pycore_intrinsics.h.new

.PHONY: regen-token
regen-token:
	# Regenerate Doc/library/token-list.inc from Grammar/Tokens
	# using Tools/build/generate_token.py
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/build/generate_token.py rst \
		$(srcdir)/Grammar/Tokens \
		$(srcdir)/Doc/library/token-list.inc
	# Regenerate Include/internal/pycore_token.h from Grammar/Tokens
	# using Tools/build/generate_token.py
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/build/generate_token.py h \
		$(srcdir)/Grammar/Tokens \
		$(srcdir)/Include/internal/pycore_token.h
	# Regenerate Parser/token.c from Grammar/Tokens
	# using Tools/build/generate_token.py
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/build/generate_token.py c \
		$(srcdir)/Grammar/Tokens \
		$(srcdir)/Parser/token.c
	# Regenerate Lib/token.py from Grammar/Tokens
	# using Tools/build/generate_token.py
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/build/generate_token.py py \
		$(srcdir)/Grammar/Tokens \
		$(srcdir)/Lib/token.py

.PHONY: regen-keyword
regen-keyword:
	# Regenerate Lib/keyword.py from Grammar/python.gram and Grammar/Tokens
	# using Tools/peg_generator/pegen
	PYTHONPATH=$(srcdir)/Tools/peg_generator $(PYTHON_FOR_REGEN) -m pegen.keywordgen \
		$(srcdir)/Grammar/python.gram \
		$(srcdir)/Grammar/Tokens \
		$(srcdir)/Lib/keyword.py.new
	$(UPDATE_FILE) $(srcdir)/Lib/keyword.py $(srcdir)/Lib/keyword.py.new

.PHONY: regen-stdlib-module-names
regen-stdlib-module-names: all Programs/_testembed
	# Regenerate Python/stdlib_module_names.h
	# using Tools/build/generate_stdlib_module_names.py
	$(RUNSHARED) ./$(BUILDPYTHON) \
		$(srcdir)/Tools/build/generate_stdlib_module_names.py \
		> $(srcdir)/Python/stdlib_module_names.h.new
	$(UPDATE_FILE) $(srcdir)/Python/stdlib_module_names.h $(srcdir)/Python/stdlib_module_names.h.new

.PHONY: regen-sre
regen-sre:
	# Regenerate Modules/_sre/sre_constants.h and Modules/_sre/sre_targets.h
	# from Lib/re/_constants.py using Tools/build/generate_sre_constants.py
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/build/generate_sre_constants.py \
		$(srcdir)/Lib/re/_constants.py \
		$(srcdir)/Modules/_sre/sre_constants.h \
		$(srcdir)/Modules/_sre/sre_targets.h

Python/compile.o Python/symtable.o Python/ast_unparse.o Python/ast.o Python/future.o: $(srcdir)/Include/internal/pycore_ast.h

Python/getplatform.o: $(srcdir)/Python/getplatform.c
		$(CC) -c $(PY_CORE_CFLAGS) -DPLATFORM='"$(MACHDEP)"' -o $@ $(srcdir)/Python/getplatform.c

Python/importdl.o: $(srcdir)/Python/importdl.c
		$(CC) -c $(PY_CORE_CFLAGS) -I$(DLINCLDIR) -o $@ $(srcdir)/Python/importdl.c

Objects/unicodectype.o:	$(srcdir)/Objects/unicodectype.c \
				$(srcdir)/Objects/unicodetype_db.h

BYTESTR_DEPS = \
		$(srcdir)/Objects/stringlib/count.h \
		$(srcdir)/Objects/stringlib/ctype.h \
		$(srcdir)/Objects/stringlib/fastsearch.h \
		$(srcdir)/Objects/stringlib/find.h \
		$(srcdir)/Objects/stringlib/join.h \
		$(srcdir)/Objects/stringlib/partition.h \
		$(srcdir)/Objects/stringlib/split.h \
		$(srcdir)/Objects/stringlib/stringdefs.h \
		$(srcdir)/Objects/stringlib/transmogrify.h

UNICODE_DEPS = \
		$(srcdir)/Objects/stringlib/asciilib.h \
		$(srcdir)/Objects/stringlib/codecs.h \
		$(srcdir)/Objects/stringlib/count.h \
		$(srcdir)/Objects/stringlib/fastsearch.h \
		$(srcdir)/Objects/stringlib/find.h \
		$(srcdir)/Objects/stringlib/find_max_char.h \
		$(srcdir)/Objects/stringlib/localeutil.h \
		$(srcdir)/Objects/stringlib/partition.h \
		$(srcdir)/Objects/stringlib/replace.h \
		$(srcdir)/Objects/stringlib/split.h \
		$(srcdir)/Objects/stringlib/ucs1lib.h \
		$(srcdir)/Objects/stringlib/ucs2lib.h \
		$(srcdir)/Objects/stringlib/ucs4lib.h \
		$(srcdir)/Objects/stringlib/undef.h \
		$(srcdir)/Objects/stringlib/unicode_format.h

Objects/bytes_methods.o: $(srcdir)/Objects/bytes_methods.c $(BYTESTR_DEPS)
Objects/bytesobject.o: $(srcdir)/Objects/bytesobject.c $(BYTESTR_DEPS)
Objects/bytearrayobject.o: $(srcdir)/Objects/bytearrayobject.c $(BYTESTR_DEPS)

Objects/unicodeobject.o: $(srcdir)/Objects/unicodeobject.c $(UNICODE_DEPS)

Objects/dictobject.o: $(srcdir)/Objects/stringlib/eq.h
Objects/setobject.o: $(srcdir)/Objects/stringlib/eq.h

.PHONY: regen-opcode-targets
regen-opcode-targets:
	# Regenerate Python/opcode_targets.h from Lib/opcode.py
	# using Python/makeopcodetargets.py
	$(PYTHON_FOR_REGEN) $(srcdir)/Python/makeopcodetargets.py \
		$(srcdir)/Python/opcode_targets.h.new
	$(UPDATE_FILE) $(srcdir)/Python/opcode_targets.h $(srcdir)/Python/opcode_targets.h.new

.PHONY: regen-cases
regen-cases:
	# Regenerate Python/generated_cases.c.h
	# and Python/opcode_metadata.h
	# from Python/bytecodes.c
	# using Tools/cases_generator/generate_cases.py
	PYTHONPATH=$(srcdir)/Tools/cases_generator \
	$(PYTHON_FOR_REGEN) \
	    $(srcdir)/Tools/cases_generator/generate_cases.py \
		--emit-line-directives \
		-o $(srcdir)/Python/generated_cases.c.h.new \
		-m $(srcdir)/Python/opcode_metadata.h.new \
		$(srcdir)/Python/bytecodes.c
	$(UPDATE_FILE) $(srcdir)/Python/generated_cases.c.h $(srcdir)/Python/generated_cases.c.h.new
	$(UPDATE_FILE) $(srcdir)/Python/opcode_metadata.h $(srcdir)/Python/opcode_metadata.h.new

Python/compile.o: $(srcdir)/Python/opcode_metadata.h

Python/ceval.o: \
		$(srcdir)/Python/ceval_macros.h \
		$(srcdir)/Python/condvar.h \
		$(srcdir)/Python/generated_cases.c.h \
		$(srcdir)/Python/opcode_metadata.h \
		$(srcdir)/Python/opcode_targets.h

Python/frozen.o: $(FROZEN_FILES_OUT)

# Generate DTrace probe macros, then rename them (PYTHON_ -> PyDTrace_) to
# follow our naming conventions. dtrace(1) uses the output filename to generate
# an include guard, so we can't use a pipeline to transform its output.
Include/pydtrace_probes.h: $(srcdir)/Include/pydtrace.d
	$(MKDIR_P) Include
	$(DTRACE) $(DFLAGS) -o $@ -h -s $<
	: sed in-place edit with POSIX-only tools
	sed 's/PYTHON_/PyDTrace_/' $@ > $@.tmp
	mv $@.tmp $@

Python/ceval.o: $(srcdir)/Include/pydtrace.h
Python/import.o: $(srcdir)/Include/pydtrace.h
Modules/gcmodule.o: $(srcdir)/Include/pydtrace.h

Python/pydtrace.o: $(srcdir)/Include/pydtrace.d $(DTRACE_DEPS)
	$(DTRACE) $(DFLAGS) -o $@ -G -s $< $(DTRACE_DEPS)

Objects/typeobject.o: Objects/typeslots.inc

.PHONY: regen-typeslots
regen-typeslots:
	# Regenerate Objects/typeslots.inc from Include/typeslotsh
	# using Objects/typeslots.py
	$(PYTHON_FOR_REGEN) $(srcdir)/Objects/typeslots.py \
		< $(srcdir)/Include/typeslots.h \
		$(srcdir)/Objects/typeslots.inc.new
	$(UPDATE_FILE) $(srcdir)/Objects/typeslots.inc $(srcdir)/Objects/typeslots.inc.new

############################################################################
# Header files

PYTHON_HEADERS= \
		$(srcdir)/Include/Python.h \
		$(srcdir)/Include/abstract.h \
		$(srcdir)/Include/bltinmodule.h \
		$(srcdir)/Include/boolobject.h \
		$(srcdir)/Include/bytearrayobject.h \
		$(srcdir)/Include/bytesobject.h \
		$(srcdir)/Include/ceval.h \
		$(srcdir)/Include/codecs.h \
		$(srcdir)/Include/compile.h \
		$(srcdir)/Include/complexobject.h \
		$(srcdir)/Include/descrobject.h \
		$(srcdir)/Include/dictobject.h \
		$(srcdir)/Include/dynamic_annotations.h \
		$(srcdir)/Include/enumobject.h \
		$(srcdir)/Include/errcode.h \
		$(srcdir)/Include/fileobject.h \
		$(srcdir)/Include/fileutils.h \
		$(srcdir)/Include/floatobject.h \
		$(srcdir)/Include/frameobject.h \
		$(srcdir)/Include/import.h \
		$(srcdir)/Include/interpreteridobject.h \
		$(srcdir)/Include/intrcheck.h \
		$(srcdir)/Include/iterobject.h \
		$(srcdir)/Include/listobject.h \
		$(srcdir)/Include/longobject.h \
		$(srcdir)/Include/marshal.h \
		$(srcdir)/Include/memoryobject.h \
		$(srcdir)/Include/methodobject.h \
		$(srcdir)/Include/modsupport.h \
		$(srcdir)/Include/moduleobject.h \
		$(srcdir)/Include/object.h \
		$(srcdir)/Include/objimpl.h \
		$(srcdir)/Include/opcode.h \
		$(srcdir)/Include/osdefs.h \
		$(srcdir)/Include/osmodule.h \
		$(srcdir)/Include/patchlevel.h \
		$(srcdir)/Include/pybuffer.h \
		$(srcdir)/Include/pycapsule.h \
		$(srcdir)/Include/pydtrace.h \
		$(srcdir)/Include/pyerrors.h \
		$(srcdir)/Include/pyframe.h \
		$(srcdir)/Include/pyhash.h \
		$(srcdir)/Include/pylifecycle.h \
		$(srcdir)/Include/pymacconfig.h \
		$(srcdir)/Include/pymacro.h \
		$(srcdir)/Include/pymath.h \
		$(srcdir)/Include/pymem.h \
		$(srcdir)/Include/pyport.h \
		$(srcdir)/Include/pystate.h \
		$(srcdir)/Include/pystats.h \
		$(srcdir)/Include/pystrcmp.h \
		$(srcdir)/Include/pystrtod.h \
		$(srcdir)/Include/pythonrun.h \
		$(srcdir)/Include/pythread.h \
		$(srcdir)/Include/pytypedefs.h \
		$(srcdir)/Include/rangeobject.h \
		$(srcdir)/Include/setobject.h \
		$(srcdir)/Include/sliceobject.h \
		$(srcdir)/Include/structmember.h \
		$(srcdir)/Include/structseq.h \
		$(srcdir)/Include/sysmodule.h \
		$(srcdir)/Include/traceback.h \
		$(srcdir)/Include/tracemalloc.h \
		$(srcdir)/Include/tupleobject.h \
		$(srcdir)/Include/unicodeobject.h \
		$(srcdir)/Include/warnings.h \
		$(srcdir)/Include/weakrefobject.h \
		\
		pyconfig.h \
		$(PARSER_HEADERS) \
		\
		$(srcdir)/Include/cpython/abstract.h \
		$(srcdir)/Include/cpython/bytearrayobject.h \
		$(srcdir)/Include/cpython/bytesobject.h \
		$(srcdir)/Include/cpython/cellobject.h \
		$(srcdir)/Include/cpython/ceval.h \
		$(srcdir)/Include/cpython/classobject.h \
		$(srcdir)/Include/cpython/code.h \
		$(srcdir)/Include/cpython/compile.h \
		$(srcdir)/Include/cpython/complexobject.h \
		$(srcdir)/Include/cpython/context.h \
		$(srcdir)/Include/cpython/descrobject.h \
		$(srcdir)/Include/cpython/dictobject.h \
		$(srcdir)/Include/cpython/fileobject.h \
		$(srcdir)/Include/cpython/fileutils.h \
		$(srcdir)/Include/cpython/floatobject.h \
		$(srcdir)/Include/cpython/frameobject.h \
		$(srcdir)/Include/cpython/funcobject.h \
		$(srcdir)/Include/cpython/genobject.h \
		$(srcdir)/Include/cpython/import.h \
		$(srcdir)/Include/cpython/initconfig.h \
		$(srcdir)/Include/cpython/interpreteridobject.h \
		$(srcdir)/Include/cpython/listobject.h \
		$(srcdir)/Include/cpython/longintrepr.h \
		$(srcdir)/Include/cpython/longobject.h \
		$(srcdir)/Include/cpython/memoryobject.h \
		$(srcdir)/Include/cpython/methodobject.h \
		$(srcdir)/Include/cpython/modsupport.h \
		$(srcdir)/Include/cpython/object.h \
		$(srcdir)/Include/cpython/objimpl.h \
		$(srcdir)/Include/cpython/odictobject.h \
		$(srcdir)/Include/cpython/picklebufobject.h \
		$(srcdir)/Include/cpython/pthread_stubs.h \
		$(srcdir)/Include/cpython/pyctype.h \
		$(srcdir)/Include/cpython/pydebug.h \
		$(srcdir)/Include/cpython/pyerrors.h \
		$(srcdir)/Include/cpython/pyfpe.h \
		$(srcdir)/Include/cpython/pyframe.h \
		$(srcdir)/Include/cpython/pylifecycle.h \
		$(srcdir)/Include/cpython/pymem.h \
		$(srcdir)/Include/cpython/pystate.h \
		$(srcdir)/Include/cpython/pythonrun.h \
		$(srcdir)/Include/cpython/pythread.h \
		$(srcdir)/Include/cpython/pytime.h \
		$(srcdir)/Include/cpython/setobject.h \
		$(srcdir)/Include/cpython/sysmodule.h \
		$(srcdir)/Include/cpython/traceback.h \
		$(srcdir)/Include/cpython/tupleobject.h \
		$(srcdir)/Include/cpython/unicodeobject.h \
		$(srcdir)/Include/cpython/warnings.h \
		$(srcdir)/Include/cpython/weakrefobject.h \
		\
		$(srcdir)/Include/internal/pycore_abstract.h \
		$(srcdir)/Include/internal/pycore_asdl.h \
		$(srcdir)/Include/internal/pycore_ast.h \
		$(srcdir)/Include/internal/pycore_ast_state.h \
		$(srcdir)/Include/internal/pycore_atexit.h \
		$(srcdir)/Include/internal/pycore_atomic.h \
		$(srcdir)/Include/internal/pycore_atomic_funcs.h \
		$(srcdir)/Include/internal/pycore_bitutils.h \
		$(srcdir)/Include/internal/pycore_bytes_methods.h \
		$(srcdir)/Include/internal/pycore_bytesobject.h \
		$(srcdir)/Include/internal/pycore_call.h \
		$(srcdir)/Include/internal/pycore_ceval.h \
		$(srcdir)/Include/internal/pycore_ceval_state.h \
		$(srcdir)/Include/internal/pycore_code.h \
		$(srcdir)/Include/internal/pycore_compile.h \
		$(srcdir)/Include/internal/pycore_condvar.h \
		$(srcdir)/Include/internal/pycore_context.h \
		$(srcdir)/Include/internal/pycore_dict.h \
		$(srcdir)/Include/internal/pycore_dict_state.h \
		$(srcdir)/Include/internal/pycore_descrobject.h \
		$(srcdir)/Include/internal/pycore_dtoa.h \
		$(srcdir)/Include/internal/pycore_exceptions.h \
		$(srcdir)/Include/internal/pycore_faulthandler.h \
		$(srcdir)/Include/internal/pycore_fileutils.h \
		$(srcdir)/Include/internal/pycore_floatobject.h \
		$(srcdir)/Include/internal/pycore_format.h \
		$(srcdir)/Include/internal/pycore_frame.h \
		$(srcdir)/Include/internal/pycore_function.h \
		$(srcdir)/Include/internal/pycore_genobject.h \
		$(srcdir)/Include/internal/pycore_getopt.h \
		$(srcdir)/Include/internal/pycore_gil.h \
		$(srcdir)/Include/internal/pycore_global_objects.h \
		$(srcdir)/Include/internal/pycore_global_objects_fini_generated.h \
		$(srcdir)/Include/internal/pycore_hamt.h \
		$(srcdir)/Include/internal/pycore_hashtable.h \
		$(srcdir)/Include/internal/pycore_import.h \
		$(srcdir)/Include/internal/pycore_initconfig.h \
		$(srcdir)/Include/internal/pycore_interp.h \
		$(srcdir)/Include/internal/pycore_intrinsics.h \
		$(srcdir)/Include/internal/pycore_list.h \
		$(srcdir)/Include/internal/pycore_long.h \
		$(srcdir)/Include/internal/pycore_moduleobject.h \
		$(srcdir)/Include/internal/pycore_namespace.h \
		$(srcdir)/Include/internal/pycore_object.h \
		$(srcdir)/Include/internal/pycore_object_state.h \
		$(srcdir)/Include/internal/pycore_obmalloc.h \
		$(srcdir)/Include/internal/pycore_obmalloc_init.h \
		$(srcdir)/Include/internal/pycore_opcode.h \
		$(srcdir)/Include/internal/pycore_opcode_utils.h \
		$(srcdir)/Include/internal/pycore_pathconfig.h \
		$(srcdir)/Include/internal/pycore_pyarena.h \
		$(srcdir)/Include/internal/pycore_pyerrors.h \
		$(srcdir)/Include/internal/pycore_pyhash.h \
		$(srcdir)/Include/internal/pycore_pylifecycle.h \
		$(srcdir)/Include/internal/pycore_pymem.h \
		$(srcdir)/Include/internal/pycore_pymem_init.h \
		$(srcdir)/Include/internal/pycore_pystate.h \
		$(srcdir)/Include/internal/pycore_pythread.h \
		$(srcdir)/Include/internal/pycore_range.h \
		$(srcdir)/Include/internal/pycore_runtime.h \
		$(srcdir)/Include/internal/pycore_runtime_init_generated.h \
		$(srcdir)/Include/internal/pycore_runtime_init.h \
		$(srcdir)/Include/internal/pycore_signal.h \
		$(srcdir)/Include/internal/pycore_sliceobject.h \
		$(srcdir)/Include/internal/pycore_strhex.h \
		$(srcdir)/Include/internal/pycore_structseq.h \
		$(srcdir)/Include/internal/pycore_symtable.h \
		$(srcdir)/Include/internal/pycore_sysmodule.h \
		$(srcdir)/Include/internal/pycore_time.h \
		$(srcdir)/Include/internal/pycore_token.h \
		$(srcdir)/Include/internal/pycore_traceback.h \
		$(srcdir)/Include/internal/pycore_tracemalloc.h \
		$(srcdir)/Include/internal/pycore_tuple.h \
		$(srcdir)/Include/internal/pycore_typeobject.h \
		$(srcdir)/Include/internal/pycore_typevarobject.h \
		$(srcdir)/Include/internal/pycore_ucnhash.h \
		$(srcdir)/Include/internal/pycore_unionobject.h \
		$(srcdir)/Include/internal/pycore_unicodeobject.h \
		$(srcdir)/Include/internal/pycore_unicodeobject_generated.h \
		$(srcdir)/Include/internal/pycore_warnings.h \
		$(DTRACE_HEADERS) \
		@PLATFORM_HEADERS@ \
		\
		$(srcdir)/Python/stdlib_module_names.h

$(LIBRARY_OBJS) $(MODOBJS) Programs/python.o: $(PYTHON_HEADERS)


######################################################################

TESTOPTS=	$(EXTRATESTOPTS)
TESTPYTHON=	$(RUNSHARED) $(PYTHON_FOR_BUILD) $(TESTPYTHONOPTS)
TESTRUNNER=	$(TESTPYTHON) $(srcdir)/Tools/scripts/run_tests.py
TESTTIMEOUT=	1200

# Remove "test_python_*" directories of previous failed test jobs.
# Pass TESTOPTS options because it can contain --tempdir option.
.PHONY: cleantest
cleantest: all
	$(TESTRUNNER) $(TESTOPTS) --cleanup

# Run a basic set of regression tests.
# This excludes some tests that are particularly resource-intensive.
.PHONY: test
test: all
		$(TESTRUNNER) $(TESTOPTS)

# Run the full test suite twice - once without .pyc files, and once with.
# In the past, we've had problems where bugs in the marshalling or
# elsewhere caused bytecode read from .pyc files to behave differently
# than bytecode generated directly from a .py source file.  Sometimes
# the bytecode read from a .pyc file had the bug, sometimes the directly
# generated bytecode.  This is sometimes a very shy bug needing a lot of
# sample data.
.PHONY: testall
testall: all
		-find $(srcdir)/Lib -name '*.py[co]' -print | xargs rm -f
		$(TESTPYTHON) -E $(srcdir)/Lib/compileall.py
		-find $(srcdir)/Lib -name '*.py[co]' -print | xargs rm -f
		-$(TESTRUNNER) -u all $(TESTOPTS)
		$(TESTRUNNER) -u all $(TESTOPTS)

# Run the test suite for both architectures in a Universal build on OSX.
# Must be run on an Intel box.
.PHONY: testuniversal
testuniversal: all
		@if [ `arch` != 'i386' ]; then \
			echo "This can only be used on OSX/i386" ;\
			exit 1 ;\
		fi
		$(TESTRUNNER) -u all $(TESTOPTS)
		$(RUNSHARED) /usr/libexec/oah/translate \
			./$(BUILDPYTHON) -E -m test -j 0 -u all $(TESTOPTS)

# Like testall, but with only one pass and without multiple processes.
# Run an optional script to include information about the build environment.
.PHONY: buildbottest
buildbottest: all
		-@if which pybuildbot.identify >/dev/null 2>&1; then \
			pybuildbot.identify "CC='$(CC)'" "CXX='$(CXX)'"; \
		fi
		$(TESTRUNNER) -j 1 -u all -W --slowest --fail-env-changed --timeout=$(TESTTIMEOUT) $(TESTOPTS)

# Like testall, but run Python tests with HOSTRUNNER directly.
.PHONY: hostrunnertest
hostrunnertest: all
	$(RUNSHARED) $(HOSTRUNNER) ./$(BUILDPYTHON) -m test -u all $(TESTOPTS)

.PHONY: pythoninfo
pythoninfo: all
		$(RUNSHARED) $(HOSTRUNNER) ./$(BUILDPYTHON) -m test.pythoninfo

QUICKTESTOPTS=	$(TESTOPTS) -x test_subprocess test_io test_lib2to3 \
		test_multibytecodec test_urllib2_localnet test_itertools \
		test_multiprocessing_fork test_multiprocessing_spawn \
		test_multiprocessing_forkserver \
		test_mailbox test_nntplib test_socket test_poll \
		test_select test_zipfile test_concurrent_futures

.PHONY: quicktest
quicktest: all
		$(TESTRUNNER) $(QUICKTESTOPTS)

# SSL tests
.PHONY: multisslcompile
multisslcompile: all
	$(RUNSHARED) ./$(BUILDPYTHON) $(srcdir)/Tools/ssl/multissltests.py --steps=modules

.PHONY: multissltest
multissltest: all
	$(RUNSHARED) ./$(BUILDPYTHON) $(srcdir)/Tools/ssl/multissltests.py

# All install targets use the "all" target as synchronization point to
# prevent race conditions with PGO builds. PGO builds use recursive make,
# which can lead to two parallel `./python setup.py build` processes that
# step on each others toes.
.PHONY: install
install: @FRAMEWORKINSTALLFIRST@ commoninstall bininstall maninstall @FRAMEWORKINSTALLLAST@
	if test "x$(ENSUREPIP)" != "xno"  ; then \
		case $(ENSUREPIP) in \
			upgrade) ensurepip="--upgrade" ;; \
			install|*) ensurepip="" ;; \
		esac; \
		$(RUNSHARED) $(PYTHON_FOR_BUILD) -m ensurepip \
			$$ensurepip --root=$(DESTDIR)/ ; \
	fi

.PHONY: altinstall
altinstall: commoninstall
	if test "x$(ENSUREPIP)" != "xno"  ; then \
		case $(ENSUREPIP) in \
			upgrade) ensurepip="--altinstall --upgrade" ;; \
			install|*) ensurepip="--altinstall" ;; \
		esac; \
		$(RUNSHARED) $(PYTHON_FOR_BUILD) -m ensurepip \
			$$ensurepip --root=$(DESTDIR)/ ; \
	fi

.PHONY: commoninstall
commoninstall:  check-clean-src @FRAMEWORKALTINSTALLFIRST@ \
		altbininstall libinstall inclinstall libainstall \
		sharedinstall altmaninstall @FRAMEWORKALTINSTALLLAST@

# Install shared libraries enabled by Setup
DESTDIRS=	$(exec_prefix) $(LIBDIR) $(BINLIBDEST) $(DESTSHARED)

.PHONY: sharedinstall
sharedinstall: all
		@for i in $(DESTDIRS); \
		do \
			if test ! -d $(DESTDIR)$$i; then \
				echo "Creating directory $$i"; \
				$(INSTALL) -d -m $(DIRMODE) $(DESTDIR)$$i; \
			else    true; \
			fi; \
		done
		@for i in X $(SHAREDMODS); do \
		  if test $$i != X; then \
		    echo $(INSTALL_SHARED) $$i $(DESTSHARED)/`basename $$i`; \
		    $(INSTALL_SHARED) $$i $(DESTDIR)$(DESTSHARED)/`basename $$i`; \
			if test -d "$$i.dSYM"; then \
				echo $(DSYMUTIL_PATH) $(DESTDIR)$(DESTSHARED)/`basename $$i`; \
				$(DSYMUTIL_PATH) $(DESTDIR)$(DESTSHARED)/`basename $$i`; \
			fi; \
		  fi; \
		done

# Install the interpreter with $(VERSION) affixed
# This goes into $(exec_prefix)
.PHONY: altbininstall
altbininstall: $(BUILDPYTHON) @FRAMEWORKPYTHONW@
	@for i in $(BINDIR) $(LIBDIR); \
	do \
		if test ! -d $(DESTDIR)$$i; then \
			echo "Creating directory $$i"; \
			$(INSTALL) -d -m $(DIRMODE) $(DESTDIR)$$i; \
		else	true; \
		fi; \
	done
	if test "$(PYTHONFRAMEWORKDIR)" = "no-framework" ; then \
		$(INSTALL_PROGRAM) $(BUILDPYTHON) $(DESTDIR)$(BINDIR)/python$(LDVERSION)$(EXE); \
	else \
		$(INSTALL_PROGRAM) $(STRIPFLAG) Mac/pythonw $(DESTDIR)$(BINDIR)/python$(LDVERSION)$(EXE); \
	fi
	-if test "$(VERSION)" != "$(LDVERSION)"; then \
		if test -f $(DESTDIR)$(BINDIR)/python$(VERSION)$(EXE) -o -h $(DESTDIR)$(BINDIR)/python$(VERSION)$(EXE); \
		then rm -f $(DESTDIR)$(BINDIR)/python$(VERSION)$(EXE); \
		fi; \
		(cd $(DESTDIR)$(BINDIR); $(LN) python$(LDVERSION)$(EXE) python$(VERSION)$(EXE)); \
	fi
	@if test "$(PY_ENABLE_SHARED)" = 1 -o "$(STATIC_LIBPYTHON)" = 1; then \
		if test -f $(LDLIBRARY) && test "$(PYTHONFRAMEWORKDIR)" = "no-framework" ; then \
			if test -n "$(DLLLIBRARY)" ; then \
				$(INSTALL_SHARED) $(DLLLIBRARY) $(DESTDIR)$(BINDIR); \
			else \
				$(INSTALL_SHARED) $(LDLIBRARY) $(DESTDIR)$(LIBDIR)/$(INSTSONAME); \
				if test $(LDLIBRARY) != $(INSTSONAME); then \
					(cd $(DESTDIR)$(LIBDIR); $(LN) -sf $(INSTSONAME) $(LDLIBRARY)) \
				fi \
			fi; \
			if test -n "$(PY3LIBRARY)"; then \
				$(INSTALL_SHARED) $(PY3LIBRARY) $(DESTDIR)$(LIBDIR)/$(PY3LIBRARY); \
			fi; \
		else	true; \
		fi; \
	fi
	if test "x$(LIPO_32BIT_FLAGS)" != "x" ; then \
		rm -f $(DESTDIR)$(BINDIR)/python$(VERSION)-32$(EXE); \
		lipo $(LIPO_32BIT_FLAGS) \
			-output $(DESTDIR)$(BINDIR)/python$(VERSION)-32$(EXE) \
			$(DESTDIR)$(BINDIR)/python$(VERSION)$(EXE); \
	fi
	if test "x$(LIPO_INTEL64_FLAGS)" != "x" ; then \
		rm -f $(DESTDIR)$(BINDIR)/python$(VERSION)-intel64$(EXE); \
		lipo $(LIPO_INTEL64_FLAGS) \
			-output $(DESTDIR)$(BINDIR)/python$(VERSION)-intel64$(EXE) \
			$(DESTDIR)$(BINDIR)/python$(VERSION)$(EXE); \
	fi
	# Install macOS debug information (if available)
	if test -d "$(BUILDPYTHON).dSYM"; then \
		echo $(DSYMUTIL_PATH) $(DESTDIR)$(BINDIR)/python$(LDVERSION)$(EXE); \
		$(DSYMUTIL_PATH) $(DESTDIR)$(BINDIR)/python$(LDVERSION)$(EXE); \
	fi
	if test "$(PYTHONFRAMEWORKDIR)" = "no-framework" ; then \
		if test -d "$(LDLIBRARY).dSYM"; then \
			echo $(DSYMUTIL_PATH) $(DESTDIR)$(LIBDIR)/$(INSTSONAME); \
			$(DSYMUTIL_PATH) $(DESTDIR)$(LIBDIR)/$(INSTSONAME); \
		fi \
	else \
		if test -d "$(LDLIBRARY).dSYM"; then \
			echo $(DSYMUTIL_PATH) $(DESTDIR)$(PYTHONFRAMEWORKPREFIX)/$(INSTSONAME); \
      $(DSYMUTIL_PATH) $(DESTDIR)$(PYTHONFRAMEWORKPREFIX)/$(INSTSONAME); \
		fi \
	fi

.PHONY: bininstall
# We depend on commoninstall here to make sure the installation is already usable
# before we possibly overwrite the global 'python3' symlink to avoid causing
# problems for anything else trying to run 'python3' while we install, particularly
# if we're installing in parallel with -j.
bininstall: commoninstall altbininstall
	if test ! -d $(DESTDIR)$(LIBPC); then \
		echo "Creating directory $(LIBPC)"; \
		$(INSTALL) -d -m $(DIRMODE) $(DESTDIR)$(LIBPC); \
	fi
	-if test -f $(DESTDIR)$(BINDIR)/python3$(EXE) -o -h $(DESTDIR)$(BINDIR)/python3$(EXE); \
	then rm -f $(DESTDIR)$(BINDIR)/python3$(EXE); \
	else true; \
	fi
	(cd $(DESTDIR)$(BINDIR); $(LN) -s python$(VERSION)$(EXE) python3$(EXE))
	-if test "$(VERSION)" != "$(LDVERSION)"; then \
		rm -f $(DESTDIR)$(BINDIR)/python$(VERSION)-config; \
		(cd $(DESTDIR)$(BINDIR); $(LN) -s python$(LDVERSION)-config python$(VERSION)-config); \
		rm -f $(DESTDIR)$(LIBPC)/python-$(LDVERSION).pc; \
		(cd $(DESTDIR)$(LIBPC); $(LN) -s python-$(VERSION).pc python-$(LDVERSION).pc); \
		rm -f $(DESTDIR)$(LIBPC)/python-$(LDVERSION)-embed.pc; \
		(cd $(DESTDIR)$(LIBPC); $(LN) -s python-$(VERSION)-embed.pc python-$(LDVERSION)-embed.pc); \
	fi
	-rm -f $(DESTDIR)$(BINDIR)/python3-config
	(cd $(DESTDIR)$(BINDIR); $(LN) -s python$(VERSION)-config python3-config)
	-rm -f $(DESTDIR)$(LIBPC)/python3.pc
	(cd $(DESTDIR)$(LIBPC); $(LN) -s python-$(VERSION).pc python3.pc)
	-rm -f $(DESTDIR)$(LIBPC)/python3-embed.pc
	(cd $(DESTDIR)$(LIBPC); $(LN) -s python-$(VERSION)-embed.pc python3-embed.pc)
	-rm -f $(DESTDIR)$(BINDIR)/idle3
	(cd $(DESTDIR)$(BINDIR); $(LN) -s idle$(VERSION) idle3)
	-rm -f $(DESTDIR)$(BINDIR)/pydoc3
	(cd $(DESTDIR)$(BINDIR); $(LN) -s pydoc$(VERSION) pydoc3)
	-rm -f $(DESTDIR)$(BINDIR)/2to3
	(cd $(DESTDIR)$(BINDIR); $(LN) -s 2to3-$(VERSION) 2to3)
	if test "x$(LIPO_32BIT_FLAGS)" != "x" ; then \
		rm -f $(DESTDIR)$(BINDIR)/python3-32$(EXE); \
		(cd $(DESTDIR)$(BINDIR); $(LN) -s python$(VERSION)-32$(EXE) python3-32$(EXE)) \
	fi
	if test "x$(LIPO_INTEL64_FLAGS)" != "x" ; then \
		rm -f $(DESTDIR)$(BINDIR)/python3-intel64$(EXE); \
		(cd $(DESTDIR)$(BINDIR); $(LN) -s python$(VERSION)-intel64$(EXE) python3-intel64$(EXE)) \
	fi

# Install the versioned manual page
.PHONY: altmaninstall
altmaninstall:
	@for i in $(MANDIR) $(MANDIR)/man1; \
	do \
		if test ! -d $(DESTDIR)$$i; then \
			echo "Creating directory $$i"; \
			$(INSTALL) -d -m $(DIRMODE) $(DESTDIR)$$i; \
		else	true; \
		fi; \
	done
	$(INSTALL_DATA) $(srcdir)/Misc/python.man \
		$(DESTDIR)$(MANDIR)/man1/python$(VERSION).1

# Install the unversioned manual page
.PHONY: maninstall
maninstall:	altmaninstall
	-rm -f $(DESTDIR)$(MANDIR)/man1/python3.1
	(cd $(DESTDIR)$(MANDIR)/man1; $(LN) -s python$(VERSION).1 python3.1)

# Install the library
XMLLIBSUBDIRS=  xml xml/dom xml/etree xml/parsers xml/sax
LIBSUBDIRS=	asyncio \
		collections \
		concurrent concurrent/futures \
		csv \
		ctypes ctypes/macholib \
		curses \
		dbm \
		email email/mime \
		encodings \
		ensurepip ensurepip/_bundled \
		html \
		http \
		idlelib idlelib/Icons \
		importlib importlib/resources importlib/metadata \
		json \
		lib2to3 lib2to3/fixes lib2to3/pgen2 \
		logging \
		multiprocessing multiprocessing/dummy \
		pydoc_data \
		re \
		site-packages \
		sqlite3 \
		tkinter \
		tomllib \
		turtledemo \
		unittest \
		urllib \
		venv venv/scripts venv/scripts/common venv/scripts/posix \
		wsgiref \
		$(XMLLIBSUBDIRS) \
		xmlrpc \
		zipfile zipfile/_path \
		zoneinfo \
		__phello__
TESTSUBDIRS=	idlelib/idle_test \
		test \
		test/test_ast \
		test/audiodata \
		test/certdata \
		test/certdata/capath \
		test/cjkencodings \
		test/crashers \
		test/configdata \
		test/data \
		test/decimaltestdata \
		test/dtracedata \
		test/encoded_modules \
		test/imghdrdata \
		test/leakers \
		test/libregrtest \
		test/regrtestdata \
		test/regrtestdata/import_from_tests \
		test/regrtestdata/import_from_tests/test_regrtest_b \
		test/sndhdrdata \
		test/subprocessdata \
		test/support \
		test/support/_hypothesis_stubs \
		test/test_asyncio \
		test/test_capi \
		test/test_cppext \
		test/test_ctypes \
		test/test_dataclasses \
		test/test_doctest \
		test/test_email \
		test/test_email/data \
		test/test_future_stmt \
		test/test_gdb \
		test/test_inspect \
		test/test_import \
		test/test_import/data \
		test/test_import/data/circular_imports \
		test/test_import/data/circular_imports/subpkg \
		test/test_import/data/circular_imports/subpkg2 \
		test/test_import/data/circular_imports/subpkg2/parent \
		test/test_import/data/package \
		test/test_import/data/package2 \
		test/test_import/data/package3 \
		test/test_import/data/package4 \
		test/test_import/data/unwritable \
		test/test_importlib \
		test/test_importlib/builtin \
		test/test_importlib/data \
		test/test_importlib/extension \
		test/test_importlib/frozen \
		test/test_importlib/import_ \
		test/test_importlib/namespace_pkgs \
		test/test_importlib/namespace_pkgs/both_portions \
		test/test_importlib/namespace_pkgs/both_portions/foo \
		test/test_importlib/namespace_pkgs/module_and_namespace_package \
		test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test \
		test/test_importlib/namespace_pkgs/not_a_namespace_pkg \
		test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo \
		test/test_importlib/namespace_pkgs/portion1 \
		test/test_importlib/namespace_pkgs/portion1/foo \
		test/test_importlib/namespace_pkgs/portion2 \
		test/test_importlib/namespace_pkgs/portion2/foo \
		test/test_importlib/namespace_pkgs/project1 \
		test/test_importlib/namespace_pkgs/project1/parent \
		test/test_importlib/namespace_pkgs/project1/parent/child \
		test/test_importlib/namespace_pkgs/project2 \
		test/test_importlib/namespace_pkgs/project2/parent \
		test/test_importlib/namespace_pkgs/project2/parent/child \
		test/test_importlib/namespace_pkgs/project3 \
		test/test_importlib/namespace_pkgs/project3/parent \
		test/test_importlib/namespace_pkgs/project3/parent/child \
		test/test_importlib/partial \
		test/test_importlib/resources \
		test/test_importlib/resources/data01 \
		test/test_importlib/resources/data01/subdirectory \
		test/test_importlib/resources/data02 \
		test/test_importlib/resources/data02/one \
		test/test_importlib/resources/data02/subdirectory \
		test/test_importlib/resources/data02/subdirectory/subsubdir \
		test/test_importlib/resources/data02/two \
		test/test_importlib/resources/data03 \
		test/test_importlib/resources/data03/namespace \
		test/test_importlib/resources/data03/namespace/portion1 \
		test/test_importlib/resources/data03/namespace/portion2 \
		test/test_importlib/resources/namespacedata01 \
		test/test_importlib/resources/zipdata01 \
		test/test_importlib/resources/zipdata02 \
		test/test_importlib/source \
		test/test_json \
		test/test_lib2to3 \
		test/test_lib2to3/data \
		test/test_lib2to3/data/fixers \
		test/test_lib2to3/data/fixers/myfixes \
		test/test_module \
		test/test_peg_generator \
		test/test_pydoc \
		test/test_sqlite3 \
		test/test_tkinter \
		test/test_tomllib \
		test/test_tomllib/data \
		test/test_tomllib/data/invalid \
		test/test_tomllib/data/invalid/array \
		test/test_tomllib/data/invalid/array-of-tables \
		test/test_tomllib/data/invalid/boolean \
		test/test_tomllib/data/invalid/dates-and-times \
		test/test_tomllib/data/invalid/dotted-keys \
		test/test_tomllib/data/invalid/inline-table \
		test/test_tomllib/data/invalid/keys-and-vals \
		test/test_tomllib/data/invalid/literal-str \
		test/test_tomllib/data/invalid/multiline-basic-str \
		test/test_tomllib/data/invalid/multiline-literal-str \
		test/test_tomllib/data/invalid/table \
		test/test_tomllib/data/valid \
		test/test_tomllib/data/valid/array \
		test/test_tomllib/data/valid/dates-and-times \
		test/test_tomllib/data/valid/multiline-basic-str \
		test/test_tools \
		test/test_ttk \
		test/test_unittest \
		test/test_unittest/testmock \
		test/test_warnings \
		test/test_warnings/data \
		test/test_zipfile \
		test/test_zipfile/_path \
		test/test_zoneinfo \
		test/test_zoneinfo/data \
		test/tokenizedata \
		test/tracedmodules \
		test/typinganndata \
		test/wheeldata \
		test/xmltestdata \
		test/xmltestdata/c14n-20 \
		test/ziptestdata \
		test/test_concurrent_futures \
		test/test_multiprocessing_fork \
		test/test_multiprocessing_forkserver \
		test/test_multiprocessing_spawn

COMPILEALL_OPTS=-j0

TEST_MODULES=@TEST_MODULES@

.PHONY: libinstall
libinstall:	all $(srcdir)/Modules/xxmodule.c
	@for i in $(SCRIPTDIR) $(LIBDEST); \
	do \
		if test ! -d $(DESTDIR)$$i; then \
			echo "Creating directory $$i"; \
			$(INSTALL) -d -m $(DIRMODE) $(DESTDIR)$$i; \
		else	true; \
		fi; \
	done
	@if test "$(TEST_MODULES)" = yes; then \
		subdirs="$(LIBSUBDIRS) $(TESTSUBDIRS)"; \
	else \
		subdirs="$(LIBSUBDIRS)"; \
	fi; \
	for d in $$subdirs; \
	do \
		a=$(srcdir)/Lib/$$d; \
		if test ! -d $$a; then continue; else true; fi; \
		b=$(LIBDEST)/$$d; \
		if test ! -d $(DESTDIR)$$b; then \
			echo "Creating directory $$b"; \
			$(INSTALL) -d -m $(DIRMODE) $(DESTDIR)$$b; \
		else	true; \
		fi; \
	done
	@for i in $(srcdir)/Lib/*.py; \
	do \
		if test -x $$i; then \
			$(INSTALL_SCRIPT) $$i $(DESTDIR)$(LIBDEST); \
			echo $(INSTALL_SCRIPT) $$i $(LIBDEST); \
		else \
			$(INSTALL_DATA) $$i $(DESTDIR)$(LIBDEST); \
			echo $(INSTALL_DATA) $$i $(LIBDEST); \
		fi; \
	done
	@if test "$(TEST_MODULES)" = yes; then \
		subdirs="$(LIBSUBDIRS) $(TESTSUBDIRS)"; \
	else \
		subdirs="$(LIBSUBDIRS)"; \
	fi; \
	for d in $$subdirs; \
	do \
		a=$(srcdir)/Lib/$$d; \
		if test ! -d $$a; then continue; else true; fi; \
		if test `ls $$a | wc -l` -lt 1; then continue; fi; \
		b=$(LIBDEST)/$$d; \
		for i in $$a/*; \
		do \
			case $$i in \
			*CVS) ;; \
			*.py[co]) ;; \
			*.orig) ;; \
			*~) ;; \
			*) \
				if test -d $$i; then continue; fi; \
				if test -x $$i; then \
				    echo $(INSTALL_SCRIPT) $$i $$b; \
				    $(INSTALL_SCRIPT) $$i $(DESTDIR)$$b; \
				else \
				    echo $(INSTALL_DATA) $$i $$b; \
				    $(INSTALL_DATA) $$i $(DESTDIR)$$b; \
				fi;; \
			esac; \
		done; \
	done
	$(INSTALL_DATA) `cat pybuilddir.txt`/_sysconfigdata_$(ABIFLAGS)_$(MACHDEP)_$(MULTIARCH).py \
		$(DESTDIR)$(LIBDEST); \
	$(INSTALL_DATA) $(srcdir)/LICENSE $(DESTDIR)$(LIBDEST)/LICENSE.txt
	@ # Build PYC files for the 3 optimization levels (0, 1, 2)
	-PYTHONPATH=$(DESTDIR)$(LIBDEST) $(RUNSHARED) \
		$(PYTHON_FOR_BUILD) -Wi $(DESTDIR)$(LIBDEST)/compileall.py \
		-o 0 -o 1 -o 2 $(COMPILEALL_OPTS) -d $(LIBDEST) -f \
		-x 'bad_coding|badsyntax|site-packages|test/test_lib2to3/data' \
		$(DESTDIR)$(LIBDEST)
	-PYTHONPATH=$(DESTDIR)$(LIBDEST) $(RUNSHARED) \
		$(PYTHON_FOR_BUILD) -Wi $(DESTDIR)$(LIBDEST)/compileall.py \
		-o 0 -o 1 -o 2 $(COMPILEALL_OPTS) -d $(LIBDEST)/site-packages -f \
		-x badsyntax $(DESTDIR)$(LIBDEST)/site-packages
	-PYTHONPATH=$(DESTDIR)$(LIBDEST) $(RUNSHARED) \
		$(PYTHON_FOR_BUILD) -m lib2to3.pgen2.driver $(DESTDIR)$(LIBDEST)/lib2to3/Grammar.txt
	-PYTHONPATH=$(DESTDIR)$(LIBDEST) $(RUNSHARED) \
		$(PYTHON_FOR_BUILD) -m lib2to3.pgen2.driver $(DESTDIR)$(LIBDEST)/lib2to3/PatternGrammar.txt

# bpo-21536: Misc/python-config.sh is generated in the build directory
# from $(srcdir)Misc/python-config.sh.in.
python-config: $(srcdir)/Misc/python-config.in Misc/python-config.sh
	@ # Substitution happens here, as the completely-expanded BINDIR
	@ # is not available in configure
	sed -e "s,@EXENAME@,$(EXENAME)," < $(srcdir)/Misc/python-config.in >python-config.py
	@ # Replace makefile compat. variable references with shell script compat. ones; $(VAR) -> ${VAR}
	LC_ALL=C sed -e 's,\$$(\([A-Za-z0-9_]*\)),\$$\{\1\},g' < Misc/python-config.sh >python-config
	@ # On Darwin, always use the python version of the script, the shell
	@ # version doesn't use the compiler customizations that are provided
	@ # in python (_osx_support.py).
	@if test `uname -s` = Darwin; then \
		cp python-config.py python-config; \
	fi

# macOS' make seems to ignore a dependency on a
# "$(BUILD_SCRIPTS_DIR): $(MKDIR_P) $@" rule.
BUILD_SCRIPTS_DIR=build/scripts-$(VERSION)
SCRIPT_2TO3=$(BUILD_SCRIPTS_DIR)/2to3-$(VERSION)
SCRIPT_IDLE=$(BUILD_SCRIPTS_DIR)/idle$(VERSION)
SCRIPT_PYDOC=$(BUILD_SCRIPTS_DIR)/pydoc$(VERSION)

$(SCRIPT_2TO3): $(srcdir)/Tools/scripts/2to3
	@$(MKDIR_P) $(BUILD_SCRIPTS_DIR)
	sed -e "s,/usr/bin/env python3,$(EXENAME)," < $(srcdir)/Tools/scripts/2to3 > $@
	@chmod +x $@

$(SCRIPT_IDLE): $(srcdir)/Tools/scripts/idle3
	@$(MKDIR_P) $(BUILD_SCRIPTS_DIR)
	sed -e "s,/usr/bin/env python3,$(EXENAME)," < $(srcdir)/Tools/scripts/idle3 > $@
	@chmod +x $@

$(SCRIPT_PYDOC): $(srcdir)/Tools/scripts/pydoc3
	@$(MKDIR_P) $(BUILD_SCRIPTS_DIR)
	sed -e "s,/usr/bin/env python3,$(EXENAME)," < $(srcdir)/Tools/scripts/pydoc3 > $@
	@chmod +x $@

.PHONY: scripts
scripts: $(SCRIPT_2TO3) $(SCRIPT_IDLE) $(SCRIPT_PYDOC) python-config

# Install the include files
INCLDIRSTOMAKE=$(INCLUDEDIR) $(CONFINCLUDEDIR) $(INCLUDEPY) $(CONFINCLUDEPY)

.PHONY: inclinstall
inclinstall:
	@for i in $(INCLDIRSTOMAKE); \
	do \
		if test ! -d $(DESTDIR)$$i; then \
			echo "Creating directory $$i"; \
			$(INSTALL) -d -m $(DIRMODE) $(DESTDIR)$$i; \
		else	true; \
		fi; \
	done
	@if test ! -d $(DESTDIR)$(INCLUDEPY)/cpython; then \
		echo "Creating directory $(DESTDIR)$(INCLUDEPY)/cpython"; \
		$(INSTALL) -d -m $(DIRMODE) $(DESTDIR)$(INCLUDEPY)/cpython; \
	else	true; \
	fi
	@if test ! -d $(DESTDIR)$(INCLUDEPY)/internal; then \
		echo "Creating directory $(DESTDIR)$(INCLUDEPY)/internal"; \
		$(INSTALL) -d -m $(DIRMODE) $(DESTDIR)$(INCLUDEPY)/internal; \
	else	true; \
	fi
	@for i in $(srcdir)/Include/*.h; \
	do \
		echo $(INSTALL_DATA) $$i $(INCLUDEPY); \
		$(INSTALL_DATA) $$i $(DESTDIR)$(INCLUDEPY); \
	done
	@for i in $(srcdir)/Include/cpython/*.h; \
	do \
		echo $(INSTALL_DATA) $$i $(INCLUDEPY)/cpython; \
		$(INSTALL_DATA) $$i $(DESTDIR)$(INCLUDEPY)/cpython; \
	done
	@for i in $(srcdir)/Include/internal/*.h; \
	do \
		echo $(INSTALL_DATA) $$i $(INCLUDEPY)/internal; \
		$(INSTALL_DATA) $$i $(DESTDIR)$(INCLUDEPY)/internal; \
	done
	$(INSTALL_DATA) pyconfig.h $(DESTDIR)$(CONFINCLUDEPY)/pyconfig.h

# Install the library and miscellaneous stuff needed for extending/embedding
# This goes into $(exec_prefix)
LIBPL=		@LIBPL@

# pkgconfig directory
LIBPC=		$(LIBDIR)/pkgconfig

.PHONY: libainstall
libainstall: all scripts
	@for i in $(LIBDIR) $(LIBPL) $(LIBPC) $(BINDIR); \
	do \
		if test ! -d $(DESTDIR)$$i; then \
			echo "Creating directory $$i"; \
			$(INSTALL) -d -m $(DIRMODE) $(DESTDIR)$$i; \
		else	true; \
		fi; \
	done
	@if test "$(STATIC_LIBPYTHON)" = 1; then \
		if test -d $(LIBRARY); then :; else \
			if test "$(PYTHONFRAMEWORKDIR)" = no-framework; then \
				if test "$(SHLIB_SUFFIX)" = .dll; then \
					$(INSTALL_DATA) $(LDLIBRARY) $(DESTDIR)$(LIBPL) ; \
				else \
					$(INSTALL_DATA) $(LIBRARY) $(DESTDIR)$(LIBPL)/$(LIBRARY) ; \
				fi; \
			else \
				echo Skip install of $(LIBRARY) - use make frameworkinstall; \
			fi; \
		fi; \
		$(INSTALL_DATA) Programs/python.o $(DESTDIR)$(LIBPL)/python.o; \
	fi
	$(INSTALL_DATA) Modules/config.c $(DESTDIR)$(LIBPL)/config.c
	$(INSTALL_DATA) $(srcdir)/Modules/config.c.in $(DESTDIR)$(LIBPL)/config.c.in
	$(INSTALL_DATA) Makefile $(DESTDIR)$(LIBPL)/Makefile
	$(INSTALL_DATA) $(srcdir)/Modules/Setup $(DESTDIR)$(LIBPL)/Setup
	$(INSTALL_DATA) Modules/Setup.bootstrap $(DESTDIR)$(LIBPL)/Setup.bootstrap
	$(INSTALL_DATA) Modules/Setup.stdlib $(DESTDIR)$(LIBPL)/Setup.stdlib
	$(INSTALL_DATA) Modules/Setup.local $(DESTDIR)$(LIBPL)/Setup.local
	$(INSTALL_DATA) Misc/python.pc $(DESTDIR)$(LIBPC)/python-$(VERSION).pc
	$(INSTALL_DATA) Misc/python-embed.pc $(DESTDIR)$(LIBPC)/python-$(VERSION)-embed.pc
	$(INSTALL_SCRIPT) $(srcdir)/Modules/makesetup $(DESTDIR)$(LIBPL)/makesetup
	$(INSTALL_SCRIPT) $(srcdir)/install-sh $(DESTDIR)$(LIBPL)/install-sh
	$(INSTALL_SCRIPT) python-config.py $(DESTDIR)$(LIBPL)/python-config.py
	$(INSTALL_SCRIPT) python-config $(DESTDIR)$(BINDIR)/python$(LDVERSION)-config
	$(INSTALL_SCRIPT) $(SCRIPT_2TO3) $(DESTDIR)$(BINDIR)/2to3-$(VERSION)
	$(INSTALL_SCRIPT) $(SCRIPT_IDLE) $(DESTDIR)$(BINDIR)/idle$(VERSION)
	$(INSTALL_SCRIPT) $(SCRIPT_PYDOC) $(DESTDIR)$(BINDIR)/pydoc$(VERSION)
	@if [ -s Modules/python.exp -a \
		"`echo $(MACHDEP) | sed 's/^\(...\).*/\1/'`" = "aix" ]; then \
		echo; echo "Installing support files for building shared extension modules on AIX:"; \
		$(INSTALL_DATA) Modules/python.exp		\
				$(DESTDIR)$(LIBPL)/python.exp;		\
		echo; echo "$(LIBPL)/python.exp";		\
		$(INSTALL_SCRIPT) $(srcdir)/Modules/makexp_aix	\
				$(DESTDIR)$(LIBPL)/makexp_aix;		\
		echo "$(LIBPL)/makexp_aix";			\
		$(INSTALL_SCRIPT) Modules/ld_so_aix	\
				$(DESTDIR)$(LIBPL)/ld_so_aix;		\
		echo "$(LIBPL)/ld_so_aix";			\
		echo; echo "See Misc/README.AIX for details.";	\
	else true; \
	fi

# Here are a couple of targets for MacOSX again, to install a full
# framework-based Python. frameworkinstall installs everything, the
# subtargets install specific parts. Much of the actual work is offloaded to
# the Makefile in Mac
#
#
# This target is here for backward compatibility, previous versions of Python
# hadn't integrated framework installation in the normal install process.
.PHONY: frameworkinstall
frameworkinstall: install

# On install, we re-make the framework
# structure in the install location, /Library/Frameworks/ or the argument to
# --enable-framework. If --enable-framework has been specified then we have
# automatically set prefix to the location deep down in the framework, so we
# only have to cater for the structural bits of the framework.

.PHONY: frameworkinstallframework
frameworkinstallframework: frameworkinstallstructure install frameworkinstallmaclib

.PHONY: frameworkinstallstructure
frameworkinstallstructure:	$(LDLIBRARY)
	@if test "$(PYTHONFRAMEWORKDIR)" = no-framework; then \
		echo Not configured with --enable-framework; \
		exit 1; \
	else true; \
	fi
	@for i in $(prefix)/Resources/English.lproj $(prefix)/lib; do\
		if test ! -d $(DESTDIR)$$i; then \
			echo "Creating directory $(DESTDIR)$$i"; \
			$(INSTALL) -d -m $(DIRMODE) $(DESTDIR)$$i; \
		else	true; \
		fi; \
	done
	$(LN) -fsn include/python$(LDVERSION) $(DESTDIR)$(prefix)/Headers
	sed 's/%VERSION%/'"`$(RUNSHARED) ./$(BUILDPYTHON) -c 'import platform; print(platform.python_version())'`"'/g' < $(RESSRCDIR)/Info.plist > $(DESTDIR)$(prefix)/Resources/Info.plist
	$(LN) -fsn $(VERSION) $(DESTDIR)$(PYTHONFRAMEWORKINSTALLDIR)/Versions/Current
	$(LN) -fsn Versions/Current/$(PYTHONFRAMEWORK) $(DESTDIR)$(PYTHONFRAMEWORKINSTALLDIR)/$(PYTHONFRAMEWORK)
	$(LN) -fsn Versions/Current/Headers $(DESTDIR)$(PYTHONFRAMEWORKINSTALLDIR)/Headers
	$(LN) -fsn Versions/Current/Resources $(DESTDIR)$(PYTHONFRAMEWORKINSTALLDIR)/Resources
	$(INSTALL_SHARED) $(LDLIBRARY) $(DESTDIR)$(PYTHONFRAMEWORKPREFIX)/$(LDLIBRARY)

# This installs Mac/Lib into the framework
# Install a number of symlinks to keep software that expects a normal unix
# install (which includes python-config) happy.
.PHONY: frameworkinstallmaclib
frameworkinstallmaclib:
	$(LN) -fs "../../../$(PYTHONFRAMEWORK)" "$(DESTDIR)$(LIBPL)/libpython$(LDVERSION).a"
	$(LN) -fs "../../../$(PYTHONFRAMEWORK)" "$(DESTDIR)$(LIBPL)/libpython$(LDVERSION).dylib"
	$(LN) -fs "../../../$(PYTHONFRAMEWORK)" "$(DESTDIR)$(LIBPL)/libpython$(VERSION).a"
	$(LN) -fs "../../../$(PYTHONFRAMEWORK)" "$(DESTDIR)$(LIBPL)/libpython$(VERSION).dylib"
	$(LN) -fs "../$(PYTHONFRAMEWORK)" "$(DESTDIR)$(prefix)/lib/libpython$(LDVERSION).dylib"
	$(LN) -fs "../$(PYTHONFRAMEWORK)" "$(DESTDIR)$(prefix)/lib/libpython$(VERSION).dylib"

# This installs the IDE, the Launcher and other apps into /Applications
.PHONY: frameworkinstallapps
frameworkinstallapps:
	cd Mac && $(MAKE) installapps DESTDIR="$(DESTDIR)"

# Build the bootstrap executable that will spawn the interpreter inside
# an app bundle within the framework.  This allows the interpreter to
# run OS X GUI APIs.
.PHONY: frameworkpythonw
frameworkpythonw:
	cd Mac && $(MAKE) pythonw

# This installs the python* and other bin symlinks in $prefix/bin or in
# a bin directory relative to the framework root
.PHONY: frameworkinstallunixtools
frameworkinstallunixtools:
	cd Mac && $(MAKE) installunixtools DESTDIR="$(DESTDIR)"

.PHONY: frameworkaltinstallunixtools
frameworkaltinstallunixtools:
	cd Mac && $(MAKE) altinstallunixtools DESTDIR="$(DESTDIR)"

# This installs the Tools into the applications directory.
# It is not part of a normal frameworkinstall
.PHONY: frameworkinstallextras
frameworkinstallextras:
	cd Mac && $(MAKE) installextras DESTDIR="$(DESTDIR)"

# Build the toplevel Makefile
Makefile.pre: $(srcdir)/Makefile.pre.in config.status
	CONFIG_FILES=Makefile.pre CONFIG_HEADERS= ./config.status
	$(MAKE) -f Makefile.pre Makefile

# Run the configure script.
config.status:	$(srcdir)/configure
	$(srcdir)/configure $(CONFIG_ARGS)

.PRECIOUS: config.status $(BUILDPYTHON) Makefile Makefile.pre

Python/asm_trampoline.o: $(srcdir)/Python/asm_trampoline.S
	$(CC) -c $(PY_CORE_CFLAGS) -o $@ $<

# Some make's put the object file in the current directory
.c.o:
	$(CC) -c $(PY_CORE_CFLAGS) -o $@ $<

# bpo-30104: dtoa.c uses union to cast double to unsigned long[2]. clang 4.0
# with -O2 or higher and strict aliasing miscompiles the ratio() function
# causing rounding issues. Compile dtoa.c using -fno-strict-aliasing on clang.
# https://bugs.llvm.org//show_bug.cgi?id=31928
Python/dtoa.o: Python/dtoa.c
	$(CC) -c $(PY_CORE_CFLAGS) $(CFLAGS_ALIASING) -o $@ $<

# Run reindent on the library
.PHONY: reindent
reindent:
	./$(BUILDPYTHON) $(srcdir)/Tools/patchcheck/reindent.py -r $(srcdir)/Lib

# Rerun configure with the same options as it was run last time,
# provided the config.status script exists
.PHONY: recheck
recheck:
	./config.status --recheck
	./config.status

# Regenerate configure and pyconfig.h.in
.PHONY: autoconf
autoconf:
	(cd $(srcdir); autoreconf -ivf -Werror)

.PHONY: regen-configure
regen-configure:
	$(srcdir)/Tools/build/regen-configure.sh

.PHONY: regen-sbom
regen-sbom:
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/build/generate_sbom.py

# Create a tags file for vi
tags::
	ctags -w $(srcdir)/Include/*.h $(srcdir)/Include/cpython/*.h $(srcdir)/Include/internal/*.h
	for i in $(SRCDIRS); do ctags -f tags -w -a $(srcdir)/$$i/*.[ch]; done
	ctags -f tags -w -a $(srcdir)/Modules/_ctypes/*.[ch]
	find $(srcdir)/Lib -type f -name "*.py" -not -name "test_*.py" -not -path "*/test/*" -not -path "*/tests/*" -not -path "*/*_test/*" | ctags -f tags -w -a -L -
	LC_ALL=C sort -o tags tags

# Create a tags file for GNU Emacs
TAGS::
	cd $(srcdir); \
	etags Include/*.h Include/cpython/*.h Include/internal/*.h; \
	for i in $(SRCDIRS); do etags -a $$i/*.[ch]; done
	etags -a $(srcdir)/Modules/_ctypes/*.[ch]
	find $(srcdir)/Lib -type f -name "*.py" -not -name "test_*.py" -not -path "*/test/*" -not -path "*/tests/*" -not -path "*/*_test/*" | etags - -a

# Sanitation targets -- clean leaves libraries, executables and tags
# files, which clobber removes as well
.PHONY: pycremoval
pycremoval:
	-find $(srcdir) -depth -name '__pycache__' -exec rm -rf {} ';'
	-find $(srcdir) -name '*.py[co]' -exec rm -f {} ';'

.PHONY: rmtestturds
rmtestturds:
	-rm -f *BAD *GOOD *SKIPPED
	-rm -rf OUT
	-rm -f *.TXT
	-rm -f *.txt
	-rm -f gb-18030-2000.xml

.PHONY: docclean
docclean:
	$(MAKE) -C $(srcdir)/Doc clean

# like the 'clean' target but retain the profile guided optimization (PGO)
# data.  The PGO data is only valid if source code remains unchanged.
.PHONY: clean-retain-profile
clean-retain-profile: pycremoval
	find . -name '*.[oa]' -exec rm -f {} ';'
	find . -name '*.s[ol]' -exec rm -f {} ';'
	find . -name '*.so.[0-9]*.[0-9]*' -exec rm -f {} ';'
	find . -name '*.lto' -exec rm -f {} ';'
	find . -name '*.wasm' -exec rm -f {} ';'
	find . -name '*.lst' -exec rm -f {} ';'
	find build -name 'fficonfig.h' -exec rm -f {} ';' || true
	find build -name '*.py' -exec rm -f {} ';' || true
	find build -name '*.py[co]' -exec rm -f {} ';' || true
	-rm -f pybuilddir.txt
	-rm -f Lib/lib2to3/*Grammar*.pickle
	-rm -f _bootstrap_python
	-rm -f python.html python*.js python.data python*.symbols python*.map
	-rm -f $(WASM_STDLIB)
	-rm -f Programs/_testembed Programs/_freeze_module
	-rm -f Python/deepfreeze/*.[co]
	-rm -f Python/frozen_modules/*.h
	-rm -f Python/frozen_modules/MANIFEST
	-find build -type f -a ! -name '*.gc??' -exec rm -f {} ';'
	-rm -f Include/pydtrace_probes.h
	-rm -f profile-gen-stamp

.PHONY: profile-removal
profile-removal:
	find . -name '*.gc??' -exec rm -f {} ';'
	find . -name '*.profclang?' -exec rm -f {} ';'
	find . -name '*.dyn' -exec rm -f {} ';'
	rm -f $(COVERAGE_INFO)
	rm -rf $(COVERAGE_REPORT)
	rm -f profile-run-stamp
	rm -f profile-bolt-stamp

.PHONY: clean
clean: clean-retain-profile clean-bolt
	@if test @DEF_MAKE_ALL_RULE@ = profile-opt -o @DEF_MAKE_ALL_RULE@ = bolt-opt; then \
		rm -f profile-gen-stamp profile-clean-stamp; \
		$(MAKE) profile-removal; \
	fi

.PHONY: clobber
clobber: clean
	-rm -f $(BUILDPYTHON) $(LIBRARY) $(LDLIBRARY) $(DLLLIBRARY) \
		tags TAGS \
		config.cache config.log pyconfig.h Modules/config.c
	-rm -rf build platform
	-rm -rf $(PYTHONFRAMEWORKDIR)
	-rm -f python-config.py python-config

# Make things extra clean, before making a distribution:
# remove all generated files, even Makefile[.pre]
# Keep configure and Python-ast.[ch], it's possible they can't be generated
.PHONY: distclean
distclean: clobber docclean
	for file in $(srcdir)/Lib/test/data/* ; do \
	    if test "$$file" != "$(srcdir)/Lib/test/data/README"; then rm "$$file"; fi; \
	done
	-rm -f core Makefile Makefile.pre config.status Modules/Setup.local \
	    Modules/Setup.bootstrap Modules/Setup.stdlib \
		Modules/ld_so_aix Modules/python.exp Misc/python.pc \
		Misc/python-embed.pc Misc/python-config.sh
	-rm -f python*-gdb.py
	# Issue #28258: set LC_ALL to avoid issues with Estonian locale.
	# Expansion is performed here by shell (spawned by make) itself before
	# arguments are passed to find. So LC_ALL=C must be set as a separate
	# command.
	LC_ALL=C; find $(srcdir)/[a-zA-Z]* '(' -name '*.fdc' -o -name '*~' \
				     -o -name '[@,#]*' -o -name '*.old' \
				     -o -name '*.orig' -o -name '*.rej' \
				     -o -name '*.bak' ')' \
				     -exec rm -f {} ';'

# Check that all symbols exported by libpython start with "Py" or "_Py"
.PHONY: smelly
smelly: all
	$(RUNSHARED) ./$(BUILDPYTHON) $(srcdir)/Tools/build/smelly.py

# Check if any unsupported C global variables have been added.
.PHONY: check-c-globals
check-c-globals:
	$(PYTHON_FOR_REGEN) $(srcdir)/Tools/c-analyzer/check-c-globals.py \
		--format summary \
		--traceback

# Find files with funny names
.PHONY: funny
funny:
	find $(SUBDIRS) $(SUBDIRSTOO) \
		-type d \
		-o -name '*.[chs]' \
		-o -name '*.py' \
		-o -name '*.pyw' \
		-o -name '*.dat' \
		-o -name '*.el' \
		-o -name '*.fd' \
		-o -name '*.in' \
		-o -name '*.gif' \
		-o -name '*.txt' \
		-o -name '*.xml' \
		-o -name '*.xbm' \
		-o -name '*.xpm' \
		-o -name '*.uue' \
		-o -name '*.decTest' \
		-o -name '*.tmCommand' \
		-o -name '*.tmSnippet' \
		-o -name 'Setup' \
		-o -name 'Setup.*' \
		-o -name README \
		-o -name NEWS \
		-o -name HISTORY \
		-o -name Makefile \
		-o -name ChangeLog \
		-o -name .hgignore \
		-o -name MANIFEST \
		-o -print

# Perform some verification checks on any modified files.
.PHONY: patchcheck
patchcheck: all
	$(RUNSHARED) ./$(BUILDPYTHON) $(srcdir)/Tools/patchcheck/patchcheck.py

.PHONY: check-limited-abi
check-limited-abi: all
	$(RUNSHARED) ./$(BUILDPYTHON) $(srcdir)/Tools/build/stable_abi.py --all $(srcdir)/Misc/stable_abi.toml

.PHONY: update-config
update-config:
	curl -sL -o config.guess 'https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD'
	curl -sL -o config.sub 'https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD'
	chmod +x config.guess config.sub

# Dependencies

Python/thread.o: @THREADHEADERS@ $(srcdir)/Python/condvar.h

##########################################################################
# Module dependencies and platform-specific files

# force rebuild when header file or module build flavor (static/shared) is changed
MODULE_DEPS_STATIC=Modules/config.c
MODULE_DEPS_SHARED=$(MODULE_DEPS_STATIC) $(EXPORTSYMS)

MODULE_CMATH_DEPS=$(srcdir)/Modules/_math.h
MODULE_MATH_DEPS=$(srcdir)/Modules/_math.h
MODULE_PYEXPAT_DEPS=@LIBEXPAT_INTERNAL@
MODULE_UNICODEDATA_DEPS=$(srcdir)/Modules/unicodedata_db.h $(srcdir)/Modules/unicodename_db.h
MODULE__BLAKE2_DEPS=$(srcdir)/Modules/_blake2/impl/blake2-config.h $(srcdir)/Modules/_blake2/impl/blake2-impl.h $(srcdir)/Modules/_blake2/impl/blake2.h $(srcdir)/Modules/_blake2/impl/blake2b-load-sse2.h $(srcdir)/Modules/_blake2/impl/blake2b-load-sse41.h $(srcdir)/Modules/_blake2/impl/blake2b-ref.c $(srcdir)/Modules/_blake2/impl/blake2b-round.h $(srcdir)/Modules/_blake2/impl/blake2b.c $(srcdir)/Modules/_blake2/impl/blake2s-load-sse2.h $(srcdir)/Modules/_blake2/impl/blake2s-load-sse41.h $(srcdir)/Modules/_blake2/impl/blake2s-load-xop.h $(srcdir)/Modules/_blake2/impl/blake2s-ref.c $(srcdir)/Modules/_blake2/impl/blake2s-round.h $(srcdir)/Modules/_blake2/impl/blake2s.c $(srcdir)/Modules/_blake2/blake2module.h $(srcdir)/Modules/hashlib.h
MODULE__CTYPES_DEPS=$(srcdir)/Modules/_ctypes/ctypes.h
MODULE__CTYPES_MALLOC_CLOSURE=@MODULE__CTYPES_MALLOC_CLOSURE@
MODULE__DECIMAL_DEPS=$(srcdir)/Modules/_decimal/docstrings.h @LIBMPDEC_INTERNAL@
MODULE__ELEMENTTREE_DEPS=$(srcdir)/Modules/pyexpat.c @LIBEXPAT_INTERNAL@
MODULE__HASHLIB_DEPS=$(srcdir)/Modules/hashlib.h
MODULE__IO_DEPS=$(srcdir)/Modules/_io/_iomodule.h
MODULE__MD5_DEPS=$(srcdir)/Modules/hashlib.h $(LIBHACL_HEADERS) Modules/_hacl/Hacl_Hash_MD5.h Modules/_hacl/Hacl_Hash_MD5.c
MODULE__SHA1_DEPS=$(srcdir)/Modules/hashlib.h $(LIBHACL_HEADERS) Modules/_hacl/Hacl_Hash_SHA1.h Modules/_hacl/Hacl_Hash_SHA1.c
MODULE__SHA2_DEPS=$(srcdir)/Modules/hashlib.h $(LIBHACL_SHA2_HEADERS) $(LIBHACL_SHA2_A)
MODULE__SHA3_DEPS=$(srcdir)/Modules/hashlib.h $(LIBHACL_HEADERS) Modules/_hacl/Hacl_Hash_SHA3.h Modules/_hacl/Hacl_Hash_SHA3.c
MODULE__SOCKET_DEPS=$(srcdir)/Modules/socketmodule.h $(srcdir)/Modules/addrinfo.h $(srcdir)/Modules/getaddrinfo.c $(srcdir)/Modules/getnameinfo.c
MODULE__SSL_DEPS=$(srcdir)/Modules/_ssl.h $(srcdir)/Modules/_ssl/cert.c $(srcdir)/Modules/_ssl/debughelpers.c $(srcdir)/Modules/_ssl/misc.c $(srcdir)/Modules/_ssl_data.h $(srcdir)/Modules/_ssl_data_111.h $(srcdir)/Modules/_ssl_data_300.h $(srcdir)/Modules/socketmodule.h
MODULE__TESTCAPI_DEPS=$(srcdir)/Modules/_testcapi/testcapi_long.h $(srcdir)/Modules/_testcapi/parts.h $(srcdir)/Modules/_testcapi/util.h
MODULE__SQLITE3_DEPS=$(srcdir)/Modules/_sqlite/connection.h $(srcdir)/Modules/_sqlite/cursor.h $(srcdir)/Modules/_sqlite/microprotocols.h $(srcdir)/Modules/_sqlite/module.h $(srcdir)/Modules/_sqlite/prepare_protocol.h $(srcdir)/Modules/_sqlite/row.h $(srcdir)/Modules/_sqlite/util.h

CODECS_COMMON_HEADERS=$(srcdir)/Modules/cjkcodecs/multibytecodec.h $(srcdir)/Modules/cjkcodecs/cjkcodecs.h
MODULE__CODECS_CN_DEPS=$(srcdir)/Modules/cjkcodecs/mappings_cn.h $(CODECS_COMMON_HEADERS)
MODULE__CODECS_HK_DEPS=$(srcdir)/Modules/cjkcodecs/mappings_hk.h  $(CODECS_COMMON_HEADERS)
MODULE__CODECS_ISO2022_DEPS=$(srcdir)/Modules/cjkcodecs/mappings_jisx0213_pair.h $(srcdir)/Modules/cjkcodecs/alg_jisx0201.h $(srcdir)/Modules/cjkcodecs/emu_jisx0213_2000.h $(CODECS_COMMON_HEADERS)
MODULE__CODECS_JP_DEPS=$(srcdir)/Modules/cjkcodecs/mappings_jisx0213_pair.h $(srcdir)/Modules/cjkcodecs/alg_jisx0201.h $(srcdir)/Modules/cjkcodecs/emu_jisx0213_2000.h $(srcdir)/Modules/cjkcodecs/mappings_jp.h $(CODECS_COMMON_HEADERS)
MODULE__CODECS_KR_DEPS=$(srcdir)/Modules/cjkcodecs/mappings_kr.h $(CODECS_COMMON_HEADERS)
MODULE__CODECS_TW_DEPS=$(srcdir)/Modules/cjkcodecs/mappings_tw.h $(CODECS_COMMON_HEADERS)
MODULE__MULTIBYTECODEC_DEPS=$(srcdir)/Modules/cjkcodecs/multibytecodec.h

# IF YOU PUT ANYTHING HERE IT WILL GO AWAY
# Local Variables:
# mode: makefile
# End:
